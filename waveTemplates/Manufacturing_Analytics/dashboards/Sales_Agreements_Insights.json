{
  "name" : "Sales_Agreements_Insights_tp",
  "label" : "Sales Agreements Insights",
  "folder" : {
    "id" : "${App.Folder.Id}"
  },
  "dateVersion" : 1,
  "mobileDisabled" : false,
  "xmd" : {
    "measures" : [
      {
        "conditionalFormatting" : { },
        "field" : "__ACTIVE_AGREEMENTS_1.E",
        "format" : { }
      },
      {
        "conditionalFormatting" : { },
        "field" : "Demand_Shortfall_1.$ Demand Shortfall",
        "format" : { }
      },
      {
        "conditionalFormatting" : { },
        "field" : "Demand_Shortfall_Ove_1.Demand Shortfall",
        "format" : { }
      },
      {
        "conditionalFormatting" : {
          "chartColor" : {
            "referenceField" : "Mod",
            "type" : "categories",
            "parameters" : { }
          }
        },
        "field" : "Demand_Shortfall_1.$ Actual vs Planned Difference",
        "format" : { }
      },
      {
        "conditionalFormatting" : {
          "chartColor" : {
            "referenceField" : "Actual vs Planned Difference",
            "type" : "multiple",
            "parameters" : {
              "bins" : [
                {
                  "formatValue" : "#B50E03",
                  "bin" : "*"
                },
                {
                  "formatValue" : "#00B531",
                  "bin" : "0"
                }
              ]
            }
          }
        },
        "field" : "Demand_Shortfall_Ove_1.Actual vs Planned Difference",
        "format" : { }
      },
      {
        "conditionalFormatting" : { },
        "field" : "Pipeline_KPI_1.A",
        "format" : { }
      },
      {
        "conditionalFormatting" : { },
        "field" : "Pipeline_KPI_1.B",
        "format" : { }
      },
      {
        "conditionalFormatting" : { },
        "field" : "Pipeline_KPI_1.C",
        "format" : { }
      },
      {
        "conditionalFormatting" : { },
        "field" : "Pipeline_KPI_1.D",
        "format" : { }
      },
      {
        "conditionalFormatting" : { },
        "field" : "Agreements_that_need_2.E",
        "format" : { }
      }
    ],
    "derivedDimensions" : [ ],
    "organizations" : [ ],
    "showDetailsDefaultFields" : [ ],
    "dates" : [ ],
    "derivedMeasures" : [ ],
    "dimensions" : [
      {
        "recordDisplayFields" : [ ],
        "conditionalFormatting" : {
          "chartColor" : {
            "referenceField" : "Mod",
            "type" : "categories",
            "parameters" : { }
          }
        },
        "salesforceActions" : [ ],
        "field" : "Demand_Shortfall_1.ALL",
        "members" : [ ],
        "customActions" : [ ]
      },
      {
        "recordDisplayFields" : [ ],
        "conditionalFormatting" : {
          "chartColor" : {
            "referenceField" : "Actual vs Planned Difference",
            "type" : "multiple",
            "parameters" : {
              "bins" : [
                {
                  "formatValue" : "#B50E03",
                  "bin" : "*"
                },
                {
                  "formatValue" : "#00B531",
                  "bin" : "0"
                }
              ]
            }
          }
        },
        "salesforceActions" : [ ],
        "field" : "Demand_Shortfall_Ove_1.ALL",
        "members" : [ ],
        "customActions" : [ ]
      }
    ]
  },
  "state" : {
    "dataSourceLinks" : [ ],
    "filters" : [
      {
        "dataset" : {
          "name" : "${App.Datasets.MFG_SalesAgreementProductSchedule_tp.Name}"
        },
        "dependent" : true,
        "fields" : [
          "SalesAgreementProduct.SalesAgreement.Account.Owner.Name"
        ],
        "locked" : false,
        "operator" : "in"
      },
      {
        "dataset" : {
          "name" : "${App.Datasets.MFG_SalesAgreementProductSchedule_tp.Name}"
        },
        "dependent" : true,
        "fields" : [
          "SalesAgreementProduct.SalesAgreement.Account.Type"
        ],
        "locked" : false,
        "operator" : "in"
      },
      {
        "dataset" : {
          "name" : "${App.Datasets.MFG_SalesAgreementProductSchedule_tp.Name}"
        },
        "dependent" : true,
        "fields" : [
          "SalesAgreementProduct.SalesAgreement.Account.Parent.Name"
        ],
        "locked" : false,
        "operator" : "in"
      },
      {
        "dataset" : {
          "name" : "${App.Datasets.MFG_SalesAgreementProductSchedule_tp.Name}"
        },
        "dependent" : true,
        "fields" : [
          "SalesAgreementProduct.SalesAgreement.ScheduleFrequency"
        ],
        "locked" : false,
        "operator" : "in"
      },
      {
        "dataset" : {
          "name" : "${App.Datasets.MFG_SalesAgreementProductSchedule_tp.Name}"
        },
        "dependent" : true,
        "fields" : [
          "SalesAgreementProduct.SalesAgreement.ActualsCalculationMode"
        ],
        "locked" : false,
        "operator" : "in"
      },
      {
        "dataset" : {
          "name" : "${App.Datasets.MFG_SalesAgreementProductSchedule_tp.Name}"
        },
        "dependent" : true,
        "fields" : [
          "SalesAgreementProduct.PricebookEntry.Pricebook.Name"
        ],
        "locked" : false,
        "operator" : "in"
      }
    ],
    "gridLayouts" : [
      {
        "maxWidth" : 1500,
        "name" : "Default",
        "numColumns" : 50,
        "pages" : [
          {
            "label" : "PERFORMANCE",
            "name" : "bdfe8489-27a5-4488-8357-f9e4415f3972",
            "navigationHidden" : false,
            "widgets" : [
              {
                "colspan" : 50,
                "column" : 0,
                "name" : "container_8",
                "row" : 7,
                "rowspan" : 6,
                "widgetStyle" : {
                  "backgroundColor" : "rgb(228, 234, 239)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 6,
                "column" : 1,
                "name" : "filterpanel_3",
                "row" : 8,
                "rowspan" : 4,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 4,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 6,
                "column" : 8,
                "name" : "filterpanel_4",
                "row" : 8,
                "rowspan" : 4,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [
                    "bottom"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 4
                }
              },
              {
                "colspan" : 6,
                "column" : 15,
                "name" : "listselector_1",
                "row" : 8,
                "rowspan" : 4,
                "widgetStyle" : {
                  "backgroundColor" : "rgb(255, 255, 255)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [
                    "bottom"
                  ],
                  "borderRadius" : 4,
                  "borderWidth" : 4
                }
              },
              {
                "colspan" : 6,
                "column" : 22,
                "name" : "filterpanel_7",
                "row" : 8,
                "rowspan" : 4,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 4,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 6,
                "column" : 29,
                "name" : "filterpanel_8",
                "row" : 8,
                "rowspan" : 4,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 4,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 6,
                "column" : 36,
                "name" : "filterpanel_6",
                "row" : 8,
                "rowspan" : 4,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 4,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 6,
                "column" : 43,
                "name" : "filterpanel_5",
                "row" : 8,
                "rowspan" : 4,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 4,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 50,
                "column" : 0,
                "name" : "container_2",
                "row" : 13,
                "rowspan" : 7,
                "widgetStyle" : {
                  "backgroundColor" : "rgb(17, 48, 91)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 8,
                "column" : 1,
                "name" : "text_2",
                "row" : 14,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 8,
                "column" : 9,
                "name" : "text_3",
                "row" : 14,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 9,
                "column" : 18,
                "name" : "text_4",
                "row" : 14,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 6,
                "column" : 28,
                "name" : "text_16",
                "row" : 14,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 5,
                "column" : 35,
                "name" : "text_7",
                "row" : 14,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 6,
                "column" : 1,
                "name" : "number_1",
                "row" : 16,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 6,
                "column" : 9,
                "name" : "number_2",
                "row" : 16,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 7,
                "column" : 18,
                "name" : "number_3",
                "row" : 16,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 6,
                "column" : 28,
                "name" : "number_11",
                "row" : 16,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 5,
                "column" : 35,
                "name" : "number_4",
                "row" : 16,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 22,
                "column" : 1,
                "name" : "text_6",
                "row" : 21,
                "rowspan" : 4,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 48,
                "column" : 1,
                "name" : "table_1",
                "row" : 25,
                "rowspan" : 30,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 24,
                "column" : 2,
                "name" : "text_8",
                "row" : 60,
                "rowspan" : 5,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "rgba(255, 255, 255, 0)",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 8
                }
              },
              {
                "colspan" : 13,
                "column" : 26,
                "name" : "text_11",
                "row" : 60,
                "rowspan" : 5,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#FFFFFF",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 8
                }
              },
              {
                "colspan" : 9,
                "column" : 39,
                "name" : "pillbox_1",
                "row" : 61,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "rgb(255, 255, 255)",
                  "borderColor" : "rgba(230, 236, 242, 0)",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 22,
                "column" : 2,
                "name" : "chart_1",
                "row" : 65,
                "rowspan" : 30,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#FFFFFF",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 8
                }
              },
              {
                "colspan" : 22,
                "column" : 26,
                "name" : "chart_2",
                "row" : 65,
                "rowspan" : 30,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#FFFFFF",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 8
                }
              },
              {
                "colspan" : 48,
                "column" : 1,
                "name" : "container_6",
                "row" : 99,
                "rowspan" : 37,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 46,
                "column" : 2,
                "name" : "text_12",
                "row" : 100,
                "rowspan" : 5,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 37,
                "column" : 11,
                "name" : "chart_3",
                "row" : 106,
                "rowspan" : 10,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 9,
                "column" : 2,
                "name" : "number_5",
                "row" : 109,
                "rowspan" : 4,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 9,
                "column" : 2,
                "name" : "number_6",
                "row" : 118,
                "rowspan" : 4,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 37,
                "column" : 11,
                "name" : "chart_5",
                "row" : 117,
                "rowspan" : 19,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 9,
                "column" : 2,
                "name" : "number_7",
                "row" : 127,
                "rowspan" : 4,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 50,
                "column" : 0,
                "name" : "container_5",
                "row" : 139,
                "rowspan" : 38,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 7,
                "column" : 1,
                "name" : "text_5",
                "row" : 140,
                "rowspan" : 4,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 48,
                "column" : 1,
                "name" : "table_2",
                "row" : 144,
                "rowspan" : 31,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 48,
                "column" : 1,
                "name" : "container_11",
                "row" : 60,
                "rowspan" : 36,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 8
                }
              },
              {
                "colspan" : 48,
                "column" : 1,
                "name" : "container_12",
                "row" : 57,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "rgb(220, 228, 239)",
                  "borderColor" : "#FFFFFF",
                  "borderEdges" : [
                    "bottom"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 8
                }
              },
              {
                "colspan" : 1,
                "column" : 0,
                "name" : "container_13",
                "row" : 57,
                "rowspan" : 82,
                "widgetStyle" : {
                  "backgroundColor" : "rgb(220, 228, 239)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 48,
                "column" : 1,
                "name" : "container_15",
                "row" : 96,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "rgb(220, 228, 239)",
                  "borderColor" : "#FFFFFF",
                  "borderEdges" : [
                    "top"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 8
                }
              },
              {
                "colspan" : 1,
                "column" : 49,
                "name" : "container_16",
                "row" : 57,
                "rowspan" : 82,
                "widgetStyle" : {
                  "backgroundColor" : "rgb(220, 228, 239)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 48,
                "column" : 1,
                "name" : "container_17",
                "row" : 136,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "rgb(220, 228, 239)",
                  "borderColor" : "#FFFFFF",
                  "borderEdges" : [
                    "top"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 8
                }
              },
              {
                "colspan" : 6,
                "column" : 2,
                "name" : "text_14",
                "row" : 105,
                "rowspan" : 4,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 9,
                "column" : 2,
                "name" : "text_18",
                "row" : 116,
                "rowspan" : 2,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 9,
                "column" : 2,
                "name" : "text_19",
                "row" : 125,
                "rowspan" : 2,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 15,
                "column" : 13,
                "name" : "navigation_1",
                "row" : 0,
                "rowspan" : 7,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 10,
                "column" : 3,
                "name" : "text_1",
                "row" : 1,
                "rowspan" : 5,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#FFFFFF",
                  "borderEdges" : [
                    "left"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 8
                }
              },
              {
                "colspan" : 2,
                "column" : 1,
                "name" : "image_1",
                "row" : 1,
                "rowspan" : 5,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#FFFFFF",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 8
                }
              },
              {
                "colspan" : 50,
                "column" : 0,
                "name" : "container_1",
                "row" : 0,
                "rowspan" : 7,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "rgb(125, 152, 179)",
                  "borderEdges" : [
                    "bottom"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 2
                }
              }
            ]
          },
          {
            "label" : "  PIPELINE  ",
            "name" : "958150b7-123d-48ff-a984-7525ca18d609",
            "navigationHidden" : false,
            "widgets" : [
              {
                "colspan" : 50,
                "column" : 0,
                "name" : "container_2",
                "row" : 13,
                "rowspan" : 7,
                "widgetStyle" : {
                  "backgroundColor" : "rgb(17, 48, 91)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 7,
                "column" : 1,
                "name" : "text_10",
                "row" : 14,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 7,
                "column" : 8,
                "name" : "text_9",
                "row" : 14,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 6,
                "column" : 16,
                "name" : "text_15",
                "row" : 14,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 13,
                "column" : 36,
                "name" : "pillbox_2",
                "row" : 15,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "rgb(17, 48, 91)",
                  "borderColor" : "rgb(51, 87, 121)",
                  "borderEdges" : [
                    "all"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 2
                }
              },
              {
                "colspan" : 16,
                "column" : 1,
                "name" : "text_13",
                "row" : 21,
                "rowspan" : 4,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 48,
                "column" : 1,
                "name" : "container_4",
                "row" : 60,
                "rowspan" : 41,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 22,
                "column" : 2,
                "name" : "text_17",
                "row" : 60,
                "rowspan" : 5,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 13,
                "column" : 35,
                "name" : "pillbox_3",
                "row" : 61,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#7D98B3",
                  "borderEdges" : [
                    "all"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 22,
                "column" : 2,
                "name" : "chart_7",
                "row" : 69,
                "rowspan" : 30,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 22,
                "column" : 26,
                "name" : "chart_8",
                "row" : 69,
                "rowspan" : 30,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 50,
                "column" : 0,
                "name" : "container_5",
                "row" : 104,
                "rowspan" : 38,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 7,
                "column" : 1,
                "name" : "text_5",
                "row" : 105,
                "rowspan" : 4,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 48,
                "column" : 1,
                "name" : "table_3",
                "row" : 109,
                "rowspan" : 31,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 50,
                "column" : 0,
                "name" : "container_1",
                "row" : 0,
                "rowspan" : 7,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "rgb(125, 152, 179)",
                  "borderEdges" : [
                    "bottom"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 2
                }
              },
              {
                "colspan" : 15,
                "column" : 13,
                "name" : "navigation_1",
                "row" : 0,
                "rowspan" : 7,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 10,
                "column" : 3,
                "name" : "text_1",
                "row" : 1,
                "rowspan" : 5,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#FFFFFF",
                  "borderEdges" : [
                    "left"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 8
                }
              },
              {
                "colspan" : 2,
                "column" : 1,
                "name" : "image_1",
                "row" : 1,
                "rowspan" : 5,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#FFFFFF",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 8
                }
              },
              {
                "colspan" : 50,
                "column" : 0,
                "name" : "container_8",
                "row" : 7,
                "rowspan" : 6,
                "widgetStyle" : {
                  "backgroundColor" : "rgb(228, 234, 239)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 6,
                "column" : 1,
                "name" : "filterpanel_3",
                "row" : 8,
                "rowspan" : 4,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 4,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 6,
                "column" : 8,
                "name" : "filterpanel_4",
                "row" : 8,
                "rowspan" : 4,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [
                    "bottom"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 4
                }
              },
              {
                "colspan" : 6,
                "column" : 15,
                "name" : "listselector_1",
                "row" : 8,
                "rowspan" : 4,
                "widgetStyle" : {
                  "backgroundColor" : "rgb(255, 255, 255)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [
                    "bottom"
                  ],
                  "borderRadius" : 4,
                  "borderWidth" : 4
                }
              },
              {
                "colspan" : 6,
                "column" : 22,
                "name" : "filterpanel_7",
                "row" : 8,
                "rowspan" : 4,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 4,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 6,
                "column" : 29,
                "name" : "filterpanel_8",
                "row" : 8,
                "rowspan" : 4,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 4,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 6,
                "column" : 36,
                "name" : "filterpanel_6",
                "row" : 8,
                "rowspan" : 4,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 4,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 6,
                "column" : 43,
                "name" : "filterpanel_5",
                "row" : 8,
                "rowspan" : 4,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 4,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 16,
                "column" : 33,
                "name" : "text_20",
                "row" : 21,
                "rowspan" : 4,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 16,
                "column" : 17,
                "name" : "text_21",
                "row" : 21,
                "rowspan" : 4,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 48,
                "column" : 1,
                "name" : "container_12",
                "row" : 57,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "rgb(220, 228, 239)",
                  "borderColor" : "#FFFFFF",
                  "borderEdges" : [
                    "bottom"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 8
                }
              },
              {
                "colspan" : 1,
                "column" : 0,
                "name" : "container_13",
                "row" : 57,
                "rowspan" : 47,
                "widgetStyle" : {
                  "backgroundColor" : "rgb(220, 228, 239)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 1,
                "column" : 49,
                "name" : "container_16",
                "row" : 57,
                "rowspan" : 47,
                "widgetStyle" : {
                  "backgroundColor" : "rgb(220, 228, 239)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 22,
                "column" : 2,
                "name" : "text_22",
                "row" : 66,
                "rowspan" : 2,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 22,
                "column" : 26,
                "name" : "text_23",
                "row" : 66,
                "rowspan" : 2,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 48,
                "column" : 1,
                "name" : "container_18",
                "row" : 101,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "rgb(220, 228, 239)",
                  "borderColor" : "#FFFFFF",
                  "borderEdges" : [
                    "top"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 8
                }
              },
              {
                "colspan" : 7,
                "column" : 22,
                "name" : "text_24",
                "row" : 14,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 7,
                "column" : 1,
                "name" : "number_8",
                "row" : 16,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 7,
                "column" : 8,
                "name" : "number_9",
                "row" : 16,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 6,
                "column" : 16,
                "name" : "number_10",
                "row" : 16,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 6,
                "column" : 22,
                "name" : "number_12",
                "row" : 16,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 15,
                "column" : 1,
                "name" : "chart_4",
                "row" : 27,
                "rowspan" : 29,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 15,
                "column" : 17,
                "name" : "chart_6",
                "row" : 25,
                "rowspan" : 30,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 16,
                "column" : 33,
                "name" : "chart_9",
                "row" : 25,
                "rowspan" : 30,
                "widgetStyle" : {
                  "backgroundColor" : "rgba(255, 255, 255, 0)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              }
            ]
          }
        ],
        "rowHeight" : "fine",
        "selectors" : [ ],
        "style" : {
          "alignmentX" : "left",
          "alignmentY" : "top",
          "backgroundColor" : "rgb(4, 29, 64)",
          "cellSpacingX" : 0,
          "cellSpacingY" : 0,
          "fit" : "original",
          "gutterColor" : "rgb(197, 211, 224)"
        },
        "version" : 1.0
      }
    ],
    "layouts" : [ ],
    "steps" : {
      "Revenue_from_Expired_1" : {
        "broadcastFacet" : true,
        "datasets" : [
          {
            "name" : "${App.Datasets.MFG_SalesAgreementProductSchedule_tp.Name}"
          }
        ],
        "isGlobal" : false,
        "label" : "Revenue from Expired Agreements",
        "query" : {
          "query" : {
            "measures" : [
              [
                "sum",
                "DerivedActualAmount"
              ]
            ],
            "groups" : [
              "SalesAgreementProduct.SalesAgreement.Name"
            ],
            "filters" : [
              [
                "SalesAgreementProduct.SalesAgreement.EndDate",
                [
                  [
                    [
                      "{{cell(Time_Filter_2_1.selection,0,\"Text2\").asObject()}}",
                      0
                    ],
                    [
                      "{{cell(Time_Filter_2_1.selection,0,\"Text2\").asObject()}}",
                      0
                    ]
                  ]
                ],
                ">=<="
              ],
              [
                "SalesAgreementProduct.SalesAgreement.StatusCode",
                [
                  "Expired"
                ],
                "in"
              ]
            ]
          },
          "version" : -1.0
        },
        "receiveFacet" : true,
        "selectMode" : "multi",
        "type" : "aggregateflex",
        "useGlobal" : true,
        "visualizationParameters" : {
          "parameters" : {
            "autoFitMode" : "keepLabels",
            "showValues" : true,
            "bins" : {
              "breakpoints" : {
                "high" : 100,
                "low" : 0
              },
              "bands" : {
                "high" : {
                  "color" : "#008000",
                  "label" : ""
                },
                "low" : {
                  "color" : "#B22222",
                  "label" : ""
                },
                "medium" : {
                  "color" : "#ffa500",
                  "label" : ""
                }
              }
            },
            "legend" : {
              "descOrder" : false,
              "showHeader" : true,
              "show" : true,
              "customSize" : "auto",
              "position" : "right-top",
              "inside" : false
            },
            "axisMode" : "multi",
            "tooltip" : {
              "showBinLabel" : true,
              "measures" : "",
              "showNullValues" : true,
              "showPercentage" : true,
              "showDimensions" : true,
              "showMeasures" : true,
              "customizeTooltip" : false,
              "dimensions" : ""
            },
            "visualizationType" : "hbar",
            "title" : {
              "fontSize" : 14,
              "subtitleFontSize" : 11,
              "label" : "",
              "align" : "center",
              "subtitleLabel" : ""
            },
            "binValues" : false,
            "trellis" : {
              "flipLabels" : false,
              "showGridLines" : true,
              "size" : [
                100,
                100
              ],
              "enable" : false,
              "type" : "x",
              "chartsPerLine" : 4
            },
            "columnMap" : {
              "trellis" : [ ],
              "dimensionAxis" : [
                "SalesAgreementProduct.SalesAgreement.Name"
              ],
              "plots" : [
                "sum_DerivedActualAmount"
              ]
            },
            "showActionMenu" : true,
            "measureAxis2" : {
              "sqrtScale" : false,
              "showTitle" : true,
              "showAxis" : true,
              "title" : "",
              "customDomain" : {
                "showDomain" : false
              }
            },
            "measureAxis1" : {
              "sqrtScale" : false,
              "showTitle" : true,
              "showAxis" : true,
              "title" : "",
              "customDomain" : {
                "showDomain" : false
              }
            },
            "theme" : "wave",
            "dimensionAxis" : {
              "showTitle" : true,
              "customSize" : "auto",
              "showAxis" : true,
              "title" : "",
              "icons" : {
                "useIcons" : false,
                "iconProps" : {
                  "fit" : "cover",
                  "column" : "",
                  "type" : "round"
                }
              }
            },
            "applyConditionalFormatting" : true
          },
          "type" : "chart"
        }
      },
      "current_year_min_and_1" : {
        "broadcastFacet" : true,
        "groups" : [ ],
        "label" : "current year min and max",
        "numbers" : [ ],
        "query" : "q = load \"${App.Datasets.MFG_SalesAgreementProductSchedule_tp.FullyQualifiedName}\";\nq = group q by all;\nq = foreach q generate date_to_epoch(toDate(date_to_string(now(),\"yyyy\")+\"-01-01\",\"yyyy-MM-dd\")) as 'Min', date_to_epoch(now()) as 'Max';\n\n\n",
        "receiveFacet" : true,
        "selectMode" : "single",
        "strings" : [ ],
        "type" : "saql",
        "useGlobal" : true,
        "visualizationParameters" : {
          "parameters" : {
            "autoFitMode" : "keepLabels",
            "showValues" : true,
            "bins" : {
              "breakpoints" : {
                "high" : 100,
                "low" : 0
              },
              "bands" : {
                "high" : {
                  "color" : "#008000",
                  "label" : ""
                },
                "low" : {
                  "color" : "#B22222",
                  "label" : ""
                },
                "medium" : {
                  "color" : "#ffa500",
                  "label" : ""
                }
              }
            },
            "legend" : {
              "descOrder" : false,
              "showHeader" : true,
              "show" : true,
              "customSize" : "auto",
              "position" : "right-top",
              "inside" : false
            },
            "axisMode" : "multi",
            "tooltip" : {
              "showBinLabel" : true,
              "measures" : "",
              "showNullValues" : true,
              "showPercentage" : true,
              "showDimensions" : true,
              "showMeasures" : true,
              "customizeTooltip" : false,
              "dimensions" : ""
            },
            "visualizationType" : "hbar",
            "title" : {
              "fontSize" : 14,
              "subtitleFontSize" : 11,
              "label" : "",
              "align" : "center",
              "subtitleLabel" : ""
            },
            "binValues" : false,
            "trellis" : {
              "flipLabels" : false,
              "showGridLines" : true,
              "size" : [
                100,
                100
              ],
              "enable" : false,
              "type" : "x",
              "chartsPerLine" : 4
            },
            "showActionMenu" : true,
            "measureAxis2" : {
              "sqrtScale" : false,
              "showTitle" : true,
              "showAxis" : true,
              "title" : "",
              "customDomain" : {
                "showDomain" : false
              }
            },
            "measureAxis1" : {
              "sqrtScale" : false,
              "showTitle" : true,
              "showAxis" : true,
              "title" : "",
              "customDomain" : {
                "showDomain" : false
              }
            },
            "theme" : "wave",
            "dimensionAxis" : {
              "showTitle" : true,
              "customSize" : "auto",
              "showAxis" : true,
              "title" : "",
              "icons" : {
                "useIcons" : false,
                "iconProps" : {
                  "fit" : "cover",
                  "column" : "",
                  "type" : "round"
                }
              }
            },
            "applyConditionalFormatting" : true
          },
          "type" : "chart"
        }
      },
      "__ACTIVE_AGREEMENTS_1" : {
        "broadcastFacet" : true,
        "datasets" : [
          {
            "name" : "${App.Datasets.MFG_SalesAgreementProductSchedule_tp.Name}"
          }
        ],
        "isGlobal" : false,
        "label" : "# ACTIVE AGREEMENTS",
        "query" : {
          "query" : {
            "measures" : [
              [
                "unique",
                "SalesAgreementProduct.SalesAgreementId",
                "A"
              ],
              [
                "sum",
                "DerivedPlannedAmount",
                "B"
              ],
              [
                "sum",
                "DerivedActualAmount",
                "C"
              ],
              [
                "count",
                "*",
                "D"
              ],
              [
                "count",
                "*",
                "E"
              ]
            ],
            "columns" : [
              {
                "query" : {
                  "measures" : [
                    [
                      "unique",
                      "SalesAgreementProduct.SalesAgreementId"
                    ]
                  ]
                }
              },
              {
                "query" : {
                  "measures" : [
                    [
                      "sum",
                      "DerivedPlannedAmount"
                    ]
                  ]
                }
              },
              {
                "query" : {
                  "measures" : [
                    [
                      "sum",
                      "DerivedActualAmount"
                    ]
                  ]
                }
              },
              {
                "query" : {
                  "measures" : [
                    [
                      "count",
                      "*"
                    ]
                  ],
                  "formula" : "B - C"
                }
              },
              {
                "query" : {
                  "measures" : [
                    [
                      "count",
                      "*"
                    ]
                  ],
                  "formula" : "C/B"
                },
                "header" : "Realization"
              }
            ],
            "filters" : [
              [
                "SalesAgreementProduct.SalesAgreement.StatusCode",
                [
                  "Activated"
                ],
                "in"
              ]
            ]
          },
          "version" : -1.0
        },
        "receiveFacet" : true,
        "selectMode" : "single",
        "type" : "aggregateflex",
        "useGlobal" : true,
        "visualizationParameters" : {
          "options" : { },
          "parameters" : {
            "borderColor" : "#e0e5ee",
            "borderWidth" : 1,
            "cell" : {
              "backgroundColor" : "#ffffff",
              "fontColor" : "#16325c",
              "fontSize" : 12
            },
            "columnProperties" : { },
            "columns" : [ ],
            "customBulkActions" : [ ],
            "header" : {
              "backgroundColor" : "#f4f6f9",
              "fontColor" : "#16325c",
              "fontSize" : 12
            },
            "innerMajorBorderColor" : "#a8b7c7",
            "innerMinorBorderColor" : "#e0e5ee",
            "maxColumnWidth" : 300,
            "minColumnWidth" : 40,
            "mode" : "variable",
            "numberOfLines" : 1,
            "showActionMenu" : true,
            "showRowIndexColumn" : false,
            "totals" : true,
            "verticalPadding" : 8
          },
          "type" : "table"
        }
      },
      "Sales_Agreement_Perf_1" : {
        "broadcastFacet" : true,
        "datasets" : [
          {
            "name" : "${App.Datasets.MFG_SalesAgreementProductSchedule_tp.Name}"
          }
        ],
        "isGlobal" : false,
        "label" : "Sales Agreement Performance Details Table",
        "query" : {
          "query" : {
            "measures" : [
              [
                "sum",
                "PlannedQuantity",
                "A"
              ],
              [
                "sum",
                "ActualQuantity",
                "B"
              ],
              [
                "sum",
                "DerivedPlannedAmount",
                "C"
              ],
              [
                "sum",
                "DerivedActualAmount",
                "D"
              ],
              [
                "count",
                "*",
                "E"
              ],
              [
                "count",
                "*",
                "F"
              ],
              [
                "count",
                "*",
                "G"
              ],
              [
                "count",
                "*",
                "H"
              ]
            ],
            "columns" : [
              {
                "query" : {
                  "measures" : [
                    [
                      "sum",
                      "PlannedQuantity"
                    ]
                  ],
                  "groups" : [
                    "SalesAgreementProduct.SalesAgreement.Account.Name",
                    "SalesAgreementProduct.SalesAgreement.Name",
                    "SalesAgreementProduct.SalesAgreement.ScheduleFrequency",
                    [
                      "SalesAgreementProduct.SalesAgreement.StartDate_Year",
                      "SalesAgreementProduct.SalesAgreement.StartDate_Month",
                      "SalesAgreementProduct.SalesAgreement.StartDate_Day"
                    ],
                    [
                      "SalesAgreementProduct.SalesAgreement.EndDate_Year",
                      "SalesAgreementProduct.SalesAgreement.EndDate_Month",
                      "SalesAgreementProduct.SalesAgreement.EndDate_Day"
                    ],
                    "SalesAgreementProduct.Name"
                  ]
                },
                "header" : "Planned Qty "
              },
              {
                "query" : {
                  "measures" : [
                    [
                      "sum",
                      "ActualQuantity"
                    ]
                  ],
                  "groups" : [
                    "SalesAgreementProduct.SalesAgreement.Account.Name",
                    "SalesAgreementProduct.SalesAgreement.Name",
                    "SalesAgreementProduct.SalesAgreement.ScheduleFrequency",
                    [
                      "SalesAgreementProduct.SalesAgreement.StartDate_Year",
                      "SalesAgreementProduct.SalesAgreement.StartDate_Month",
                      "SalesAgreementProduct.SalesAgreement.StartDate_Day"
                    ],
                    [
                      "SalesAgreementProduct.SalesAgreement.EndDate_Year",
                      "SalesAgreementProduct.SalesAgreement.EndDate_Month",
                      "SalesAgreementProduct.SalesAgreement.EndDate_Day"
                    ],
                    "SalesAgreementProduct.Name"
                  ]
                },
                "header" : "Actual Qty"
              },
              {
                "query" : {
                  "measures" : [
                    [
                      "sum",
                      "DerivedPlannedAmount"
                    ]
                  ],
                  "groups" : [
                    "SalesAgreementProduct.SalesAgreement.Account.Name",
                    "SalesAgreementProduct.SalesAgreement.Name",
                    "SalesAgreementProduct.SalesAgreement.ScheduleFrequency",
                    [
                      "SalesAgreementProduct.SalesAgreement.StartDate_Year",
                      "SalesAgreementProduct.SalesAgreement.StartDate_Month",
                      "SalesAgreementProduct.SalesAgreement.StartDate_Day"
                    ],
                    [
                      "SalesAgreementProduct.SalesAgreement.EndDate_Year",
                      "SalesAgreementProduct.SalesAgreement.EndDate_Month",
                      "SalesAgreementProduct.SalesAgreement.EndDate_Day"
                    ],
                    "SalesAgreementProduct.Name"
                  ]
                }
              },
              {
                "query" : {
                  "measures" : [
                    [
                      "sum",
                      "DerivedActualAmount"
                    ]
                  ],
                  "groups" : [
                    "SalesAgreementProduct.SalesAgreement.Account.Name",
                    "SalesAgreementProduct.SalesAgreement.Name",
                    "SalesAgreementProduct.SalesAgreement.ScheduleFrequency",
                    [
                      "SalesAgreementProduct.SalesAgreement.StartDate_Year",
                      "SalesAgreementProduct.SalesAgreement.StartDate_Month",
                      "SalesAgreementProduct.SalesAgreement.StartDate_Day"
                    ],
                    [
                      "SalesAgreementProduct.SalesAgreement.EndDate_Year",
                      "SalesAgreementProduct.SalesAgreement.EndDate_Month",
                      "SalesAgreementProduct.SalesAgreement.EndDate_Day"
                    ],
                    "SalesAgreementProduct.Name"
                  ]
                }
              },
              {
                "query" : {
                  "measures" : [
                    [
                      "count",
                      "*"
                    ]
                  ],
                  "groups" : [
                    "SalesAgreementProduct.SalesAgreement.Account.Name",
                    "SalesAgreementProduct.SalesAgreement.Name",
                    "SalesAgreementProduct.SalesAgreement.ScheduleFrequency",
                    [
                      "SalesAgreementProduct.SalesAgreement.StartDate_Year",
                      "SalesAgreementProduct.SalesAgreement.StartDate_Month",
                      "SalesAgreementProduct.SalesAgreement.StartDate_Day"
                    ],
                    [
                      "SalesAgreementProduct.SalesAgreement.EndDate_Year",
                      "SalesAgreementProduct.SalesAgreement.EndDate_Month",
                      "SalesAgreementProduct.SalesAgreement.EndDate_Day"
                    ],
                    "SalesAgreementProduct.Name"
                  ],
                  "formula" : "('A' * 'H') - 'B'"
                },
                "header" : "Quantity Shortfall"
              },
              {
                "query" : {
                  "measures" : [
                    [
                      "count",
                      "*"
                    ]
                  ],
                  "groups" : [
                    "SalesAgreementProduct.SalesAgreement.Account.Name",
                    "SalesAgreementProduct.SalesAgreement.Name",
                    "SalesAgreementProduct.SalesAgreement.ScheduleFrequency",
                    [
                      "SalesAgreementProduct.SalesAgreement.StartDate_Year",
                      "SalesAgreementProduct.SalesAgreement.StartDate_Month",
                      "SalesAgreementProduct.SalesAgreement.StartDate_Day"
                    ],
                    [
                      "SalesAgreementProduct.SalesAgreement.EndDate_Year",
                      "SalesAgreementProduct.SalesAgreement.EndDate_Month",
                      "SalesAgreementProduct.SalesAgreement.EndDate_Day"
                    ],
                    "SalesAgreementProduct.Name"
                  ],
                  "formula" : "('C') - 'D'"
                },
                "header" : "Outstanding Revenue"
              },
              {
                "query" : {
                  "measures" : [
                    [
                      "count",
                      "*"
                    ]
                  ],
                  "groups" : [
                    "SalesAgreementProduct.SalesAgreement.Account.Name",
                    "SalesAgreementProduct.SalesAgreement.Name",
                    "SalesAgreementProduct.SalesAgreement.ScheduleFrequency",
                    [
                      "SalesAgreementProduct.SalesAgreement.StartDate_Year",
                      "SalesAgreementProduct.SalesAgreement.StartDate_Month",
                      "SalesAgreementProduct.SalesAgreement.StartDate_Day"
                    ],
                    [
                      "SalesAgreementProduct.SalesAgreement.EndDate_Year",
                      "SalesAgreementProduct.SalesAgreement.EndDate_Month",
                      "SalesAgreementProduct.SalesAgreement.EndDate_Day"
                    ],
                    "SalesAgreementProduct.Name"
                  ],
                  "formula" : "('C' * 'H') - 'D'"
                },
                "header" : "Amount Shortfall"
              },
              {
                "query" : {
                  "measures" : [
                    [
                      "count",
                      "*"
                    ]
                  ],
                  "groups" : [
                    "SalesAgreementProduct.SalesAgreement.Account.Name",
                    "SalesAgreementProduct.SalesAgreement.Name",
                    "SalesAgreementProduct.SalesAgreement.ScheduleFrequency",
                    [
                      "SalesAgreementProduct.SalesAgreement.StartDate_Year",
                      "SalesAgreementProduct.SalesAgreement.StartDate_Month",
                      "SalesAgreementProduct.SalesAgreement.StartDate_Day"
                    ],
                    [
                      "SalesAgreementProduct.SalesAgreement.EndDate_Year",
                      "SalesAgreementProduct.SalesAgreement.EndDate_Month",
                      "SalesAgreementProduct.SalesAgreement.EndDate_Day"
                    ],
                    "SalesAgreementProduct.Name"
                  ],
                  "formula" : "(daysBetween(toDate(first('SalesAgreementProduct.SalesAgreement.StartDate_sec_epoch')), now()) + 1)/(daysBetween(toDate(first('SalesAgreementProduct.SalesAgreement.StartDate_sec_epoch')), toDate(first('SalesAgreementProduct.SalesAgreement.EndDate_sec_epoch'))) + 1)"
                },
                "header" : "Ratio"
              }
            ],
            "groups" : [
              "SalesAgreementProduct.SalesAgreement.Account.Name",
              "SalesAgreementProduct.SalesAgreement.Name",
              "SalesAgreementProduct.SalesAgreement.ScheduleFrequency",
              [
                "SalesAgreementProduct.SalesAgreement.StartDate_Year",
                "SalesAgreementProduct.SalesAgreement.StartDate_Month",
                "SalesAgreementProduct.SalesAgreement.StartDate_Day"
              ],
              [
                "SalesAgreementProduct.SalesAgreement.EndDate_Year",
                "SalesAgreementProduct.SalesAgreement.EndDate_Month",
                "SalesAgreementProduct.SalesAgreement.EndDate_Day"
              ],
              "SalesAgreementProduct.Name"
            ],
            "filters" : [
              [
                "SalesAgreementProduct.SalesAgreement.StatusCode",
                [
                  "Activated"
                ],
                "in"
              ]
            ]
          },
          "version" : -1.0
        },
        "receiveFacet" : true,
        "selectMode" : "single",
        "type" : "aggregateflex",
        "useGlobal" : true,
        "visualizationParameters" : {
          "options" : { },
          "parameters" : {
            "borderColor" : "#e0e5ee",
            "borderWidth" : 1,
            "cell" : {
              "backgroundColor" : "#ffffff",
              "fontColor" : "#16325c",
              "fontSize" : 12
            },
            "columnProperties" : { },
            "columns" : [
              "A",
              "B",
              "F",
              "E",
              "G",
              "SalesAgreementProduct.SalesAgreement.Account.Name",
              "SalesAgreementProduct.SalesAgreement.Name",
              "SalesAgreementProduct.SalesAgreement.ScheduleFrequency",
              "SalesAgreementProduct.SalesAgreement.StartDate_Year~~~SalesAgreementProduct.SalesAgreement.StartDate_Month~~~SalesAgreementProduct.SalesAgreement.StartDate_Day",
              "SalesAgreementProduct.SalesAgreement.EndDate_Year~~~SalesAgreementProduct.SalesAgreement.EndDate_Month~~~SalesAgreementProduct.SalesAgreement.EndDate_Day",
              "SalesAgreementProduct.Name"
            ],
            "customBulkActions" : [ ],
            "header" : {
              "backgroundColor" : "#f4f6f9",
              "fontColor" : "#16325c",
              "fontSize" : 12
            },
            "innerMajorBorderColor" : "#a8b7c7",
            "innerMinorBorderColor" : "#e0e5ee",
            "maxColumnWidth" : 300,
            "minColumnWidth" : 40,
            "mode" : "variable",
            "numberOfLines" : 1,
            "showActionMenu" : true,
            "showRowIndexColumn" : false,
            "totals" : true,
            "verticalPadding" : 8
          },
          "type" : "table"
        }
      },
      "Demand_ShortFall_Met_1" : {
        "broadcastFacet" : true,
        "groups" : [ ],
        "label" : "Actual vs Planned Difference Metrics",
        "numbers" : [ ],
        "query" : "all_slaps = load \"${App.Datasets.MFG_SalesAgreementProductSchedule_tp.FullyQualifiedName}\"; all_slaps = filter all_slaps by 'SalesAgreementProduct.SalesAgreement.StatusCode' == \"Activated\"; valid_slaps = filter all_slaps by 'StartDate_sec_epoch' <= {{coalesce(cell(current_year_min_and_1.result,0,\"Max\"),0).asObject()}}; valid_slaps = filter valid_slaps by 'ActualEndDate_sec_epoch' >= {{coalesce(cell(current_year_min_and_1.result,0,\"Min\"),0).asObject()}}; valid_slaps = filter valid_slaps by 'isValidProductSchedule' == \"true\"; Start = foreach valid_slaps generate {{coalesce(cell(current_year_min_and_1.result,0,\"Min\"),0).asObject()}} as 'Start', {{coalesce(cell(current_year_min_and_1.result,0,\"Max\"),0).asObject()}} as 'End', 'Id' as 'Id', 'StartDate_sec_epoch' as 'Start Date', case when 'ActualEndDate_sec_epoch' < date_to_epoch(now()) then 'ActualEndDate_sec_epoch' else date_to_epoch(now()) end as 'End Date', case when ('StartDate_sec_epoch' >= {{coalesce(cell(current_year_min_and_1.result,0,\"Min\"),0).asObject()}}) then date_to_string(toDate('StartDate_sec_epoch'),\"yyyy\") else date_to_string(toDate({{coalesce(cell(current_year_min_and_1.result,0,\"Min\"),0).asObject()}}),\"yyyy\") end as 'Date_Year', case when ('StartDate_sec_epoch' >= {{coalesce(cell(current_year_min_and_1.result,0,\"Min\"),0).asObject()}}) then date_to_string(toDate('StartDate_sec_epoch'),\"MM\") else date_to_string(toDate({{coalesce(cell(current_year_min_and_1.result,0,\"Min\"),0).asObject()}}),\"MM\") end as 'Date_Month', 'SalesPrice' * ((100-coalesce('DiscountPercentage',0))/100) as 'SalesPrice', case when 'StartDate_sec_epoch' >= {{coalesce(cell(current_year_min_and_1.result,0,\"Min\"),0).asObject()}} &&  'ActualEndDate_sec_epoch' > date_to_epoch(month_last_day(toDate('StartDate_sec_epoch'))) && date_to_epoch(now())> date_to_epoch(month_last_day(toDate('StartDate_sec_epoch'))) && {{coalesce(cell(current_year_min_and_1.result,0,\"Max\"),0).asObject()}} > date_to_epoch(month_last_day(toDate('StartDate_sec_epoch'))) && StartDate_sec_epoch <= date_to_epoch(now())  then (daysBetween(toDate('StartDate_sec_epoch'),month_last_day(toDate('StartDate_sec_epoch')))+1) * (DerivedActualAmount/(daysBetween(toDate('StartDate_sec_epoch'),case when toDate('ActualEndDate_sec_epoch') < now() then toDate('ActualEndDate_sec_epoch') else now() end)+1)) when 'StartDate_sec_epoch' >= {{coalesce(cell(current_year_min_and_1.result,0,\"Min\"),0).asObject()}} &&  'ActualEndDate_sec_epoch' >= {{coalesce(cell(current_year_min_and_1.result,0,\"Max\"),0).asObject()}} && date_to_epoch(now()) >= {{coalesce(cell(current_year_min_and_1.result,0,\"Max\"),0).asObject()}} && {{coalesce(cell(current_year_min_and_1.result,0,\"Max\"),0).asObject()}} <= date_to_epoch(month_last_day(toDate('StartDate_sec_epoch'))) && StartDate_sec_epoch <= date_to_epoch(now()) then (daysBetween(toDate('StartDate_sec_epoch'), toDate({{coalesce(cell(current_year_min_and_1.result,0,\"Max\"),0).asObject()}}))+1) * (DerivedActualAmount/(daysBetween(toDate('StartDate_sec_epoch'),case when toDate('ActualEndDate_sec_epoch') < now() then toDate('ActualEndDate_sec_epoch') else now() end)+1)) when 'StartDate_sec_epoch' >= {{coalesce(cell(current_year_min_and_1.result,0,\"Min\"),0).asObject()}} &&  'ActualEndDate_sec_epoch' >= date_to_epoch(now()) && date_to_epoch(now()) <= date_to_epoch(month_last_day(toDate('StartDate_sec_epoch'))) && {{coalesce(cell(current_year_min_and_1.result,0,\"Max\"),0).asObject()}} >= date_to_epoch(now()) && 'StartDate_sec_epoch' < date_to_epoch(now()) && StartDate_sec_epoch <= date_to_epoch(now()) then (daysBetween(toDate('StartDate_sec_epoch'), now())+1) * (DerivedActualAmount/(daysBetween(toDate('StartDate_sec_epoch'),case when toDate('ActualEndDate_sec_epoch') < now() then toDate('ActualEndDate_sec_epoch') else now() end)+1)) when 'StartDate_sec_epoch' >= {{coalesce(cell(current_year_min_and_1.result,0,\"Min\"),0).asObject()}} &&  'ActualEndDate_sec_epoch' <= date_to_epoch(month_last_day(toDate('StartDate_sec_epoch'))) && date_to_epoch(now()) >= 'ActualEndDate_sec_epoch' && {{coalesce(cell(current_year_min_and_1.result,0,\"Max\"),0).asObject()}} >= 'ActualEndDate_sec_epoch'  && StartDate_sec_epoch <= date_to_epoch(now()) then (daysBetween(toDate('StartDate_sec_epoch'), toDate('ActualEndDate_sec_epoch'))+1) * (DerivedActualAmount/(daysBetween(toDate('StartDate_sec_epoch'),case when toDate('ActualEndDate_sec_epoch') < now() then toDate('ActualEndDate_sec_epoch') else now() end)+1)) when 'StartDate_sec_epoch' < {{coalesce(cell(current_year_min_and_1.result,0,\"Min\"),0).asObject()}} &&  'ActualEndDate_sec_epoch' >= date_to_epoch(month_last_day(toDate({{coalesce(cell(current_year_min_and_1.result,0,\"Min\"),0).asObject()}}))) && date_to_epoch(now())>= date_to_epoch(month_last_day(toDate({{coalesce(cell(current_year_min_and_1.result,0,\"Min\"),0).asObject()}}))) && {{coalesce(cell(current_year_min_and_1.result,0,\"Max\"),0).asObject()}} >= date_to_epoch(month_last_day(toDate({{coalesce(cell(current_year_min_and_1.result,0,\"Min\"),0).asObject()}}))) && {{coalesce(cell(current_year_min_and_1.result,0,\"Min\"),0).asObject()}} <= date_to_epoch(now()) then (daysBetween(toDate({{coalesce(cell(current_year_min_and_1.result,0,\"Min\"),0).asObject()}}),month_last_day(toDate({{coalesce(cell(current_year_min_and_1.result,0,\"Min\"),0).asObject()}})))+1) * (DerivedActualAmount/(daysBetween(toDate('StartDate_sec_epoch'),case when toDate('ActualEndDate_sec_epoch') < now() then toDate('ActualEndDate_sec_epoch') else now() end)+1)) when 'StartDate_sec_epoch' < {{coalesce(cell(current_year_min_and_1.result,0,\"Min\"),0).asObject()}} &&  'ActualEndDate_sec_epoch' >= {{coalesce(cell(current_year_min_and_1.result,0,\"Max\"),0).asObject()}} && date_to_epoch(now())>= {{coalesce(cell(current_year_min_and_1.result,0,\"Max\"),0).asObject()}} && {{coalesce(cell(current_year_min_and_1.result,0,\"Max\"),0).asObject()}} <= date_to_epoch(month_last_day(toDate({{coalesce(cell(current_year_min_and_1.result,0,\"Min\"),0).asObject()}}))) && {{coalesce(cell(current_year_min_and_1.result,0,\"Min\"),0).asObject()}} <= date_to_epoch(now()) then (daysBetween(toDate({{coalesce(cell(current_year_min_and_1.result,0,\"Min\"),0).asObject()}}), toDate({{coalesce(cell(current_year_min_and_1.result,0,\"Max\"),0).asObject()}}))+1) * (DerivedActualAmount/(daysBetween(toDate('StartDate_sec_epoch'),case when toDate('ActualEndDate_sec_epoch') < now() then toDate('ActualEndDate_sec_epoch') else now() end)+1)) when 'StartDate_sec_epoch' < {{coalesce(cell(current_year_min_and_1.result,0,\"Min\"),0).asObject()}} &&  'ActualEndDate_sec_epoch' >= date_to_epoch(now()) && date_to_epoch(now()) <= date_to_epoch(month_last_day(toDate({{coalesce(cell(current_year_min_and_1.result,0,\"Min\"),0).asObject()}}))) && {{coalesce(cell(current_year_min_and_1.result,0,\"Max\"),0).asObject()}} >= date_to_epoch(now()) && {{coalesce(cell(current_year_min_and_1.result,0,\"Min\"),0).asObject()}} <= date_to_epoch(now()) then (daysBetween(toDate({{coalesce(cell(current_year_min_and_1.result,0,\"Min\"),0).asObject()}}), now())+1) * (DerivedActualAmount/(daysBetween(toDate('StartDate_sec_epoch'),case when toDate('ActualEndDate_sec_epoch') < now() then toDate('ActualEndDate_sec_epoch') else now() end)+1)) when 'StartDate_sec_epoch' < {{coalesce(cell(current_year_min_and_1.result,0,\"Min\"),0).asObject()}} &&  'ActualEndDate_sec_epoch' <= date_to_epoch(month_last_day(toDate({{coalesce(cell(current_year_min_and_1.result,0,\"Min\"),0).asObject()}}))) && date_to_epoch(now()) >= 'ActualEndDate_sec_epoch' && {{coalesce(cell(current_year_min_and_1.result,0,\"Max\"),0).asObject()}} >= 'ActualEndDate_sec_epoch' && {{coalesce(cell(current_year_min_and_1.result,0,\"Min\"),0).asObject()}} <= date_to_epoch(now()) then (daysBetween(toDate({{coalesce(cell(current_year_min_and_1.result,0,\"Min\"),0).asObject()}}), toDate('ActualEndDate_sec_epoch'))+1) * (DerivedActualAmount/(daysBetween(toDate('StartDate_sec_epoch'),case when toDate('ActualEndDate_sec_epoch') < now() then toDate('ActualEndDate_sec_epoch') else now() end)+1)) else 0 end as 'Actual Amount', case when ('StartDate_sec_epoch' >= {{coalesce(cell(current_year_min_and_1.result,0,\"Min\"),0).asObject()}}) && ('ActualEndDate_sec_epoch' >= date_to_epoch(month_last_day(toDate('StartDate_sec_epoch')))) && {{coalesce(cell(current_year_min_and_1.result,0,\"Max\"),0).asObject()}} >= date_to_epoch(month_last_day(toDate('StartDate_sec_epoch'))) then (daysBetween(toDate('StartDate_sec_epoch'),month_last_day(toDate('StartDate_sec_epoch')))+1) * 'PlannedDailyAmount' when ('StartDate_sec_epoch' >= {{coalesce(cell(current_year_min_and_1.result,0,\"Min\"),0).asObject()}}) && ('ActualEndDate_sec_epoch' >= {{coalesce(cell(current_year_min_and_1.result,0,\"Max\"),0).asObject()}}) && {{coalesce(cell(current_year_min_and_1.result,0,\"Max\"),0).asObject()}} <= date_to_epoch(month_last_day(toDate('StartDate_sec_epoch'))) then (daysBetween(toDate('StartDate_sec_epoch'),toDate({{coalesce(cell(current_year_min_and_1.result,0,\"Max\"),0).asObject()}}))+1) * 'PlannedDailyAmount' when ('StartDate_sec_epoch' < {{coalesce(cell(current_year_min_and_1.result,0,\"Min\"),0).asObject()}}) && ('ActualEndDate_sec_epoch' >= date_to_epoch(month_last_day(toDate({{coalesce(cell(current_year_min_and_1.result,0,\"Min\"),0).asObject()}})))) && {{coalesce(cell(current_year_min_and_1.result,0,\"Max\"),0).asObject()}} >= date_to_epoch(month_last_day(toDate({{coalesce(cell(current_year_min_and_1.result,0,\"Min\"),0).asObject()}}))) then (daysBetween(toDate({{coalesce(cell(current_year_min_and_1.result,0,\"Min\"),0).asObject()}}),month_last_day(toDate({{coalesce(cell(current_year_min_and_1.result,0,\"Min\"),0).asObject()}})))+1) * 'PlannedDailyAmount' when ('StartDate_sec_epoch' < {{coalesce(cell(current_year_min_and_1.result,0,\"Min\"),0).asObject()}}) && ('ActualEndDate_sec_epoch' <= date_to_epoch(month_last_day(toDate({{coalesce(cell(current_year_min_and_1.result,0,\"Min\"),0).asObject()}})))) && {{coalesce(cell(current_year_min_and_1.result,0,\"Max\"),0).asObject()}} >= 'ActualEndDate_sec_epoch' then (daysBetween(toDate({{coalesce(cell(current_year_min_and_1.result,0,\"Min\"),0).asObject()}}),toDate('ActualEndDate_sec_epoch'))+1) * 'PlannedDailyAmount' when ('StartDate_sec_epoch' < {{coalesce(cell(current_year_min_and_1.result,0,\"Min\"),0).asObject()}}) && ({{coalesce(cell(current_year_min_and_1.result,0,\"Max\"),0).asObject()}} <= date_to_epoch(month_last_day(toDate({{coalesce(cell(current_year_min_and_1.result,0,\"Min\"),0).asObject()}})))) && {{coalesce(cell(current_year_min_and_1.result,0,\"Max\"),0).asObject()}} <= 'ActualEndDate_sec_epoch' then (daysBetween(toDate({{coalesce(cell(current_year_min_and_1.result,0,\"Min\"),0).asObject()}}),toDate({{coalesce(cell(current_year_min_and_1.result,0,\"Max\"),0).asObject()}}))+1) * 'PlannedDailyAmount' else 'PlannedAmountFinal' end as 'Planned Amount', (DerivedActualAmount/(daysBetween(toDate('StartDate_sec_epoch'),case when toDate('ActualEndDate_sec_epoch') < now() then toDate('ActualEndDate_sec_epoch') else now() end)+1)) as 'ActualDailyAmount', 'PlannedDailyAmount' as 'PlannedDailyAmount'; End_Value_actual = foreach valid_slaps generate {{coalesce(cell(current_year_min_and_1.result,0,\"Min\"),0).asObject()}} as 'Start', {{coalesce(cell(current_year_min_and_1.result,0,\"Max\"),0).asObject()}} as 'End', 'Id' as 'Id', 'StartDate_sec_epoch' as 'Start Date', case when 'ActualEndDate_sec_epoch' < date_to_epoch(now()) then 'ActualEndDate_sec_epoch' else date_to_epoch(now()) end as 'End Date', case when ('ActualEndDate_sec_epoch' < {{coalesce(cell(current_year_min_and_1.result,0,\"Max\"),0).asObject()}}) && ('ActualEndDate_sec_epoch' < date_to_epoch(now())) then date_to_string(toDate('ActualEndDate_sec_epoch'),\"yyyy\") when (date_to_epoch(now()) < {{coalesce(cell(current_year_min_and_1.result,0,\"Max\"),0).asObject()}}) && ('ActualEndDate_sec_epoch' > date_to_epoch(now())) then date_to_string(now(),\"yyyy\") else  date_to_string(toDate({{coalesce(cell(current_year_min_and_1.result,0,\"Max\"),0).asObject()}}),\"yyyy\") end as 'Date_Year', case when ('ActualEndDate_sec_epoch' < {{coalesce(cell(current_year_min_and_1.result,0,\"Max\"),0).asObject()}}) && ('ActualEndDate_sec_epoch' < date_to_epoch(now())) then date_to_string(toDate('ActualEndDate_sec_epoch'),\"MM\") when (date_to_epoch(now()) < {{coalesce(cell(current_year_min_and_1.result,0,\"Max\"),0).asObject()}}) && ('ActualEndDate_sec_epoch' > date_to_epoch(now())) then date_to_string(now(),\"MM\") else  date_to_string(toDate({{coalesce(cell(current_year_min_and_1.result,0,\"Max\"),0).asObject()}}),\"MM\") end as 'Date_Month', 'SalesPrice' * ((100-coalesce('DiscountPercentage',0))/100) as 'SalesPrice', case when ('StartDate_sec_epoch' < (date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate('ActualEndDate_sec_epoch'))) - 2764800)))) + 86400)) && ({{coalesce(cell(current_year_min_and_1.result,0,\"Min\"),0).asObject()}} < (date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate('ActualEndDate_sec_epoch'))) - 2764800)))) + 86400)) && ('ActualEndDate_sec_epoch' <= {{coalesce(cell(current_year_min_and_1.result,0,\"Max\"),0).asObject()}}) && (date_to_epoch(now()) >= 'ActualEndDate_sec_epoch') then (daysBetween(toDate((date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate('ActualEndDate_sec_epoch'))) - 2764800)))))),toDate('ActualEndDate_sec_epoch'))) * (DerivedActualAmount/(daysBetween(toDate('StartDate_sec_epoch'),case when toDate('ActualEndDate_sec_epoch') < now() then toDate('ActualEndDate_sec_epoch') else now() end)+1)) when ('StartDate_sec_epoch' < (date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(now())) - 2764800)))) + 86400)) && ({{coalesce(cell(current_year_min_and_1.result,0,\"Min\"),0).asObject()}} < (date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(now())) - 2764800)))) + 86400)) && (date_to_epoch(now()) <= {{coalesce(cell(current_year_min_and_1.result,0,\"Max\"),0).asObject()}}) && (date_to_epoch(now()) <= 'ActualEndDate_sec_epoch') then (daysBetween(toDate((date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(now())) - 2764800)))))),now())) * (DerivedActualAmount/(daysBetween(toDate('StartDate_sec_epoch'),case when toDate('ActualEndDate_sec_epoch') < now() then toDate('ActualEndDate_sec_epoch') else now() end)+1)) when (('StartDate_sec_epoch' < (date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate({{coalesce(cell(current_year_min_and_1.result,0,\"Max\"),0).asObject()}}))) - 2764800)))) + 86400)))  && ({{coalesce(cell(current_year_min_and_1.result,0,\"Min\"),0).asObject()}} < (date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate({{coalesce(cell(current_year_min_and_1.result,0,\"Max\"),0).asObject()}}))) - 2764800)))) + 86400)) && ('ActualEndDate_sec_epoch' >= {{coalesce(cell(current_year_min_and_1.result,0,\"Max\"),0).asObject()}}) && (date_to_epoch(now()) >= {{coalesce(cell(current_year_min_and_1.result,0,\"Max\"),0).asObject()}} ) then (daysBetween(toDate((date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate({{coalesce(cell(current_year_min_and_1.result,0,\"Max\"),0).asObject()}}))) - 2764800)))))),toDate({{coalesce(cell(current_year_min_and_1.result,0,\"Max\"),0).asObject()}}))) * (DerivedActualAmount/(daysBetween(toDate('StartDate_sec_epoch'),case when toDate('ActualEndDate_sec_epoch') < now() then toDate('ActualEndDate_sec_epoch') else now() end)+1)) else 0 end as 'Actual Amount',  0 as 'Planned Amount', (DerivedActualAmount/(daysBetween(toDate('StartDate_sec_epoch'),case when toDate('ActualEndDate_sec_epoch') < now() then toDate('ActualEndDate_sec_epoch') else now() end)+1)) as 'ActualDailyAmount', 'PlannedDailyAmount' as 'PlannedDailyAmount'; End_Value_planned = foreach valid_slaps generate {{coalesce(cell(current_year_min_and_1.result,0,\"Min\"),0).asObject()}} as 'Start', {{coalesce(cell(current_year_min_and_1.result,0,\"Max\"),0).asObject()}} as 'End', 'Id' as 'Id', 'StartDate_sec_epoch' as 'Start Date', 'ActualEndDate_sec_epoch' as 'End Date', case when ('ActualEndDate_sec_epoch' < {{coalesce(cell(current_year_min_and_1.result,0,\"Max\"),0).asObject()}}) then date_to_string(toDate('ActualEndDate_sec_epoch'),\"yyyy\") else  date_to_string(toDate({{coalesce(cell(current_year_min_and_1.result,0,\"Max\"),0).asObject()}}),\"yyyy\") end as 'Date_Year', case when ('ActualEndDate_sec_epoch' < {{coalesce(cell(current_year_min_and_1.result,0,\"Max\"),0).asObject()}}) then date_to_string(toDate('ActualEndDate_sec_epoch'),\"MM\") else  date_to_string(toDate({{coalesce(cell(current_year_min_and_1.result,0,\"Max\"),0).asObject()}}),\"MM\") end as 'Date_Month', 'SalesPrice' * ((100-coalesce('DiscountPercentage',0))/100) as 'SalesPrice', 0 as 'Actual Amount', case when (('StartDate_sec_epoch' < (date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate('ActualEndDate_sec_epoch'))) - 2764800)))) + 86400)) && ({{coalesce(cell(current_year_min_and_1.result,0,\"Min\"),0).asObject()}} < (date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate('ActualEndDate_sec_epoch'))) - 2764800)))) + 86400)) && ('ActualEndDate_sec_epoch' <= {{coalesce(cell(current_year_min_and_1.result,0,\"Max\"),0).asObject()}}))  then (daysBetween(toDate((date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate('ActualEndDate_sec_epoch'))) - 2764800)))))),toDate('ActualEndDate_sec_epoch'))) * 'PlannedDailyAmount' when (('StartDate_sec_epoch' < (date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate({{coalesce(cell(current_year_min_and_1.result,0,\"Max\"),0).asObject()}}))) - 2764800)))) + 86400)) && ({{coalesce(cell(current_year_min_and_1.result,0,\"Min\"),0).asObject()}} < (date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate({{coalesce(cell(current_year_min_and_1.result,0,\"Max\"),0).asObject()}}))) - 2764800)))) + 86400)) && ('ActualEndDate_sec_epoch' >= {{coalesce(cell(current_year_min_and_1.result,0,\"Max\"),0).asObject()}})) then (daysBetween(toDate((date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate({{coalesce(cell(current_year_min_and_1.result,0,\"Max\"),0).asObject()}}))) - 2764800)))))),toDate({{coalesce(cell(current_year_min_and_1.result,0,\"Max\"),0).asObject()}}))) * 'PlannedDailyAmount' else 0 end as 'Planned Amount', (DerivedActualAmount/(daysBetween(toDate('StartDate_sec_epoch'),case when toDate('ActualEndDate_sec_epoch') < now() then toDate('ActualEndDate_sec_epoch') else now() end)+1)) as 'ActualDailyAmount', 'PlannedDailyAmount' as 'PlannedDailyAmount'; DataForFill_actual = union Start, End_Value_actual; DataForFill_actual = foreach DataForFill_actual generate 'Id' as 'Id', 'Date_Year' as 'Date_Year', 'Date_Month' as 'Date_Month','Start' as 'Start', 'End' as 'End', 'Start Date' as 'Start Date', 'End Date' as 'End Date', 'SalesPrice' as 'SalesPrice', 'Actual Amount' as 'Actual Amount', 'ActualDailyAmount' as 'ActualDailyAmount', 'Planned Amount' as 'Planned Amount', 'PlannedDailyAmount' as 'PlannedDailyAmount'; FilledData_actual = fill DataForFill_actual by (dateCols=('Date_Year', 'Date_Month', \"Y-M\"), partition='Id'); FilledData_actual = group FilledData_actual by ('Id', 'Date_Year', 'Date_Month'); FilledData_actual = foreach FilledData_actual generate 'Id', 'Date_Year', 'Date_Month', date_to_epoch(toDate('Date_Year'+\"-\"+'Date_Month'+\"-01\",\"yyyy-MM-dd\")) as 'Date', first('Start') as 'Start', min(first('Start')) over ([..0] partition by 'Id' order by ('Date_Year','Date_Month')) as 'StartFilter', first('End') as 'End', min(first('End')) over ([..0] partition by 'Id' order by ('Date_Year','Date_Month')) as 'EndFilter',  min(first('Start Date')) over ([..0] partition by 'Id' order by ('Date_Year','Date_Month')) as 'Start Date', min(first('End Date')) over ([..0] partition by 'Id' order by ('Date_Year','Date_Month')) as 'End Date', sum('Actual Amount') as 'Actual Amount', 0 as 'Planned Amount', min(first('ActualDailyAmount'))over ([..0] partition by 'Id' order by ('Date_Year','Date_Month')) as 'ActualDailyAmount', min(first('PlannedDailyAmount'))over ([..0] partition by 'Id' order by ('Date_Year','Date_Month')) as 'PlannedDailyAmount', min(first('SalesPrice'))over ([..0] partition by 'Id' order by ('Date_Year','Date_Month')) as 'SalesPrice'; FilledData_actual = filter FilledData_actual by coalesce('Start',0) != 0 || ('Date' > 'StartFilter' && 'Date' > 'Start Date' && 'Date' < 'End Date' && 'Date' < 'EndFilter'); FilledData_actual = foreach FilledData_actual generate 'Id', 'Date_Year', 'Date_Month', case when 'Actual Amount' is null then month_days(toDate('Date'))*'ActualDailyAmount' else 'Actual Amount' end as 'Actual Amount', 'SalesPrice' as 'SalesPrice', 0 as 'Planned Amount'; DataForFill_planned = union Start, End_Value_planned; DataForFill_planned = foreach DataForFill_planned generate 'Id' as 'Id', 'Date_Year' as 'Date_Year', 'Date_Month' as 'Date_Month','Start' as 'Start', 'End' as 'End', 'Start Date' as 'Start Date', 'End Date' as 'End Date', 'SalesPrice' as 'SalesPrice', 'Actual Amount' as 'Actual Amount', 'ActualDailyAmount' as 'ActualDailyAmount', 'Planned Amount' as 'Planned Amount', 'PlannedDailyAmount' as 'PlannedDailyAmount'; FilledData_planned = fill DataForFill_planned by (dateCols=('Date_Year', 'Date_Month', \"Y-M\"), partition='Id'); FilledData_planned = group FilledData_planned by ('Id', 'Date_Year', 'Date_Month'); FilledData_planned = foreach FilledData_planned generate 'Id', 'Date_Year', 'Date_Month', date_to_epoch(toDate('Date_Year'+\"-\"+'Date_Month'+\"-01\",\"yyyy-MM-dd\")) as 'Date', first('Start') as 'Start', min(first('Start')) over ([..0] partition by 'Id' order by ('Date_Year','Date_Month')) as 'StartFilter', first('End') as 'End', min(first('End')) over ([..0] partition by 'Id' order by ('Date_Year','Date_Month')) as 'EndFilter',  min(first('Start Date')) over ([..0] partition by 'Id' order by ('Date_Year','Date_Month')) as 'Start Date', max(first('End Date')) over ([..] partition by 'Id' ) as 'End Date', 0 as 'Actual Amount', sum('Planned Amount') as 'Planned Amount', min(first('ActualDailyAmount'))over ([..0] partition by 'Id' order by ('Date_Year','Date_Month')) as 'ActualDailyAmount', min(first('PlannedDailyAmount'))over ([..0] partition by 'Id' order by ('Date_Year','Date_Month')) as 'PlannedDailyAmount', min(first('SalesPrice'))over ([..0] partition by 'Id' order by ('Date_Year','Date_Month')) as 'SalesPrice'; FilledData_planned = filter FilledData_planned by coalesce('Start',0) != 0 || ('Date' > 'StartFilter' && 'Date' > 'Start Date' && 'Date' < 'End Date' && 'Date' < 'EndFilter'); FilledData_planned = foreach FilledData_planned generate 'Id', 'Date_Year', 'Date_Month', 0 as 'Actual Amount', 'SalesPrice' as 'SalesPrice', (case when 'Planned Amount' is null then month_days(toDate('Date'))*'PlannedDailyAmount' else 'Planned Amount' end) as 'Planned Amount'; FilledData = union FilledData_actual, FilledData_planned; result = group FilledData by ('Id','Date_Year', 'Date_Month'); result = foreach result generate 'Date_Year', 'Date_Month', sum('Actual Amount') as 'Actual', sum('Planned Amount') as 'Plan', (sum('Actual Amount') - sum('Planned Amount')) as 'Actual vs Planned Difference'; result = group result by all; result = foreach result generate sum('Plan') as 'sum_Planned Demand', sum('Actual') as 'sum_Actual Demand', sum('Actual vs Planned Difference') as 'sum_Actual vs Planned Difference';",
        "receiveFacet" : true,
        "selectMode" : "single",
        "strings" : [ ],
        "type" : "saql",
        "useGlobal" : true,
        "visualizationParameters" : {
          "parameters" : {
            "autoFitMode" : "keepLabels",
            "showValues" : true,
            "bins" : {
              "breakpoints" : {
                "high" : 100,
                "low" : 0
              },
              "bands" : {
                "high" : {
                  "color" : "#008000",
                  "label" : ""
                },
                "low" : {
                  "color" : "#B22222",
                  "label" : ""
                },
                "medium" : {
                  "color" : "#ffa500",
                  "label" : ""
                }
              }
            },
            "legend" : {
              "descOrder" : false,
              "showHeader" : true,
              "show" : true,
              "customSize" : "auto",
              "position" : "right-top",
              "inside" : false
            },
            "axisMode" : "multi",
            "tooltip" : {
              "showBinLabel" : true,
              "measures" : "",
              "showNullValues" : true,
              "showPercentage" : true,
              "showDimensions" : true,
              "showMeasures" : true,
              "customizeTooltip" : false,
              "dimensions" : ""
            },
            "visualizationType" : "hbar",
            "title" : {
              "fontSize" : 14,
              "subtitleFontSize" : 11,
              "label" : "",
              "align" : "center",
              "subtitleLabel" : ""
            },
            "binValues" : false,
            "trellis" : {
              "flipLabels" : false,
              "showGridLines" : true,
              "size" : [
                100,
                100
              ],
              "enable" : false,
              "type" : "x",
              "chartsPerLine" : 4
            },
            "showActionMenu" : true,
            "measureAxis2" : {
              "sqrtScale" : false,
              "showTitle" : true,
              "showAxis" : true,
              "title" : "",
              "customDomain" : {
                "showDomain" : false
              }
            },
            "measureAxis1" : {
              "sqrtScale" : false,
              "showTitle" : true,
              "showAxis" : true,
              "title" : "",
              "customDomain" : {
                "showDomain" : false
              }
            },
            "theme" : "wave",
            "dimensionAxis" : {
              "showTitle" : true,
              "customSize" : "auto",
              "showAxis" : true,
              "title" : "",
              "icons" : {
                "useIcons" : false,
                "iconProps" : {
                  "fit" : "cover",
                  "column" : "",
                  "type" : "round"
                }
              }
            },
            "applyConditionalFormatting" : true
          },
          "type" : "chart"
        }
      },
      "Revenue_Count_Toggle_1" : {
        "broadcastFacet" : true,
        "columns" : {
          "value_demand_Shortfall_generate" : {
            "type" : "string"
          },
          "value_demand_Shortfall_String" : {
            "type" : "string"
          },
          "value_best_worst" : {
            "type" : "string"
          },
          "value_demand_Shortfall_condition" : {
            "type" : "string"
          },
          "value_demand_Shortfall_String_No_Quotes" : {
            "type" : "string"
          },
          "value_compliance_generate" : {
            "type" : "string"
          },
          "value_best_worst_generate" : {
            "type" : "string"
          },
          "value_demand_Shortfall" : {
            "type" : "string"
          },
          "value_compliance" : {
            "type" : "string"
          },
          "Display" : {
            "type" : "string"
          }
        },
        "label" : "Revenue/Count Toggle",
        "selectMode" : "singlerequired",
        "type" : "staticflex",
        "values" : [
          {
            "display" : "Revenue",
            "value_best_worst" : "'Planned Vs Actual difference'",
            "value_best_worst_generate" : "'Planned Amount Till Date'-'B' as 'Planned Vs Actual difference'",
            "value_compliance" : "'Compliance'",
            "value_compliance_generate" : "'B'/'Planned Amount Till Date' as 'Compliance'",
            "value_demand_Shortfall" : "'$ Actual vs Planned Difference'",
            "value_demand_Shortfall_String" : "\"$ Actual vs Planned Difference\"",
            "value_demand_Shortfall_String_No_Quotes" : "$ Actual vs Planned Difference",
            "value_demand_Shortfall_generate" : "sum('B') - sum('Planned Amount Till Date') as '$ Actual vs Planned Difference'",
            "value_demand_Shortfall_condition" : "sum('B') - sum('Planned Amount Till Date')"
          },
          {
            "display" : "Quantity",
            "value_best_worst" : "'Planned Vs Actual difference'",
            "value_best_worst_generate" : "'Planned Quantity Till Date'-'Actual Qty' as 'Planned Vs Actual difference'",
            "value_compliance" : "'Qty Compliance'",
            "value_compliance_generate" : "'Actual Qty'/'Planned Quantity Till Date' as 'Qty Compliance'",
            "value_demand_Shortfall" : "'# Actual vs Planned Difference'",
            "value_demand_Shortfall_String" : "\"# Actual vs Planned Difference\"",
            "value_demand_Shortfall_String_No_Quotes" : "# Actual vs Planned Difference",
            "value_demand_Shortfall_generate" : "sum('A') - sum('Planned Quantity Till Date') as '# Actual vs Planned Difference'",
            "value_demand_Shortfall_condition" : "sum('A') - sum('Planned Quantity Till Date')"
          }
        ]
      },
      "Value_of_Products_1" : {
        "broadcastFacet" : true,
        "groups" : [ ],
        "label" : "Value of Products",
        "numbers" : [ ],
        "query" : "q = load \"${App.Datasets.MFG_SalesAgreementProductSchedule_tp.FullyQualifiedName}\";\nq = filter q by (('SalesAgreementProduct.SalesAgreement.StatusCode' in [\"Approved\", \"Draft\"]) && (date('SalesAgreementProduct.SalesAgreement.StartDate_Year', 'SalesAgreementProduct.SalesAgreement.StartDate_Month', 'SalesAgreementProduct.SalesAgreement.StartDate_Day') in [\"current {{cell(Time_Filter_1_1.selection,0,\"Text2\").asObject()}}\"..\"current {{cell(Time_Filter_1_1.selection,0,\"Text2\").asObject()}}\"])) || (('SalesAgreementProduct.SalesAgreement.Derived_Status' in [\"Upcoming Renewal\",\"UnderRevision\"]));\nq = group q by 'SalesAgreementProduct.Name';\nq = foreach q generate 'SalesAgreementProduct.Name' as 'SalesAgreementProduct.Name', sum('DerivedPlannedAmount') as 'sum_DerivedPlannedAmount';\nq = order q by 'sum_DerivedPlannedAmount' desc;",
        "receiveFacet" : true,
        "selectMode" : "multi",
        "strings" : [ ],
        "type" : "saql",
        "useGlobal" : true,
        "visualizationParameters" : {
          "parameters" : {
            "autoFitMode" : "keepLabels",
            "showValues" : true,
            "bins" : {
              "breakpoints" : {
                "high" : 100,
                "low" : 0
              },
              "bands" : {
                "high" : {
                  "color" : "#008000",
                  "label" : ""
                },
                "low" : {
                  "color" : "#B22222",
                  "label" : ""
                },
                "medium" : {
                  "color" : "#ffa500",
                  "label" : ""
                }
              }
            },
            "legend" : {
              "descOrder" : false,
              "showHeader" : true,
              "show" : true,
              "customSize" : "auto",
              "position" : "right-top",
              "inside" : false
            },
            "axisMode" : "multi",
            "tooltip" : {
              "showBinLabel" : true,
              "measures" : "",
              "showNullValues" : true,
              "showPercentage" : true,
              "showDimensions" : true,
              "showMeasures" : true,
              "customizeTooltip" : false,
              "dimensions" : ""
            },
            "visualizationType" : "hbar",
            "title" : {
              "fontSize" : 14,
              "subtitleFontSize" : 11,
              "label" : "",
              "align" : "center",
              "subtitleLabel" : ""
            },
            "binValues" : false,
            "trellis" : {
              "flipLabels" : false,
              "showGridLines" : true,
              "size" : [
                100,
                100
              ],
              "enable" : false,
              "type" : "x",
              "chartsPerLine" : 4
            },
            "columnMap" : {
              "trellis" : [ ],
              "dimensionAxis" : [
                "SalesAgreementProduct.Name"
              ],
              "plots" : [
                "sum_DerivedPlannedAmount"
              ]
            },
            "showActionMenu" : true,
            "measureAxis2" : {
              "sqrtScale" : false,
              "showTitle" : true,
              "showAxis" : true,
              "title" : "",
              "customDomain" : {
                "showDomain" : false
              }
            },
            "measureAxis1" : {
              "sqrtScale" : false,
              "showTitle" : true,
              "showAxis" : true,
              "title" : "",
              "customDomain" : {
                "showDomain" : false
              }
            },
            "theme" : "wave",
            "dimensionAxis" : {
              "showTitle" : true,
              "customSize" : "auto",
              "showAxis" : true,
              "title" : "",
              "icons" : {
                "useIcons" : false,
                "iconProps" : {
                  "fit" : "cover",
                  "column" : "",
                  "type" : "round"
                }
              }
            },
            "applyConditionalFormatting" : true
          },
          "type" : "chart"
        }
      },
      "Average_compliance_1" : {
        "broadcastFacet" : true,
        "groups" : [ ],
        "label" : "Average compliance",
        "numbers" : [ ],
        "query" : "q = load \"${App.Datasets.MFG_SalesAgreementProductSchedule_tp.FullyQualifiedName}\"; q = filter q by 'SalesAgreementProduct.SalesAgreement.StatusCode' == \"Activated\"; result = group q by 'SalesAgreementProduct.SalesAgreement.Name'; result = foreach result generate q.'SalesAgreementProduct.SalesAgreement.Name' as 'SalesAgreementProduct.SalesAgreement.Name', sum(q.'DerivedPlannedAmount') as 'A', sum(q.'DerivedActualAmount') as 'B', daysBetween(toDate(first(q.'SalesAgreementProduct.SalesAgreement.StartDate_sec_epoch')),now()) + 1 as '# Active Days', ((daysBetween(toDate(first(q.'SalesAgreementProduct.SalesAgreement.StartDate_sec_epoch')),now()) + 1) * sum(q.'DerivedPlannedAmount'))/((daysBetween(toDate(first(q.'SalesAgreementProduct.SalesAgreement.StartDate_sec_epoch')),toDate(first(q.'SalesAgreementProduct.SalesAgreement.EndDate_sec_epoch'))) + 1)) as 'Planned Amount Till Date'; result = foreach result generate 'SalesAgreementProduct.SalesAgreement.Name', 'A', 'B', '# Active Days', 'B'/'Planned Amount Till Date' as 'Compliance', 'Planned Amount Till Date'-'B' as 'Revenue Leak', 'Planned Amount Till Date' as 'Planned Amount Till Date'; result = group result by all; result = foreach result generate sum(B)/sum('Planned Amount Till Date') as 'avg_Compliance', sum(B)/sum('Planned Amount Till Date')*100 as 'avg_Comp';",
        "receiveFacet" : true,
        "selectMode" : "single",
        "strings" : [ ],
        "type" : "saql",
        "useGlobal" : true,
        "visualizationParameters" : {
          "parameters" : {
            "autoFitMode" : "keepLabels",
            "showValues" : true,
            "bins" : {
              "breakpoints" : {
                "high" : 100,
                "low" : 0
              },
              "bands" : {
                "high" : {
                  "color" : "#008000",
                  "label" : ""
                },
                "low" : {
                  "color" : "#B22222",
                  "label" : ""
                },
                "medium" : {
                  "color" : "#ffa500",
                  "label" : ""
                }
              }
            },
            "legend" : {
              "descOrder" : false,
              "showHeader" : true,
              "show" : true,
              "customSize" : "auto",
              "position" : "right-top",
              "inside" : false
            },
            "axisMode" : "multi",
            "tooltip" : {
              "showBinLabel" : true,
              "measures" : "",
              "showNullValues" : true,
              "showPercentage" : true,
              "showDimensions" : true,
              "showMeasures" : true,
              "customizeTooltip" : false,
              "dimensions" : ""
            },
            "visualizationType" : "hbar",
            "title" : {
              "fontSize" : 14,
              "subtitleFontSize" : 11,
              "label" : "",
              "align" : "center",
              "subtitleLabel" : ""
            },
            "binValues" : false,
            "trellis" : {
              "flipLabels" : false,
              "showGridLines" : true,
              "size" : [
                100,
                100
              ],
              "enable" : false,
              "type" : "x",
              "chartsPerLine" : 4
            },
            "showActionMenu" : true,
            "measureAxis2" : {
              "sqrtScale" : false,
              "showTitle" : true,
              "showAxis" : true,
              "title" : "",
              "customDomain" : {
                "showDomain" : false
              }
            },
            "measureAxis1" : {
              "sqrtScale" : false,
              "showTitle" : true,
              "showAxis" : true,
              "title" : "",
              "customDomain" : {
                "showDomain" : false
              }
            },
            "theme" : "wave",
            "dimensionAxis" : {
              "showTitle" : true,
              "customSize" : "auto",
              "showAxis" : true,
              "title" : "",
              "icons" : {
                "useIcons" : false,
                "iconProps" : {
                  "fit" : "cover",
                  "column" : "",
                  "type" : "round"
                }
              }
            },
            "applyConditionalFormatting" : true
          },
          "type" : "chart"
        }
      },
      "Sales_agreements_pip_1" : {
        "broadcastFacet" : true,
        "groups" : [ ],
        "label" : "Sales agreements pipeline details table",
        "numbers" : [ ],
        "query" : "q = load \"${App.Datasets.MFG_SalesAgreementProductSchedule_tp.FullyQualifiedName}\";\nresult = group q by ('SalesAgreementProduct.SalesAgreement.StatusCode', 'SalesAgreementProduct.SalesAgreement.Name', 'SalesAgreementProduct.SalesAgreement.Account.Name', 'SalesAgreementProduct.SalesAgreement.ScheduleFrequency', 'SalesAgreementProduct.SalesAgreement.StartDate_Year', 'SalesAgreementProduct.SalesAgreement.StartDate_Month', 'SalesAgreementProduct.SalesAgreement.StartDate_Day', 'SalesAgreementProduct.SalesAgreement.EndDate_Year', 'SalesAgreementProduct.SalesAgreement.EndDate_Month', 'SalesAgreementProduct.SalesAgreement.EndDate_Day');\nresult = foreach result generate q.'SalesAgreementProduct.SalesAgreement.StatusCode' as 'SalesAgreementProduct.SalesAgreement.StatusCode', q.'SalesAgreementProduct.SalesAgreement.Name' as 'SalesAgreementProduct.SalesAgreement.Name', 'SalesAgreementProduct.SalesAgreement.Account.Name' as 'SalesAgreementProduct.SalesAgreement.Account.Name', 'SalesAgreementProduct.SalesAgreement.ScheduleFrequency' as 'SalesAgreementProduct.SalesAgreement.ScheduleFrequency', q.'SalesAgreementProduct.SalesAgreement.StartDate_Year' + \"~~~\" + q.'SalesAgreementProduct.SalesAgreement.StartDate_Month' + \"~~~\" + q.'SalesAgreementProduct.SalesAgreement.StartDate_Day' as 'SalesAgreementProduct.SalesAgreement.StartDate_Year~~~SalesAgreementProduct.SalesAgreement.StartDate_Month~~~SalesAgreementProduct.SalesAgreement.StartDate_Day', q.'SalesAgreementProduct.SalesAgreement.EndDate_Year' + \"~~~\" + q.'SalesAgreementProduct.SalesAgreement.EndDate_Month' + \"~~~\" + q.'SalesAgreementProduct.SalesAgreement.EndDate_Day' as 'SalesAgreementProduct.SalesAgreement.EndDate_Year~~~SalesAgreementProduct.SalesAgreement.EndDate_Month~~~SalesAgreementProduct.SalesAgreement.EndDate_Day', sum(q.'DerivedPlannedAmount') as 'A', sum(q.'DerivedActualAmount') as 'B';\nresult = order result by ('SalesAgreementProduct.SalesAgreement.StatusCode' asc, 'SalesAgreementProduct.SalesAgreement.Name' asc, 'SalesAgreementProduct.SalesAgreement.Account.Name' asc, 'SalesAgreementProduct.SalesAgreement.StartDate_Year~~~SalesAgreementProduct.SalesAgreement.StartDate_Month~~~SalesAgreementProduct.SalesAgreement.StartDate_Day' asc, 'SalesAgreementProduct.SalesAgreement.EndDate_Year~~~SalesAgreementProduct.SalesAgreement.EndDate_Month~~~SalesAgreementProduct.SalesAgreement.EndDate_Day' asc);\nresult = limit result 2000;",
        "receiveFacet" : true,
        "selectMode" : "single",
        "strings" : [ ],
        "type" : "saql",
        "useGlobal" : true,
        "visualizationParameters" : {
          "parameters" : {
            "borderColor" : "#e0e5ee",
            "borderWidth" : 1,
            "cell" : {
              "backgroundColor" : "#ffffff",
              "fontColor" : "#16325c",
              "fontSize" : 12
            },
            "columnProperties" : { },
            "columns" : [ ],
            "customBulkActions" : [ ],
            "header" : {
              "backgroundColor" : "#f4f6f9",
              "fontColor" : "#16325c",
              "fontSize" : 12
            },
            "innerMajorBorderColor" : "#a8b7c7",
            "innerMinorBorderColor" : "#e0e5ee",
            "maxColumnWidth" : 300,
            "minColumnWidth" : 40,
            "mode" : "variable",
            "numberOfLines" : 1,
            "showActionMenu" : true,
            "showRowIndexColumn" : false,
            "totals" : true,
            "verticalPadding" : 8
          },
          "type" : "table"
        }
      },
      "SalesAgreementProduc_1" : {
        "broadcastFacet" : true,
        "groups" : [ ],
        "label" : "Best/Worst Performing Agreements",
        "numbers" : [ ],
        "query" : "q = load \"${App.Datasets.MFG_SalesAgreementProductSchedule_tp.FullyQualifiedName}\"; q = filter q by 'SalesAgreementProduct.SalesAgreement.StatusCode' == \"Activated\"; result = group q by 'SalesAgreementProduct.SalesAgreement.Name'; result = foreach result generate q.'SalesAgreementProduct.SalesAgreement.Name' as 'SalesAgreementProduct.SalesAgreement.Name', sum(q.'DerivedPlannedAmount') as 'A', sum(q.'DerivedActualAmount') as 'B', daysBetween(toDate(first(q.'SalesAgreementProduct.SalesAgreement.StartDate_sec_epoch')),now()) + 1 as '# Active Days', ((daysBetween(toDate(first(q.'SalesAgreementProduct.SalesAgreement.StartDate_sec_epoch')),now()) + 1) * sum(q.'DerivedPlannedAmount'))/((daysBetween(toDate(first(q.'SalesAgreementProduct.SalesAgreement.StartDate_sec_epoch')),toDate(first(q.'SalesAgreementProduct.SalesAgreement.EndDate_sec_epoch'))) + 1)) as 'Planned Amount Till Date', ((daysBetween(toDate(first(q.'SalesAgreementProduct.SalesAgreement.StartDate_sec_epoch')),now()) + 1) * sum(q.'PlannedQuantity'))/((daysBetween(toDate(first(q.'SalesAgreementProduct.SalesAgreement.StartDate_sec_epoch')),toDate(first(q.'SalesAgreementProduct.SalesAgreement.EndDate_sec_epoch'))) + 1)) as 'Planned Quantity Till Date', sum(q.'ActualQuantity') as 'Actual Qty'; result = foreach result generate 'SalesAgreementProduct.SalesAgreement.Name', '# Active Days', {{coalesce(cell(Revenue_Count_Toggle_1.selection,0,\"value_compliance_generate\"),0).asObject()}}, {{coalesce(cell(Revenue_Count_Toggle_1.selection,0,\"value_best_worst_generate\"),0).asObject()}}; result = order result by ('SalesAgreementProduct.SalesAgreement.Name' asc); result = limit result 5000;",
        "receiveFacet" : true,
        "selectMode" : "multi",
        "strings" : [ ],
        "type" : "saql",
        "useGlobal" : true,
        "visualizationParameters" : {
          "parameters" : {
            "autoFitMode" : "keepLabels",
            "legend" : {
              "descOrder" : false,
              "showHeader" : true,
              "show" : true,
              "customSize" : "auto",
              "position" : "right-top",
              "inside" : false
            },
            "tooltip" : {
              "showBinLabel" : true,
              "measures" : "",
              "showNullValues" : true,
              "showPercentage" : true,
              "showDimensions" : true,
              "showMeasures" : true,
              "customizeTooltip" : false,
              "dimensions" : ""
            },
            "visualizationType" : "scatter",
            "title" : {
              "fontSize" : 14,
              "subtitleFontSize" : 11,
              "label" : "",
              "align" : "center",
              "subtitleLabel" : ""
            },
            "trellis" : {
              "flipLabels" : false,
              "showGridLines" : true,
              "size" : [
                100,
                100
              ],
              "enable" : false,
              "type" : "x",
              "chartsPerLine" : 4
            },
            "radiusRatio" : 5,
            "columnMap" : {
              "r" : [
                "Revenue Leak"
              ],
              "x" : [
                "# Active Days"
              ],
              "y" : [
                "Compliance"
              ],
              "trellis" : [ ],
              "plots" : [
                "SalesAgreementProduct.SalesAgreement.Name"
              ]
            },
            "showActionMenu" : true,
            "x" : {
              "sqrtScale" : false,
              "showZero" : true,
              "showTitle" : true,
              "showAxis" : true,
              "title" : "",
              "customDomain" : {
                "showDomain" : false
              }
            },
            "y" : {
              "sqrtScale" : false,
              "showZero" : true,
              "showTitle" : true,
              "showAxis" : true,
              "referenceLines" : [
                {
                  "color" : "rgb(0, 161, 224)",
                  "label" : "100% Compliance",
                  "value" : 100
                },
                {
                  "color" : "#CD96FF",
                  "label" : "Avg Compliance",
                  "value" : "{{coalesce(cell(Average_compliance_1.result,0,\"avg_Comp\"),1).asObject()}}"
                }
              ],
              "title" : "",
              "customDomain" : {
                "showDomain" : false
              }
            },
            "theme" : "wave",
            "applyConditionalFormatting" : true
          },
          "type" : "chart"
        }
      },
      "Demand_Shortfall_1" : {
        "broadcastFacet" : true,
        "groups" : [
          "SalesAgreementProduct.Name"
        ],
        "label" : "Actual vs Planned Difference",
        "numbers" : [
          "{{coalesce(cell(Revenue_Count_Toggle_1.selection,0,\"value_demand_Shortfall_String_No_Quotes\"),0).asObject()}}"
        ],
        "query" : "q = load \"${App.Datasets.MFG_SalesAgreementProductSchedule_tp.FullyQualifiedName}\"; q = filter q by 'SalesAgreementProduct.SalesAgreement.StatusCode' == \"Activated\"; result = group q by ('SalesAgreementProduct.SalesAgreement.Name', 'SalesAgreementProduct.Name'); result = foreach result generate q.'SalesAgreementProduct.SalesAgreement.Name' as 'SalesAgreementProduct.SalesAgreement.Name', 'SalesAgreementProduct.Name' as 'SalesAgreementProduct.Name',  sum(q.'ActualQuantity') as 'A', sum(q.'DerivedActualAmount') as 'B', ((daysBetween(toDate(first(q.'SalesAgreementProduct.SalesAgreement.StartDate_sec_epoch')),now()) + 1) * sum(q.'DerivedPlannedAmount'))/((daysBetween(toDate(first(q.'SalesAgreementProduct.SalesAgreement.StartDate_sec_epoch')), toDate(first(q.'SalesAgreementProduct.SalesAgreement.EndDate_sec_epoch'))) + 1)) as 'Planned Amount Till Date', ((daysBetween(toDate(first(q.'SalesAgreementProduct.SalesAgreement.StartDate_sec_epoch')),now()) + 1) * sum(q.'PlannedQuantity'))/((daysBetween(toDate(first(q.'SalesAgreementProduct.SalesAgreement.StartDate_sec_epoch')), toDate(first(q.'SalesAgreementProduct.SalesAgreement.EndDate_sec_epoch'))) + 1)) as 'Planned Quantity Till Date'; result = group result by 'SalesAgreementProduct.Name'; result = foreach result generate 'SalesAgreementProduct.Name', case when {{coalesce(cell(Revenue_Count_Toggle_1.selection,0,\"value_demand_Shortfall_condition\"),0).asObject()}} < 0 then \"N\" else \"P\" end as 'Mod', {{coalesce(cell(Revenue_Count_Toggle_1.selection,0,\"value_demand_Shortfall_generate\"),0).asObject()}}; result = order result by ({{coalesce(cell(Revenue_Count_Toggle_1.selection,0,\"value_demand_Shortfall\"),0).asObject()}} asc); result = limit result 5000;",
        "receiveFacet" : true,
        "selectMode" : "multi",
        "strings" : [
          "SalesAgreementProduct.Name",
          "Mod"
        ],
        "type" : "saql",
        "useGlobal" : true,
        "visualizationParameters" : {
          "parameters" : {
            "autoFitMode" : "keepLabels",
            "showValues" : true,
            "bins" : {
              "breakpoints" : {
                "high" : 100,
                "low" : 0
              },
              "bands" : {
                "high" : {
                  "color" : "#008000",
                  "label" : ""
                },
                "low" : {
                  "color" : "#B22222",
                  "label" : ""
                },
                "medium" : {
                  "color" : "#ffa500",
                  "label" : ""
                }
              }
            },
            "legend" : {
              "descOrder" : false,
              "showHeader" : true,
              "show" : true,
              "customSize" : "auto",
              "position" : "right-top",
              "inside" : false
            },
            "axisMode" : "multi",
            "tooltip" : {
              "showBinLabel" : true,
              "measures" : "",
              "showNullValues" : true,
              "showPercentage" : true,
              "showDimensions" : true,
              "showMeasures" : true,
              "customizeTooltip" : false,
              "dimensions" : ""
            },
            "visualizationType" : "hbar",
            "title" : {
              "fontSize" : 14,
              "subtitleFontSize" : 11,
              "label" : "",
              "align" : "center",
              "subtitleLabel" : ""
            },
            "binValues" : false,
            "trellis" : {
              "flipLabels" : false,
              "showGridLines" : true,
              "size" : [
                100,
                100
              ],
              "enable" : false,
              "type" : "x",
              "chartsPerLine" : 4
            },
            "showActionMenu" : true,
            "measureAxis2" : {
              "sqrtScale" : false,
              "showTitle" : true,
              "showAxis" : true,
              "title" : "",
              "customDomain" : {
                "showDomain" : false
              }
            },
            "measureAxis1" : {
              "sqrtScale" : false,
              "showTitle" : true,
              "showAxis" : true,
              "title" : "",
              "customDomain" : {
                "showDomain" : false
              }
            },
            "theme" : "wave",
            "dimensionAxis" : {
              "showTitle" : true,
              "customSize" : "auto",
              "showAxis" : true,
              "title" : "",
              "icons" : {
                "useIcons" : false,
                "iconProps" : {
                  "fit" : "cover",
                  "column" : "",
                  "type" : "round"
                }
              }
            },
            "applyConditionalFormatting" : true
          },
          "type" : "chart"
        }
      },
      "Time_Filter_2_1" : {
        "broadcastFacet" : true,
        "columns" : {
          "Text2" : {
            "type" : "string"
          },
          "Display" : {
            "type" : "string"
          }
        },
        "label" : "Time Filter 2",
        "selectMode" : "singlerequired",
        "type" : "staticflex",
        "values" : [
          {
            "Display" : "Year",
            "Text2" : "year"
          },
          {
            "Display" : "Quarter",
            "Text2" : "quarter"
          },
          {
            "Display" : "Month",
            "Text2" : "month"
          }
        ]
      },
      "Time_Filter_1_1" : {
        "broadcastFacet" : true,
        "columns" : {
          "Text2" : {
            "type" : "string"
          },
          "Display" : {
            "type" : "string"
          }
        },
        "label" : "Time Filter 1",
        "selectMode" : "singlerequired",
        "type" : "staticflex",
        "values" : [
          {
            "Display" : "Year",
            "Text2" : "year"
          },
          {
            "Display" : "Quarter",
            "Text2" : "quarter"
          },
          {
            "Display" : "Month",
            "Text2" : "month"
          }
        ]
      },
      "Value_of_agreements_1" : {
        "broadcastFacet" : true,
        "groups" : [ ],
        "label" : "Value of agreements",
        "numbers" : [ ],
        "query" : "q = load \"${App.Datasets.MFG_SalesAgreementProductSchedule_tp.FullyQualifiedName}\";\nq = filter q by (('SalesAgreementProduct.SalesAgreement.StatusCode' in [\"Approved\", \"Draft\"]) && (date('SalesAgreementProduct.SalesAgreement.StartDate_Year', 'SalesAgreementProduct.SalesAgreement.StartDate_Month', 'SalesAgreementProduct.SalesAgreement.StartDate_Day') in [\"current {{cell(Time_Filter_1_1.selection,0,\"Text2\").asObject()}}\"..\"current {{cell(Time_Filter_1_1.selection,0,\"Text2\").asObject()}}\"])) || (('SalesAgreementProduct.SalesAgreement.Derived_Status' in [\"Upcoming Renewal\",\"UnderRevision\"]));\nq = group q by 'SalesAgreementProduct.SalesAgreement.Name';\nq = foreach q generate 'SalesAgreementProduct.SalesAgreement.Name' as 'SalesAgreementProduct.SalesAgreement.Name', sum('DerivedPlannedAmount') as 'sum_DerivedPlannedAmount';\nq = order q by 'sum_DerivedPlannedAmount' desc;",
        "receiveFacet" : true,
        "selectMode" : "multi",
        "strings" : [ ],
        "type" : "saql",
        "useGlobal" : true,
        "visualizationParameters" : {
          "parameters" : {
            "autoFitMode" : "keepLabels",
            "showValues" : true,
            "bins" : {
              "breakpoints" : {
                "high" : 100,
                "low" : 0
              },
              "bands" : {
                "high" : {
                  "color" : "#008000",
                  "label" : ""
                },
                "low" : {
                  "color" : "#B22222",
                  "label" : ""
                },
                "medium" : {
                  "color" : "#ffa500",
                  "label" : ""
                }
              }
            },
            "legend" : {
              "descOrder" : false,
              "showHeader" : true,
              "show" : true,
              "customSize" : "auto",
              "position" : "right-top",
              "inside" : false
            },
            "axisMode" : "multi",
            "tooltip" : {
              "showBinLabel" : true,
              "measures" : "",
              "showNullValues" : true,
              "showPercentage" : true,
              "showDimensions" : true,
              "showMeasures" : true,
              "customizeTooltip" : false,
              "dimensions" : ""
            },
            "visualizationType" : "hbar",
            "title" : {
              "fontSize" : 14,
              "subtitleFontSize" : 11,
              "label" : "",
              "align" : "center",
              "subtitleLabel" : ""
            },
            "binValues" : false,
            "trellis" : {
              "flipLabels" : false,
              "showGridLines" : true,
              "size" : [
                100,
                100
              ],
              "enable" : false,
              "type" : "x",
              "chartsPerLine" : 4
            },
            "columnMap" : {
              "trellis" : [ ],
              "dimensionAxis" : [
                "SalesAgreementProduct.SalesAgreement.Name"
              ],
              "plots" : [
                "sum_DerivedPlannedAmount"
              ]
            },
            "showActionMenu" : true,
            "measureAxis2" : {
              "sqrtScale" : false,
              "showTitle" : true,
              "showAxis" : true,
              "title" : "",
              "customDomain" : {
                "showDomain" : false
              }
            },
            "measureAxis1" : {
              "sqrtScale" : false,
              "showTitle" : true,
              "showAxis" : true,
              "title" : "",
              "customDomain" : {
                "showDomain" : false
              }
            },
            "theme" : "wave",
            "dimensionAxis" : {
              "showTitle" : true,
              "customSize" : "auto",
              "showAxis" : true,
              "title" : "",
              "icons" : {
                "useIcons" : false,
                "iconProps" : {
                  "fit" : "cover",
                  "column" : "",
                  "type" : "round"
                }
              }
            },
            "applyConditionalFormatting" : true
          },
          "type" : "chart"
        }
      },
      "State_of_active_agre_1" : {
        "broadcastFacet" : true,
        "datasets" : [
          {
            "name" : "${App.Datasets.MFG_SalesAgreementProductSchedule_tp.Name}"
          }
        ],
        "isGlobal" : false,
        "label" : "State of active agreements",
        "query" : {
          "query" : {
            "measures" : [
              [
                "sum",
                "DerivedPlannedAmount",
                "A"
              ],
              [
                "sum",
                "DerivedActualAmount",
                "B"
              ],
              [
                "count",
                "*",
                "C"
              ],
              [
                "count",
                "*",
                "D"
              ],
              [
                "count",
                "*",
                "E"
              ]
            ],
            "columns" : [
              {
                "query" : {
                  "measures" : [
                    [
                      "sum",
                      "DerivedPlannedAmount"
                    ]
                  ],
                  "groups" : [
                    "SalesAgreementProduct.SalesAgreement.Name",
                    "SalesAgreementProduct.SalesAgreement.Account.Name"
                  ]
                },
                "header" : "Planned Revenue "
              },
              {
                "query" : {
                  "measures" : [
                    [
                      "sum",
                      "DerivedActualAmount"
                    ]
                  ],
                  "groups" : [
                    "SalesAgreementProduct.SalesAgreement.Name",
                    "SalesAgreementProduct.SalesAgreement.Account.Name"
                  ]
                },
                "header" : "Realization"
              },
              {
                "query" : {
                  "measures" : [
                    [
                      "count",
                      "*"
                    ]
                  ],
                  "groups" : [
                    "SalesAgreementProduct.SalesAgreement.Name",
                    "SalesAgreementProduct.SalesAgreement.Account.Name"
                  ],
                  "formula" : "daysBetween(toDate(first('SalesAgreementProduct.SalesAgreement.StartDate_sec_epoch')), now()) + 1"
                },
                "header" : "Active Days"
              },
              {
                "query" : {
                  "measures" : [
                    [
                      "count",
                      "*"
                    ]
                  ],
                  "groups" : [
                    "SalesAgreementProduct.SalesAgreement.Name",
                    "SalesAgreementProduct.SalesAgreement.Account.Name"
                  ],
                  "formula" : "daysBetween(now(), toDate(first('SalesAgreementProduct.SalesAgreement.EndDate_sec_epoch')))"
                },
                "header" : "Days Remaining"
              },
              {
                "query" : {
                  "measures" : [
                    [
                      "count",
                      "*"
                    ]
                  ],
                  "groups" : [
                    "SalesAgreementProduct.SalesAgreement.Name",
                    "SalesAgreementProduct.SalesAgreement.Account.Name"
                  ],
                  "formula" : "A - B"
                },
                "header" : "Outstanding Revenue"
              }
            ],
            "groups" : [
              "SalesAgreementProduct.SalesAgreement.Name",
              "SalesAgreementProduct.SalesAgreement.Account.Name"
            ],
            "filters" : [
              [
                "SalesAgreementProduct.SalesAgreement.StatusCode",
                [
                  "Activated"
                ],
                "in"
              ]
            ]
          },
          "version" : -1.0
        },
        "receiveFacet" : true,
        "selectMode" : "multi",
        "type" : "aggregateflex",
        "useGlobal" : true,
        "visualizationParameters" : {
          "options" : { },
          "parameters" : {
            "borderColor" : "#e0e5ee",
            "borderWidth" : 1,
            "cell" : {
              "backgroundColor" : "#ffffff",
              "fontColor" : "#16325c",
              "fontSize" : 12
            },
            "columnProperties" : { },
            "columns" : [ ],
            "customBulkActions" : [ ],
            "header" : {
              "backgroundColor" : "#f4f6f9",
              "fontColor" : "#16325c",
              "fontSize" : 12
            },
            "innerMajorBorderColor" : "#a8b7c7",
            "innerMinorBorderColor" : "#e0e5ee",
            "maxColumnWidth" : 300,
            "minColumnWidth" : 40,
            "mode" : "variable",
            "numberOfLines" : 1,
            "showActionMenu" : true,
            "showRowIndexColumn" : false,
            "totals" : true,
            "verticalPadding" : 8
          },
          "type" : "table"
        }
      },
      "Cancelled_Revenue_1" : {
        "broadcastFacet" : true,
        "datasets" : [
          {
            "name" : "${App.Datasets.MFG_SalesAgreementProductSchedule_tp.Name}"
          }
        ],
        "isGlobal" : false,
        "label" : "Cancelled Revenue",
        "query" : {
          "query" : {
            "measures" : [
              [
                "sum",
                "DerivedActualAmount",
                "A"
              ],
              [
                "sum",
                "DerivedPlannedAmount",
                "B"
              ],
              [
                "count",
                "*",
                "C"
              ]
            ],
            "columns" : [
              {
                "query" : {
                  "measures" : [
                    [
                      "sum",
                      "DerivedActualAmount"
                    ]
                  ],
                  "groups" : [
                    "SalesAgreementProduct.SalesAgreement.Name"
                  ]
                }
              },
              {
                "query" : {
                  "measures" : [
                    [
                      "sum",
                      "DerivedPlannedAmount"
                    ]
                  ],
                  "groups" : [
                    "SalesAgreementProduct.SalesAgreement.Name"
                  ]
                }
              },
              {
                "query" : {
                  "measures" : [
                    [
                      "count",
                      "*"
                    ]
                  ],
                  "groups" : [
                    "SalesAgreementProduct.SalesAgreement.Name"
                  ],
                  "formula" : "B-A"
                },
                "header" : "Cancelled Revenue"
              }
            ],
            "groups" : [
              "SalesAgreementProduct.SalesAgreement.Name"
            ],
            "filters" : [
              [
                "SalesAgreementProduct.SalesAgreement.StatusCode",
                [
                  "Cancelled"
                ],
                "in"
              ],
              [
                "SalesAgreementProduct.SalesAgreement.CancellationDate",
                [
                  [
                    [
                      "{{cell(Time_Filter_2_1.selection,0,\"Text2\").asObject()}}",
                      0
                    ],
                    [
                      "{{cell(Time_Filter_2_1.selection,0,\"Text2\").asObject()}}",
                      0
                    ]
                  ]
                ],
                ">=<="
              ]
            ]
          },
          "version" : -1.0
        },
        "receiveFacet" : true,
        "selectMode" : "multi",
        "type" : "aggregateflex",
        "useGlobal" : true,
        "visualizationParameters" : {
          "parameters" : {
            "autoFitMode" : "keepLabels",
            "showValues" : true,
            "bins" : {
              "breakpoints" : {
                "high" : 100,
                "low" : 0
              },
              "bands" : {
                "high" : {
                  "color" : "#008000",
                  "label" : ""
                },
                "low" : {
                  "color" : "#B22222",
                  "label" : ""
                },
                "medium" : {
                  "color" : "#ffa500",
                  "label" : ""
                }
              }
            },
            "legend" : {
              "descOrder" : false,
              "showHeader" : true,
              "show" : true,
              "customSize" : "auto",
              "position" : "right-top",
              "inside" : false
            },
            "axisMode" : "multi",
            "tooltip" : {
              "showBinLabel" : true,
              "measures" : "",
              "showNullValues" : true,
              "showPercentage" : true,
              "showDimensions" : true,
              "showMeasures" : true,
              "customizeTooltip" : false,
              "dimensions" : ""
            },
            "visualizationType" : "hbar",
            "title" : {
              "fontSize" : 14,
              "subtitleFontSize" : 11,
              "label" : "",
              "align" : "center",
              "subtitleLabel" : ""
            },
            "binValues" : false,
            "trellis" : {
              "flipLabels" : false,
              "showGridLines" : true,
              "size" : [
                100,
                100
              ],
              "enable" : false,
              "type" : "x",
              "chartsPerLine" : 4
            },
            "columnMap" : {
              "trellis" : [ ],
              "dimensionAxis" : [
                "SalesAgreementProduct.SalesAgreement.Name"
              ],
              "plots" : [
                "C"
              ]
            },
            "showActionMenu" : true,
            "measureAxis2" : {
              "sqrtScale" : false,
              "showTitle" : true,
              "showAxis" : true,
              "title" : "",
              "customDomain" : {
                "showDomain" : false
              }
            },
            "measureAxis1" : {
              "sqrtScale" : false,
              "showTitle" : true,
              "showAxis" : true,
              "title" : "",
              "customDomain" : {
                "showDomain" : false
              }
            },
            "theme" : "wave",
            "dimensionAxis" : {
              "showTitle" : true,
              "customSize" : "auto",
              "showAxis" : true,
              "title" : "",
              "icons" : {
                "useIcons" : false,
                "iconProps" : {
                  "fit" : "cover",
                  "column" : "",
                  "type" : "round"
                }
              }
            },
            "applyConditionalFormatting" : true
          },
          "type" : "chart"
        }
      },
      "Agreements_that_need_2" : {
        "broadcastFacet" : true,
        "datasets" : [
          {
            "name" : "${App.Datasets.MFG_SalesAgreementProductSchedule_tp.Name}"
          }
        ],
        "isGlobal" : false,
        "label" : "Agreements that need my attention",
        "query" : {
          "query" : {
            "measures" : [
              [
                "sum",
                "DerivedPlannedAmount",
                "A"
              ],
              [
                "sum",
                "DerivedPlannedAmount",
                "B"
              ],
              [
                "sum",
                "DerivedPlannedAmount",
                "C"
              ],
              [
                "sum",
                "DerivedPlannedAmount",
                "D"
              ],
              [
                "count",
                "*",
                "E"
              ]
            ],
            "columns" : [
              {
                "query" : {
                  "measures" : [
                    [
                      "sum",
                      "DerivedPlannedAmount"
                    ]
                  ],
                  "groups" : [
                    "SalesAgreementProduct.SalesAgreement.Derived_Status"
                  ],
                  "filters" : [
                    [
                      "SalesAgreementProduct.SalesAgreement.Derived_Status",
                      [
                        "UnderRevision"
                      ],
                      "in"
                    ]
                  ]
                }
              },
              {
                "query" : {
                  "measures" : [
                    [
                      "sum",
                      "DerivedPlannedAmount"
                    ]
                  ],
                  "groups" : [
                    "SalesAgreementProduct.SalesAgreement.Derived_Status"
                  ],
                  "filters" : [
                    [
                      "SalesAgreementProduct.SalesAgreement.Derived_Status",
                      [
                        "Upcoming Renewal"
                      ],
                      "in"
                    ]
                  ]
                }
              },
              {
                "query" : {
                  "measures" : [
                    [
                      "sum",
                      "DerivedPlannedAmount"
                    ]
                  ],
                  "groups" : [
                    "SalesAgreementProduct.SalesAgreement.Derived_Status"
                  ],
                  "filters" : [
                    [
                      "SalesAgreementProduct.SalesAgreement.Derived_Status",
                      [
                        "Approved"
                      ],
                      "in"
                    ],
                    [
                      "SalesAgreementProduct.SalesAgreement.StartDate",
                      [
                        [
                          [
                            "{{cell(Time_Filter_1_1.selection,0,\"Text2\").asObject()}}",
                            0
                          ],
                          [
                            "{{cell(Time_Filter_1_1.selection,0,\"Text2\").asObject()}}",
                            0
                          ]
                        ]
                      ],
                      ">=<="
                    ]
                  ]
                }
              },
              {
                "query" : {
                  "measures" : [
                    [
                      "sum",
                      "DerivedPlannedAmount"
                    ]
                  ],
                  "groups" : [
                    "SalesAgreementProduct.SalesAgreement.Derived_Status"
                  ],
                  "filters" : [
                    [
                      "SalesAgreementProduct.SalesAgreement.Derived_Status",
                      [
                        "Pending Approval"
                      ],
                      "in"
                    ],
                    [
                      "SalesAgreementProduct.SalesAgreement.StartDate",
                      [
                        [
                          [
                            "{{cell(Time_Filter_1_1.selection,0,\"Text2\").asObject()}}",
                            0
                          ],
                          [
                            "{{cell(Time_Filter_1_1.selection,0,\"Text2\").asObject()}}",
                            0
                          ]
                        ]
                      ],
                      ">=<="
                    ]
                  ]
                }
              },
              {
                "query" : {
                  "measures" : [
                    [
                      "count",
                      "*"
                    ]
                  ],
                  "groups" : [
                    "SalesAgreementProduct.SalesAgreement.Derived_Status"
                  ],
                  "formula" : "coalesce(A,0)+ coalesce(B,0)+ coalesce(C,0)+ coalesce(D,0)"
                },
                "header" : "Planned Revenue"
              }
            ],
            "groups" : [
              "SalesAgreementProduct.SalesAgreement.Derived_Status"
            ],
            "filters" : [
              [
                "SalesAgreementProduct.SalesAgreement.Derived_Status",
                [
                  "Activated",
                  "Cancelled",
                  "Expired"
                ],
                "not in"
              ]
            ]
          },
          "version" : -1.0
        },
        "receiveFacet" : true,
        "selectMode" : "single",
        "type" : "aggregateflex",
        "useGlobal" : true,
        "visualizationParameters" : {
          "parameters" : {
            "centerText" : "",
            "legend" : {
              "descOrder" : false,
              "showHeader" : true,
              "show" : true,
              "customSize" : "auto",
              "position" : "right-top",
              "inside" : false
            },
            "showMeasureTitle" : true,
            "tooltip" : {
              "showBinLabel" : true,
              "measures" : "",
              "showNullValues" : true,
              "showPercentage" : true,
              "showDimensions" : true,
              "showMeasures" : true,
              "customizeTooltip" : false,
              "dimensions" : ""
            },
            "visualizationType" : "pie",
            "title" : {
              "fontSize" : 14,
              "subtitleFontSize" : 11,
              "label" : "",
              "align" : "center",
              "subtitleLabel" : ""
            },
            "trellis" : {
              "flipLabels" : false,
              "showGridLines" : true,
              "size" : [
                100,
                100
              ],
              "enable" : false,
              "type" : "x",
              "chartsPerLine" : 4
            },
            "inner" : 60,
            "columnMap" : {
              "trellis" : [ ],
              "dimension" : [
                "SalesAgreementProduct.SalesAgreement.Derived_Status"
              ],
              "plots" : [
                "E"
              ]
            },
            "showActionMenu" : true,
            "centerValueType" : "number",
            "valueType" : "compactNumber",
            "theme" : "wave",
            "applyConditionalFormatting" : true
          },
          "type" : "chart"
        }
      },
      "Demand_Shortfall_Ove_1" : {
        "broadcastFacet" : true,
        "groups" : [
          "StartDate_Year~~~StartDate_Month"
        ],
        "label" : "Actual vs Planned Difference Over Time",
        "numbers" : [
          "Planned Demand",
          "Actual Demand",
          "Actual vs Planned Difference"
        ],
        "query" : "all_slaps = load \"${App.Datasets.MFG_SalesAgreementProductSchedule_tp.FullyQualifiedName}\"; all_slaps = filter all_slaps by 'SalesAgreementProduct.SalesAgreement.StatusCode' == \"Activated\"; valid_slaps = filter all_slaps by 'StartDate_sec_epoch' <= {{coalesce(cell(current_year_min_and_1.result,0,\"Max\"),0).asObject()}}; valid_slaps = filter valid_slaps by 'ActualEndDate_sec_epoch' >= {{coalesce(cell(current_year_min_and_1.result,0,\"Min\"),0).asObject()}}; valid_slaps = filter valid_slaps by 'isValidProductSchedule' == \"true\"; Start = foreach valid_slaps generate {{coalesce(cell(current_year_min_and_1.result,0,\"Min\"),0).asObject()}} as 'Start', {{coalesce(cell(current_year_min_and_1.result,0,\"Max\"),0).asObject()}} as 'End', 'Id' as 'Id', 'StartDate_sec_epoch' as 'Start Date', case when 'ActualEndDate_sec_epoch' < date_to_epoch(now()) then 'ActualEndDate_sec_epoch' else date_to_epoch(now()) end as 'End Date', case when ('StartDate_sec_epoch' >= {{coalesce(cell(current_year_min_and_1.result,0,\"Min\"),0).asObject()}}) then date_to_string(toDate('StartDate_sec_epoch'),\"yyyy\") else date_to_string(toDate({{coalesce(cell(current_year_min_and_1.result,0,\"Min\"),0).asObject()}}),\"yyyy\") end as 'Date_Year', case when ('StartDate_sec_epoch' >= {{coalesce(cell(current_year_min_and_1.result,0,\"Min\"),0).asObject()}}) then date_to_string(toDate('StartDate_sec_epoch'),\"MM\") else date_to_string(toDate({{coalesce(cell(current_year_min_and_1.result,0,\"Min\"),0).asObject()}}),\"MM\") end as 'Date_Month', 'SalesPrice' * ((100-coalesce('DiscountPercentage',0))/100) as 'SalesPrice', case when 'StartDate_sec_epoch' >= {{coalesce(cell(current_year_min_and_1.result,0,\"Min\"),0).asObject()}} &&  'ActualEndDate_sec_epoch' > date_to_epoch(month_last_day(toDate('StartDate_sec_epoch'))) && date_to_epoch(now())> date_to_epoch(month_last_day(toDate('StartDate_sec_epoch'))) && {{coalesce(cell(current_year_min_and_1.result,0,\"Max\"),0).asObject()}} > date_to_epoch(month_last_day(toDate('StartDate_sec_epoch'))) && StartDate_sec_epoch <= date_to_epoch(now())  then (daysBetween(toDate('StartDate_sec_epoch'),month_last_day(toDate('StartDate_sec_epoch')))+1) * (DerivedActualAmount/(daysBetween(toDate('StartDate_sec_epoch'),case when toDate('ActualEndDate_sec_epoch') < now() then toDate('ActualEndDate_sec_epoch') else now() end)+1)) when 'StartDate_sec_epoch' >= {{coalesce(cell(current_year_min_and_1.result,0,\"Min\"),0).asObject()}} &&  'ActualEndDate_sec_epoch' >= {{coalesce(cell(current_year_min_and_1.result,0,\"Max\"),0).asObject()}} && date_to_epoch(now()) >= {{coalesce(cell(current_year_min_and_1.result,0,\"Max\"),0).asObject()}} && {{coalesce(cell(current_year_min_and_1.result,0,\"Max\"),0).asObject()}} <= date_to_epoch(month_last_day(toDate('StartDate_sec_epoch'))) && StartDate_sec_epoch <= date_to_epoch(now()) then (daysBetween(toDate('StartDate_sec_epoch'), toDate({{coalesce(cell(current_year_min_and_1.result,0,\"Max\"),0).asObject()}}))+1) * (DerivedActualAmount/(daysBetween(toDate('StartDate_sec_epoch'),case when toDate('ActualEndDate_sec_epoch') < now() then toDate('ActualEndDate_sec_epoch') else now() end)+1)) when 'StartDate_sec_epoch' >= {{coalesce(cell(current_year_min_and_1.result,0,\"Min\"),0).asObject()}} &&  'ActualEndDate_sec_epoch' >= date_to_epoch(now()) && date_to_epoch(now()) <= date_to_epoch(month_last_day(toDate('StartDate_sec_epoch'))) && {{coalesce(cell(current_year_min_and_1.result,0,\"Max\"),0).asObject()}} >= date_to_epoch(now()) && 'StartDate_sec_epoch' < date_to_epoch(now()) && StartDate_sec_epoch <= date_to_epoch(now()) then (daysBetween(toDate('StartDate_sec_epoch'), now())+1) * (DerivedActualAmount/(daysBetween(toDate('StartDate_sec_epoch'),case when toDate('ActualEndDate_sec_epoch') < now() then toDate('ActualEndDate_sec_epoch') else now() end)+1)) when 'StartDate_sec_epoch' >= {{coalesce(cell(current_year_min_and_1.result,0,\"Min\"),0).asObject()}} &&  'ActualEndDate_sec_epoch' <= date_to_epoch(month_last_day(toDate('StartDate_sec_epoch'))) && date_to_epoch(now()) >= 'ActualEndDate_sec_epoch' && {{coalesce(cell(current_year_min_and_1.result,0,\"Max\"),0).asObject()}} >= 'ActualEndDate_sec_epoch'  && StartDate_sec_epoch <= date_to_epoch(now()) then (daysBetween(toDate('StartDate_sec_epoch'), toDate('ActualEndDate_sec_epoch'))+1) * (DerivedActualAmount/(daysBetween(toDate('StartDate_sec_epoch'),case when toDate('ActualEndDate_sec_epoch') < now() then toDate('ActualEndDate_sec_epoch') else now() end)+1)) when 'StartDate_sec_epoch' < {{coalesce(cell(current_year_min_and_1.result,0,\"Min\"),0).asObject()}} &&  'ActualEndDate_sec_epoch' >= date_to_epoch(month_last_day(toDate({{coalesce(cell(current_year_min_and_1.result,0,\"Min\"),0).asObject()}}))) && date_to_epoch(now())>= date_to_epoch(month_last_day(toDate({{coalesce(cell(current_year_min_and_1.result,0,\"Min\"),0).asObject()}}))) && {{coalesce(cell(current_year_min_and_1.result,0,\"Max\"),0).asObject()}} >= date_to_epoch(month_last_day(toDate({{coalesce(cell(current_year_min_and_1.result,0,\"Min\"),0).asObject()}}))) && {{coalesce(cell(current_year_min_and_1.result,0,\"Min\"),0).asObject()}} <= date_to_epoch(now()) then (daysBetween(toDate({{coalesce(cell(current_year_min_and_1.result,0,\"Min\"),0).asObject()}}),month_last_day(toDate({{coalesce(cell(current_year_min_and_1.result,0,\"Min\"),0).asObject()}})))+1) * (DerivedActualAmount/(daysBetween(toDate('StartDate_sec_epoch'),case when toDate('ActualEndDate_sec_epoch') < now() then toDate('ActualEndDate_sec_epoch') else now() end)+1)) when 'StartDate_sec_epoch' < {{coalesce(cell(current_year_min_and_1.result,0,\"Min\"),0).asObject()}} &&  'ActualEndDate_sec_epoch' >= {{coalesce(cell(current_year_min_and_1.result,0,\"Max\"),0).asObject()}} && date_to_epoch(now())>= {{coalesce(cell(current_year_min_and_1.result,0,\"Max\"),0).asObject()}} && {{coalesce(cell(current_year_min_and_1.result,0,\"Max\"),0).asObject()}} <= date_to_epoch(month_last_day(toDate({{coalesce(cell(current_year_min_and_1.result,0,\"Min\"),0).asObject()}}))) && {{coalesce(cell(current_year_min_and_1.result,0,\"Min\"),0).asObject()}} <= date_to_epoch(now()) then (daysBetween(toDate({{coalesce(cell(current_year_min_and_1.result,0,\"Min\"),0).asObject()}}), toDate({{coalesce(cell(current_year_min_and_1.result,0,\"Max\"),0).asObject()}}))+1) * (DerivedActualAmount/(daysBetween(toDate('StartDate_sec_epoch'),case when toDate('ActualEndDate_sec_epoch') < now() then toDate('ActualEndDate_sec_epoch') else now() end)+1)) when 'StartDate_sec_epoch' < {{coalesce(cell(current_year_min_and_1.result,0,\"Min\"),0).asObject()}} &&  'ActualEndDate_sec_epoch' >= date_to_epoch(now()) && date_to_epoch(now()) <= date_to_epoch(month_last_day(toDate({{coalesce(cell(current_year_min_and_1.result,0,\"Min\"),0).asObject()}}))) && {{coalesce(cell(current_year_min_and_1.result,0,\"Max\"),0).asObject()}} >= date_to_epoch(now()) && {{coalesce(cell(current_year_min_and_1.result,0,\"Min\"),0).asObject()}} <= date_to_epoch(now()) then (daysBetween(toDate({{coalesce(cell(current_year_min_and_1.result,0,\"Min\"),0).asObject()}}), now())+1) * (DerivedActualAmount/(daysBetween(toDate('StartDate_sec_epoch'),case when toDate('ActualEndDate_sec_epoch') < now() then toDate('ActualEndDate_sec_epoch') else now() end)+1)) when 'StartDate_sec_epoch' < {{coalesce(cell(current_year_min_and_1.result,0,\"Min\"),0).asObject()}} &&  'ActualEndDate_sec_epoch' <= date_to_epoch(month_last_day(toDate({{coalesce(cell(current_year_min_and_1.result,0,\"Min\"),0).asObject()}}))) && date_to_epoch(now()) >= 'ActualEndDate_sec_epoch' && {{coalesce(cell(current_year_min_and_1.result,0,\"Max\"),0).asObject()}} >= 'ActualEndDate_sec_epoch' && {{coalesce(cell(current_year_min_and_1.result,0,\"Min\"),0).asObject()}} <= date_to_epoch(now()) then (daysBetween(toDate({{coalesce(cell(current_year_min_and_1.result,0,\"Min\"),0).asObject()}}), toDate('ActualEndDate_sec_epoch'))+1) * (DerivedActualAmount/(daysBetween(toDate('StartDate_sec_epoch'),case when toDate('ActualEndDate_sec_epoch') < now() then toDate('ActualEndDate_sec_epoch') else now() end)+1)) else 0 end as 'Actual Amount', case when ('StartDate_sec_epoch' >= {{coalesce(cell(current_year_min_and_1.result,0,\"Min\"),0).asObject()}}) && ('ActualEndDate_sec_epoch' >= date_to_epoch(month_last_day(toDate('StartDate_sec_epoch')))) && {{coalesce(cell(current_year_min_and_1.result,0,\"Max\"),0).asObject()}} >= date_to_epoch(month_last_day(toDate('StartDate_sec_epoch'))) then (daysBetween(toDate('StartDate_sec_epoch'),month_last_day(toDate('StartDate_sec_epoch')))+1) * 'PlannedDailyAmount' when ('StartDate_sec_epoch' >= {{coalesce(cell(current_year_min_and_1.result,0,\"Min\"),0).asObject()}}) && ('ActualEndDate_sec_epoch' >= {{coalesce(cell(current_year_min_and_1.result,0,\"Max\"),0).asObject()}}) && {{coalesce(cell(current_year_min_and_1.result,0,\"Max\"),0).asObject()}} <= date_to_epoch(month_last_day(toDate('StartDate_sec_epoch'))) then (daysBetween(toDate('StartDate_sec_epoch'),toDate({{coalesce(cell(current_year_min_and_1.result,0,\"Max\"),0).asObject()}}))+1) * 'PlannedDailyAmount' when ('StartDate_sec_epoch' < {{coalesce(cell(current_year_min_and_1.result,0,\"Min\"),0).asObject()}}) && ('ActualEndDate_sec_epoch' >= date_to_epoch(month_last_day(toDate({{coalesce(cell(current_year_min_and_1.result,0,\"Min\"),0).asObject()}})))) && {{coalesce(cell(current_year_min_and_1.result,0,\"Max\"),0).asObject()}} >= date_to_epoch(month_last_day(toDate({{coalesce(cell(current_year_min_and_1.result,0,\"Min\"),0).asObject()}}))) then (daysBetween(toDate({{coalesce(cell(current_year_min_and_1.result,0,\"Min\"),0).asObject()}}),month_last_day(toDate({{coalesce(cell(current_year_min_and_1.result,0,\"Min\"),0).asObject()}})))+1) * 'PlannedDailyAmount' when ('StartDate_sec_epoch' < {{coalesce(cell(current_year_min_and_1.result,0,\"Min\"),0).asObject()}}) && ('ActualEndDate_sec_epoch' <= date_to_epoch(month_last_day(toDate({{coalesce(cell(current_year_min_and_1.result,0,\"Min\"),0).asObject()}})))) && {{coalesce(cell(current_year_min_and_1.result,0,\"Max\"),0).asObject()}} >= 'ActualEndDate_sec_epoch' then (daysBetween(toDate({{coalesce(cell(current_year_min_and_1.result,0,\"Min\"),0).asObject()}}),toDate('ActualEndDate_sec_epoch'))+1) * 'PlannedDailyAmount' when ('StartDate_sec_epoch' < {{coalesce(cell(current_year_min_and_1.result,0,\"Min\"),0).asObject()}}) && ({{coalesce(cell(current_year_min_and_1.result,0,\"Max\"),0).asObject()}} <= date_to_epoch(month_last_day(toDate({{coalesce(cell(current_year_min_and_1.result,0,\"Min\"),0).asObject()}})))) && {{coalesce(cell(current_year_min_and_1.result,0,\"Max\"),0).asObject()}} <= 'ActualEndDate_sec_epoch' then (daysBetween(toDate({{coalesce(cell(current_year_min_and_1.result,0,\"Min\"),0).asObject()}}),toDate({{coalesce(cell(current_year_min_and_1.result,0,\"Max\"),0).asObject()}}))+1) * 'PlannedDailyAmount' else 'PlannedAmountFinal' end as 'Planned Amount', (DerivedActualAmount/(daysBetween(toDate('StartDate_sec_epoch'),case when toDate('ActualEndDate_sec_epoch') < now() then toDate('ActualEndDate_sec_epoch') else now() end)+1)) as 'ActualDailyAmount', 'PlannedDailyAmount' as 'PlannedDailyAmount'; End_Value_actual = foreach valid_slaps generate {{coalesce(cell(current_year_min_and_1.result,0,\"Min\"),0).asObject()}} as 'Start', {{coalesce(cell(current_year_min_and_1.result,0,\"Max\"),0).asObject()}} as 'End', 'Id' as 'Id', 'StartDate_sec_epoch' as 'Start Date', case when 'ActualEndDate_sec_epoch' < date_to_epoch(now()) then 'ActualEndDate_sec_epoch' else date_to_epoch(now()) end as 'End Date', case when ('ActualEndDate_sec_epoch' < {{coalesce(cell(current_year_min_and_1.result,0,\"Max\"),0).asObject()}}) && ('ActualEndDate_sec_epoch' < date_to_epoch(now())) then date_to_string(toDate('ActualEndDate_sec_epoch'),\"yyyy\") when (date_to_epoch(now()) < {{coalesce(cell(current_year_min_and_1.result,0,\"Max\"),0).asObject()}}) && ('ActualEndDate_sec_epoch' > date_to_epoch(now())) then date_to_string(now(),\"yyyy\") else  date_to_string(toDate({{coalesce(cell(current_year_min_and_1.result,0,\"Max\"),0).asObject()}}),\"yyyy\") end as 'Date_Year', case when ('ActualEndDate_sec_epoch' < {{coalesce(cell(current_year_min_and_1.result,0,\"Max\"),0).asObject()}}) && ('ActualEndDate_sec_epoch' < date_to_epoch(now())) then date_to_string(toDate('ActualEndDate_sec_epoch'),\"MM\") when (date_to_epoch(now()) < {{coalesce(cell(current_year_min_and_1.result,0,\"Max\"),0).asObject()}}) && ('ActualEndDate_sec_epoch' > date_to_epoch(now())) then date_to_string(now(),\"MM\") else  date_to_string(toDate({{coalesce(cell(current_year_min_and_1.result,0,\"Max\"),0).asObject()}}),\"MM\") end as 'Date_Month', 'SalesPrice' * ((100-coalesce('DiscountPercentage',0))/100) as 'SalesPrice', case when ('StartDate_sec_epoch' < (date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate('ActualEndDate_sec_epoch'))) - 2764800)))) + 86400)) && ({{coalesce(cell(current_year_min_and_1.result,0,\"Min\"),0).asObject()}} < (date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate('ActualEndDate_sec_epoch'))) - 2764800)))) + 86400)) && ('ActualEndDate_sec_epoch' <= {{coalesce(cell(current_year_min_and_1.result,0,\"Max\"),0).asObject()}}) && (date_to_epoch(now()) >= 'ActualEndDate_sec_epoch') then (daysBetween(toDate((date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate('ActualEndDate_sec_epoch'))) - 2764800)))))),toDate('ActualEndDate_sec_epoch'))) * (DerivedActualAmount/(daysBetween(toDate('StartDate_sec_epoch'),case when toDate('ActualEndDate_sec_epoch') < now() then toDate('ActualEndDate_sec_epoch') else now() end)+1)) when ('StartDate_sec_epoch' < (date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(now())) - 2764800)))) + 86400)) && ({{coalesce(cell(current_year_min_and_1.result,0,\"Min\"),0).asObject()}} < (date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(now())) - 2764800)))) + 86400)) && (date_to_epoch(now()) <= {{coalesce(cell(current_year_min_and_1.result,0,\"Max\"),0).asObject()}}) && (date_to_epoch(now()) <= 'ActualEndDate_sec_epoch') then (daysBetween(toDate((date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(now())) - 2764800)))))),now())) * (DerivedActualAmount/(daysBetween(toDate('StartDate_sec_epoch'),case when toDate('ActualEndDate_sec_epoch') < now() then toDate('ActualEndDate_sec_epoch') else now() end)+1)) when (('StartDate_sec_epoch' < (date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate({{coalesce(cell(current_year_min_and_1.result,0,\"Max\"),0).asObject()}}))) - 2764800)))) + 86400)))  && ({{coalesce(cell(current_year_min_and_1.result,0,\"Min\"),0).asObject()}} < (date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate({{coalesce(cell(current_year_min_and_1.result,0,\"Max\"),0).asObject()}}))) - 2764800)))) + 86400)) && ('ActualEndDate_sec_epoch' >= {{coalesce(cell(current_year_min_and_1.result,0,\"Max\"),0).asObject()}}) && (date_to_epoch(now()) >= {{coalesce(cell(current_year_min_and_1.result,0,\"Max\"),0).asObject()}} ) then (daysBetween(toDate((date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate({{coalesce(cell(current_year_min_and_1.result,0,\"Max\"),0).asObject()}}))) - 2764800)))))),toDate({{coalesce(cell(current_year_min_and_1.result,0,\"Max\"),0).asObject()}}))) * (DerivedActualAmount/(daysBetween(toDate('StartDate_sec_epoch'),case when toDate('ActualEndDate_sec_epoch') < now() then toDate('ActualEndDate_sec_epoch') else now() end)+1)) else 0 end as 'Actual Amount',  0 as 'Planned Amount', (DerivedActualAmount/(daysBetween(toDate('StartDate_sec_epoch'),case when toDate('ActualEndDate_sec_epoch') < now() then toDate('ActualEndDate_sec_epoch') else now() end)+1)) as 'ActualDailyAmount', 'PlannedDailyAmount' as 'PlannedDailyAmount'; End_Value_planned = foreach valid_slaps generate {{coalesce(cell(current_year_min_and_1.result,0,\"Min\"),0).asObject()}} as 'Start', {{coalesce(cell(current_year_min_and_1.result,0,\"Max\"),0).asObject()}} as 'End', 'Id' as 'Id', 'StartDate_sec_epoch' as 'Start Date', 'ActualEndDate_sec_epoch' as 'End Date', case when ('ActualEndDate_sec_epoch' < {{coalesce(cell(current_year_min_and_1.result,0,\"Max\"),0).asObject()}}) then date_to_string(toDate('ActualEndDate_sec_epoch'),\"yyyy\") else  date_to_string(toDate({{coalesce(cell(current_year_min_and_1.result,0,\"Max\"),0).asObject()}}),\"yyyy\") end as 'Date_Year', case when ('ActualEndDate_sec_epoch' < {{coalesce(cell(current_year_min_and_1.result,0,\"Max\"),0).asObject()}}) then date_to_string(toDate('ActualEndDate_sec_epoch'),\"MM\") else  date_to_string(toDate({{coalesce(cell(current_year_min_and_1.result,0,\"Max\"),0).asObject()}}),\"MM\") end as 'Date_Month', 'SalesPrice' * ((100-coalesce('DiscountPercentage',0))/100) as 'SalesPrice', 0 as 'Actual Amount', case when (('StartDate_sec_epoch' < (date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate('ActualEndDate_sec_epoch'))) - 2764800)))) + 86400)) && ({{coalesce(cell(current_year_min_and_1.result,0,\"Min\"),0).asObject()}} < (date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate('ActualEndDate_sec_epoch'))) - 2764800)))) + 86400)) && ('ActualEndDate_sec_epoch' <= {{coalesce(cell(current_year_min_and_1.result,0,\"Max\"),0).asObject()}}))  then (daysBetween(toDate((date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate('ActualEndDate_sec_epoch'))) - 2764800)))))),toDate('ActualEndDate_sec_epoch'))) * 'PlannedDailyAmount' when (('StartDate_sec_epoch' < (date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate({{coalesce(cell(current_year_min_and_1.result,0,\"Max\"),0).asObject()}}))) - 2764800)))) + 86400)) && ({{coalesce(cell(current_year_min_and_1.result,0,\"Min\"),0).asObject()}} < (date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate({{coalesce(cell(current_year_min_and_1.result,0,\"Max\"),0).asObject()}}))) - 2764800)))) + 86400)) && ('ActualEndDate_sec_epoch' >= {{coalesce(cell(current_year_min_and_1.result,0,\"Max\"),0).asObject()}})) then (daysBetween(toDate((date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate({{coalesce(cell(current_year_min_and_1.result,0,\"Max\"),0).asObject()}}))) - 2764800)))))),toDate({{coalesce(cell(current_year_min_and_1.result,0,\"Max\"),0).asObject()}}))) * 'PlannedDailyAmount' else 0 end as 'Planned Amount', (DerivedActualAmount/(daysBetween(toDate('StartDate_sec_epoch'),case when toDate('ActualEndDate_sec_epoch') < now() then toDate('ActualEndDate_sec_epoch') else now() end)+1)) as 'ActualDailyAmount', 'PlannedDailyAmount' as 'PlannedDailyAmount'; DataForFill_actual = union Start, End_Value_actual; DataForFill_actual = foreach DataForFill_actual generate 'Id' as 'Id', 'Date_Year' as 'Date_Year', 'Date_Month' as 'Date_Month','Start' as 'Start', 'End' as 'End', 'Start Date' as 'Start Date', 'End Date' as 'End Date', 'SalesPrice' as 'SalesPrice', 'Actual Amount' as 'Actual Amount', 'ActualDailyAmount' as 'ActualDailyAmount', 'Planned Amount' as 'Planned Amount', 'PlannedDailyAmount' as 'PlannedDailyAmount'; FilledData_actual = fill DataForFill_actual by (dateCols=('Date_Year', 'Date_Month', \"Y-M\"), partition='Id'); FilledData_actual = group FilledData_actual by ('Id', 'Date_Year', 'Date_Month'); FilledData_actual = foreach FilledData_actual generate 'Id', 'Date_Year', 'Date_Month', date_to_epoch(toDate('Date_Year'+\"-\"+'Date_Month'+\"-01\",\"yyyy-MM-dd\")) as 'Date', first('Start') as 'Start', min(first('Start')) over ([..0] partition by 'Id' order by ('Date_Year','Date_Month')) as 'StartFilter', first('End') as 'End', min(first('End')) over ([..0] partition by 'Id' order by ('Date_Year','Date_Month')) as 'EndFilter',  min(first('Start Date')) over ([..0] partition by 'Id' order by ('Date_Year','Date_Month')) as 'Start Date', min(first('End Date')) over ([..0] partition by 'Id' order by ('Date_Year','Date_Month')) as 'End Date', sum('Actual Amount') as 'Actual Amount', 0 as 'Planned Amount', min(first('ActualDailyAmount'))over ([..0] partition by 'Id' order by ('Date_Year','Date_Month')) as 'ActualDailyAmount', min(first('PlannedDailyAmount'))over ([..0] partition by 'Id' order by ('Date_Year','Date_Month')) as 'PlannedDailyAmount', min(first('SalesPrice'))over ([..0] partition by 'Id' order by ('Date_Year','Date_Month')) as 'SalesPrice'; FilledData_actual = filter FilledData_actual by coalesce('Start',0) != 0 || ('Date' > 'StartFilter' && 'Date' > 'Start Date' && 'Date' < 'End Date' && 'Date' < 'EndFilter'); FilledData_actual = foreach FilledData_actual generate 'Id', 'Date_Year', 'Date_Month', case when 'Actual Amount' is null then month_days(toDate('Date'))*'ActualDailyAmount' else 'Actual Amount' end as 'Actual Amount', 'SalesPrice' as 'SalesPrice', 0 as 'Planned Amount'; DataForFill_planned = union Start, End_Value_planned; DataForFill_planned = foreach DataForFill_planned generate 'Id' as 'Id', 'Date_Year' as 'Date_Year', 'Date_Month' as 'Date_Month','Start' as 'Start', 'End' as 'End', 'Start Date' as 'Start Date', 'End Date' as 'End Date', 'SalesPrice' as 'SalesPrice', 'Actual Amount' as 'Actual Amount', 'ActualDailyAmount' as 'ActualDailyAmount', 'Planned Amount' as 'Planned Amount', 'PlannedDailyAmount' as 'PlannedDailyAmount'; FilledData_planned = fill DataForFill_planned by (dateCols=('Date_Year', 'Date_Month', \"Y-M\"), partition='Id'); FilledData_planned = group FilledData_planned by ('Id', 'Date_Year', 'Date_Month'); FilledData_planned = foreach FilledData_planned generate 'Id', 'Date_Year', 'Date_Month', date_to_epoch(toDate('Date_Year'+\"-\"+'Date_Month'+\"-01\",\"yyyy-MM-dd\")) as 'Date', first('Start') as 'Start', min(first('Start')) over ([..0] partition by 'Id' order by ('Date_Year','Date_Month')) as 'StartFilter', first('End') as 'End', min(first('End')) over ([..0] partition by 'Id' order by ('Date_Year','Date_Month')) as 'EndFilter',  min(first('Start Date')) over ([..0] partition by 'Id' order by ('Date_Year','Date_Month')) as 'Start Date', max(first('End Date')) over ([..] partition by 'Id' ) as 'End Date', 0 as 'Actual Amount', sum('Planned Amount') as 'Planned Amount', min(first('ActualDailyAmount'))over ([..0] partition by 'Id' order by ('Date_Year','Date_Month')) as 'ActualDailyAmount', min(first('PlannedDailyAmount'))over ([..0] partition by 'Id' order by ('Date_Year','Date_Month')) as 'PlannedDailyAmount', min(first('SalesPrice'))over ([..0] partition by 'Id' order by ('Date_Year','Date_Month')) as 'SalesPrice'; FilledData_planned = filter FilledData_planned by coalesce('Start',0) != 0 || ('Date' > 'StartFilter' && 'Date' > 'Start Date' && 'Date' < 'End Date' && 'Date' < 'EndFilter'); FilledData_planned = foreach FilledData_planned generate 'Id', 'Date_Year', 'Date_Month', 0 as 'Actual Amount', 'SalesPrice' as 'SalesPrice', (case when 'Planned Amount' is null then month_days(toDate('Date'))*'PlannedDailyAmount' else 'Planned Amount' end) as 'Planned Amount'; FilledData = union FilledData_actual, FilledData_planned; result = group FilledData by ('Id','Date_Year', 'Date_Month'); result = foreach result generate 'Date_Year', 'Date_Month', sum('Actual Amount') as 'Actual', sum('Planned Amount') as 'Plan', (sum('Actual Amount') - sum('Planned Amount')) as 'Actual vs Planned Difference'; result = group result by ('Date_Year', 'Date_Month'); result = foreach result generate 'Date_Year'+\"~~~\"+'Date_Month' as 'StartDate_Year~~~StartDate_Month', sum('Plan') as 'Planned Demand', sum('Actual') as 'Actual Demand', sum('Actual vs Planned Difference') as 'Actual vs Planned Difference';",
        "receiveFacet" : true,
        "selectMode" : "none",
        "strings" : [
          "StartDate_Year~~~StartDate_Month"
        ],
        "type" : "saql",
        "useGlobal" : true,
        "visualizationParameters" : {
          "parameters" : {
            "autoFitMode" : "keepLabels",
            "showPoints" : false,
            "legend" : {
              "descOrder" : false,
              "showHeader" : true,
              "show" : true,
              "customSize" : "auto",
              "position" : "right-top",
              "inside" : false
            },
            "axisMode" : "multi",
            "tooltip" : {
              "showBinLabel" : true,
              "measures" : "",
              "showNullValues" : true,
              "showPercentage" : true,
              "showDimensions" : true,
              "showMeasures" : true,
              "customizeTooltip" : false,
              "dimensions" : ""
            },
            "visualizationType" : "line",
            "dashLine" : {
              "measures" : "",
              "showDashLine" : false
            },
            "title" : {
              "fontSize" : 14,
              "subtitleFontSize" : 11,
              "label" : "",
              "align" : "center",
              "subtitleLabel" : ""
            },
            "trellis" : {
              "flipLabels" : false,
              "showGridLines" : true,
              "size" : [
                100,
                100
              ],
              "enable" : false,
              "type" : "x",
              "chartsPerLine" : 4
            },
            "columnMap" : {
              "split" : [ ],
              "trellis" : [ ],
              "dimensionAxis" : [
                "StartDate_Year~~~StartDate_Month"
              ],
              "plots" : [
                "Planned Demand",
                "Actual Demand"
              ]
            },
            "fillArea" : true,
            "showActionMenu" : true,
            "showZero" : true,
            "measureAxis2" : {
              "sqrtScale" : false,
              "showTitle" : true,
              "showAxis" : true,
              "title" : "",
              "customDomain" : {
                "showDomain" : false
              }
            },
            "measureAxis1" : {
              "sqrtScale" : false,
              "showTitle" : true,
              "showAxis" : true,
              "title" : "",
              "customDomain" : {
                "showDomain" : false
              }
            },
            "valueType" : "none",
            "theme" : "wave",
            "dimensionAxis" : {
              "showTitle" : true,
              "customSize" : "auto",
              "showAxis" : true,
              "title" : "",
              "icons" : {
                "useIcons" : false,
                "iconProps" : {
                  "fit" : "cover",
                  "column" : "",
                  "type" : "round"
                }
              }
            },
            "applyConditionalFormatting" : true,
            "drawArea" : {
              "measure" : "",
              "showDrawArea" : false,
              "bounding1" : "",
              "bounding2" : ""
            }
          },
          "type" : "chart"
        }
      },
      "SalesAgreementProduc_4" : {
        "broadcastFacet" : true,
        "datasets" : [
          {
            "name" : "${App.Datasets.MFG_SalesAgreementProductSchedule_tp.Name}"
          }
        ],
        "isGlobal" : false,
        "query" : {
          "query" : {
            "measures" : [
              [
                "count",
                "*"
              ]
            ],
            "groups" : [
              "SalesAgreementProduct.SalesAgreement.Account.Name"
            ]
          },
          "version" : -1.0
        },
        "receiveFacet" : true,
        "selectMode" : "multi",
        "start" : [ ],
        "type" : "aggregateflex",
        "useGlobal" : true,
        "visualizationParameters" : { }
      },
      "Pipeline_KPI_1" : {
        "broadcastFacet" : true,
        "datasets" : [
          {
            "name" : "${App.Datasets.MFG_SalesAgreementProductSchedule_tp.Name}"
          }
        ],
        "isGlobal" : false,
        "label" : "Pipeline KPI",
        "query" : {
          "query" : {
            "measures" : [
              [
                "sum",
                "DerivedPlannedAmount",
                "A"
              ],
              [
                "sum",
                "DerivedPlannedAmount",
                "B"
              ],
              [
                "sum",
                "DerivedPlannedAmount",
                "C"
              ],
              [
                "sum",
                "DerivedPlannedAmount",
                "D"
              ]
            ],
            "columns" : [
              {
                "query" : {
                  "measures" : [
                    [
                      "sum",
                      "DerivedPlannedAmount"
                    ]
                  ],
                  "filters" : [
                    [
                      "SalesAgreementProduct.SalesAgreement.Derived_Status",
                      [
                        "UnderRevision"
                      ],
                      "in"
                    ]
                  ]
                },
                "header" : "Under Revision"
              },
              {
                "query" : {
                  "measures" : [
                    [
                      "sum",
                      "DerivedPlannedAmount"
                    ]
                  ],
                  "filters" : [
                    [
                      "SalesAgreementProduct.SalesAgreement.Derived_Status",
                      [
                        "Upcoming Renewal"
                      ],
                      "in"
                    ]
                  ]
                },
                "header" : "Upcoming Renewal"
              },
              {
                "query" : {
                  "measures" : [
                    [
                      "sum",
                      "DerivedPlannedAmount"
                    ]
                  ],
                  "filters" : [
                    [
                      "SalesAgreementProduct.SalesAgreement.Derived_Status",
                      [
                        "Pending Approval"
                      ],
                      "in"
                    ],
                    [
                      "SalesAgreementProduct.SalesAgreement.StartDate",
                      [
                        [
                          [
                            "{{cell(Time_Filter_1_1.selection,0,\"Text2\").asObject()}}",
                            0
                          ],
                          [
                            "{{cell(Time_Filter_1_1.selection,0,\"Text2\").asObject()}}",
                            0
                          ]
                        ]
                      ],
                      ">=<="
                    ]
                  ]
                },
                "header" : "Pending Approval"
              },
              {
                "query" : {
                  "measures" : [
                    [
                      "sum",
                      "DerivedPlannedAmount"
                    ]
                  ],
                  "filters" : [
                    [
                      "SalesAgreementProduct.SalesAgreement.StartDate",
                      [
                        [
                          [
                            "{{cell(Time_Filter_1_1.selection,0,\"Text2\").asObject()}}",
                            0
                          ],
                          [
                            "{{cell(Time_Filter_1_1.selection,0,\"Text2\").asObject()}}",
                            0
                          ]
                        ]
                      ],
                      ">=<="
                    ],
                    [
                      "SalesAgreementProduct.SalesAgreement.Derived_Status",
                      [
                        "Approved"
                      ],
                      "in"
                    ]
                  ]
                },
                "header" : "Approved"
              }
            ]
          },
          "version" : -1.0
        },
        "receiveFacet" : true,
        "selectMode" : "single",
        "type" : "aggregateflex",
        "useGlobal" : true,
        "visualizationParameters" : {
          "options" : { },
          "parameters" : {
            "borderColor" : "#e0e5ee",
            "borderWidth" : 1,
            "cell" : {
              "backgroundColor" : "#ffffff",
              "fontColor" : "#16325c",
              "fontSize" : 12
            },
            "columnProperties" : { },
            "columns" : [ ],
            "customBulkActions" : [ ],
            "header" : {
              "backgroundColor" : "#f4f6f9",
              "fontColor" : "#16325c",
              "fontSize" : 12
            },
            "innerMajorBorderColor" : "#a8b7c7",
            "innerMinorBorderColor" : "#e0e5ee",
            "maxColumnWidth" : 300,
            "minColumnWidth" : 40,
            "mode" : "variable",
            "numberOfLines" : 1,
            "showActionMenu" : true,
            "showRowIndexColumn" : false,
            "totals" : true,
            "verticalPadding" : 8
          },
          "type" : "table"
        }
      }
    },
    "widgetStyle" : {
      "backgroundColor" : "#FFFFFF",
      "borderColor" : "#E6ECF2",
      "borderEdges" : [ ],
      "borderRadius" : 0,
      "borderWidth" : 1
    },
    "widgets" : {
      "number_12" : {
        "parameters" : {
          "compact" : true,
          "exploreLink" : true,
          "measureField" : "A",
          "numberColor" : "#FFFFFF",
          "numberSize" : 24,
          "showActionMenu" : true,
          "step" : "Pipeline_KPI_1",
          "textAlignment" : "left",
          "title" : "",
          "titleColor" : "#091A3E",
          "titleSize" : 16
        },
        "type" : "number"
      },
      "number_11" : {
        "parameters" : {
          "compact" : false,
          "exploreLink" : true,
          "measureField" : "E",
          "numberColor" : "#FFFFFF",
          "numberSize" : 24,
          "showActionMenu" : true,
          "step" : "__ACTIVE_AGREEMENTS_1",
          "textAlignment" : "left",
          "title" : "",
          "titleColor" : "#091A3E",
          "titleSize" : 16
        },
        "type" : "number"
      },
      "container_18" : {
        "parameters" : {
          "alignmentX" : "left",
          "alignmentY" : "top",
          "fit" : "original"
        },
        "type" : "container"
      },
      "number_10" : {
        "parameters" : {
          "compact" : true,
          "exploreLink" : true,
          "measureField" : "D",
          "numberColor" : "#FFFFFF",
          "numberSize" : 24,
          "showActionMenu" : true,
          "step" : "Pipeline_KPI_1",
          "textAlignment" : "left",
          "title" : "",
          "titleColor" : "#091A3E",
          "titleSize" : 16
        },
        "type" : "number"
      },
      "container_17" : {
        "parameters" : {
          "alignmentX" : "left",
          "alignmentY" : "top",
          "fit" : "original"
        },
        "type" : "container"
      },
      "container_16" : {
        "parameters" : {
          "alignmentX" : "left",
          "alignmentY" : "top",
          "fit" : "original"
        },
        "type" : "container"
      },
      "text_18" : {
        "parameters" : {
          "fontSize" : 12,
          "showActionMenu" : true,
          "text" : "PLANNED DEMAND",
          "textAlignment" : "left",
          "textColor" : "rgb(51, 87, 121)"
        },
        "type" : "text"
      },
      "text_17" : {
        "parameters" : {
          "fontSize" : 16,
          "showActionMenu" : true,
          "text" : "Cancellations and expired agreements",
          "textAlignment" : "left",
          "textColor" : "#091A3E"
        },
        "type" : "text"
      },
      "container_15" : {
        "parameters" : {
          "alignmentX" : "left",
          "alignmentY" : "top",
          "fit" : "original"
        },
        "type" : "container"
      },
      "container_13" : {
        "parameters" : {
          "alignmentX" : "left",
          "alignmentY" : "top",
          "fit" : "original"
        },
        "type" : "container"
      },
      "text_19" : {
        "parameters" : {
          "fontSize" : 12,
          "showActionMenu" : true,
          "text" : "ACTUAL DEMAND",
          "textAlignment" : "left",
          "textColor" : "rgb(51, 87, 121)"
        },
        "type" : "text"
      },
      "text_14" : {
        "parameters" : {
          "fontSize" : 12,
          "showActionMenu" : true,
          "text" : "ACTUAL vs PLANNED DIFFERENCE",
          "textAlignment" : "left",
          "textColor" : "rgb(51, 87, 121)"
        },
        "type" : "text"
      },
      "text_13" : {
        "parameters" : {
          "fontSize" : 16,
          "showActionMenu" : true,
          "text" : "Which agreements need my attention?",
          "textAlignment" : "left",
          "textColor" : "#FFFFFF"
        },
        "type" : "text"
      },
      "text_16" : {
        "parameters" : {
          "fontSize" : 12,
          "showActionMenu" : true,
          "text" : "REALIZATION",
          "textAlignment" : "left",
          "textColor" : "#C6D3E1"
        },
        "type" : "text"
      },
      "text_15" : {
        "parameters" : {
          "fontSize" : 12,
          "showActionMenu" : true,
          "text" : "APPROVED",
          "textAlignment" : "left",
          "textColor" : "#C6D3E1"
        },
        "type" : "text"
      },
      "text_10" : {
        "parameters" : {
          "fontSize" : 12,
          "showActionMenu" : true,
          "text" : "PENDING APPROVALS",
          "textAlignment" : "left",
          "textColor" : "#C6D3E1"
        },
        "type" : "text"
      },
      "text_12" : {
        "parameters" : {
          "fontSize" : 16,
          "showActionMenu" : true,
          "text" : "Which periods experienced the highest Actual vs Planned Difference for current active agreements in the current year?",
          "textAlignment" : "left",
          "textColor" : "#091A3E"
        },
        "type" : "text"
      },
      "text_11" : {
        "parameters" : {
          "fontSize" : 16,
          "showActionMenu" : true,
          "text" : "Actual vs Planned Difference by products",
          "textAlignment" : "left",
          "textColor" : "#091A3E"
        },
        "type" : "text"
      },
      "container_1" : {
        "parameters" : {
          "alignmentX" : "left",
          "alignmentY" : "top",
          "fit" : "original"
        },
        "type" : "container"
      },
      "container_2" : {
        "parameters" : {
          "alignmentX" : "left",
          "alignmentY" : "top",
          "fit" : "original"
        },
        "type" : "container"
      },
      "chart_9" : {
        "parameters" : {
          "autoFitMode" : "keepLabels",
          "showValues" : true,
          "bins" : {
            "breakpoints" : {
              "high" : 100,
              "low" : 0
            },
            "bands" : {
              "high" : {
                "color" : "#008000",
                "label" : ""
              },
              "low" : {
                "color" : "#B22222",
                "label" : ""
              },
              "medium" : {
                "color" : "#ffa500",
                "label" : ""
              }
            }
          },
          "legend" : {
            "descOrder" : false,
            "showHeader" : true,
            "show" : false,
            "customSize" : "auto",
            "position" : "right-top",
            "inside" : false
          },
          "axisMode" : "multi",
          "tooltip" : {
            "showBinLabel" : true,
            "measures" : "",
            "showNullValues" : true,
            "showPercentage" : true,
            "showDimensions" : true,
            "showMeasures" : true,
            "customizeTooltip" : false,
            "dimensions" : ""
          },
          "visualizationType" : "hbar",
          "exploreLink" : true,
          "title" : {
            "fontSize" : 14,
            "subtitleFontSize" : 11,
            "label" : "",
            "align" : "center",
            "subtitleLabel" : ""
          },
          "binValues" : false,
          "trellis" : {
            "flipLabels" : false,
            "showGridLines" : true,
            "size" : [
              100,
              100
            ],
            "enable" : false,
            "type" : "x",
            "parameters" : { },
            "chartsPerLine" : 4
          },
          "columnMap" : {
            "trellis" : [ ],
            "dimensionAxis" : [
              "SalesAgreementProduct.Name"
            ],
            "plots" : [
              "sum_DerivedPlannedAmount"
            ]
          },
          "showActionMenu" : true,
          "measureAxis2" : {
            "sqrtScale" : false,
            "showTitle" : true,
            "showAxis" : true,
            "title" : "",
            "customDomain" : {
              "showDomain" : false
            }
          },
          "measureAxis1" : {
            "sqrtScale" : false,
            "showTitle" : true,
            "showAxis" : true,
            "title" : "Planned Revenue",
            "customDomain" : {
              "showDomain" : false
            }
          },
          "theme" : "dark",
          "step" : "Value_of_Products_1",
          "dimensionAxis" : {
            "showTitle" : true,
            "customSize" : "auto",
            "showAxis" : true,
            "title" : "",
            "icons" : {
              "useIcons" : false,
              "iconProps" : {
                "fit" : "cover",
                "column" : "",
                "type" : "round",
                "parameters" : { }
              }
            }
          },
          "applyConditionalFormatting" : true
        },
        "type" : "chart"
      },
      "container_4" : {
        "parameters" : {
          "alignmentX" : "left",
          "alignmentY" : "top",
          "fit" : "original"
        },
        "type" : "container"
      },
      "container_5" : {
        "parameters" : {
          "alignmentX" : "left",
          "alignmentY" : "top",
          "fit" : "original"
        },
        "type" : "container"
      },
      "text_3" : {
        "parameters" : {
          "fontSize" : 12,
          "showActionMenu" : true,
          "text" : "PLANNED REVENUE (TOTAL)",
          "textAlignment" : "left",
          "textColor" : "#C6D3E1"
        },
        "type" : "text"
      },
      "container_6" : {
        "parameters" : {
          "alignmentX" : "left",
          "alignmentY" : "top",
          "fit" : "original"
        },
        "type" : "container"
      },
      "chart_6" : {
        "parameters" : {
          "autoFitMode" : "keepLabels",
          "showValues" : true,
          "bins" : {
            "breakpoints" : {
              "high" : 100,
              "low" : 0
            },
            "bands" : {
              "high" : {
                "color" : "#008000",
                "label" : ""
              },
              "low" : {
                "color" : "#B22222",
                "label" : ""
              },
              "medium" : {
                "color" : "#ffa500",
                "label" : ""
              }
            }
          },
          "legend" : {
            "descOrder" : false,
            "showHeader" : true,
            "show" : false,
            "customSize" : "auto",
            "position" : "right-top",
            "inside" : false
          },
          "axisMode" : "multi",
          "tooltip" : {
            "showBinLabel" : true,
            "measures" : "",
            "showNullValues" : true,
            "showPercentage" : true,
            "showDimensions" : true,
            "showMeasures" : true,
            "customizeTooltip" : false,
            "dimensions" : ""
          },
          "visualizationType" : "hbar",
          "exploreLink" : true,
          "title" : {
            "fontSize" : 14,
            "subtitleFontSize" : 11,
            "label" : "",
            "align" : "center",
            "subtitleLabel" : ""
          },
          "binValues" : false,
          "trellis" : {
            "flipLabels" : false,
            "showGridLines" : true,
            "size" : [
              100,
              100
            ],
            "enable" : false,
            "type" : "x",
            "parameters" : { },
            "chartsPerLine" : 4
          },
          "columnMap" : {
            "trellis" : [ ],
            "dimensionAxis" : [
              "SalesAgreementProduct.SalesAgreement.Name"
            ],
            "plots" : [
              "sum_DerivedPlannedAmount"
            ]
          },
          "showActionMenu" : true,
          "measureAxis2" : {
            "sqrtScale" : false,
            "showTitle" : true,
            "showAxis" : true,
            "title" : "",
            "customDomain" : {
              "showDomain" : false
            }
          },
          "measureAxis1" : {
            "sqrtScale" : false,
            "showTitle" : true,
            "showAxis" : true,
            "title" : "Planned Revenue",
            "customDomain" : {
              "showDomain" : false
            }
          },
          "theme" : "dark",
          "step" : "Value_of_agreements_1",
          "dimensionAxis" : {
            "showTitle" : true,
            "customSize" : "auto",
            "showAxis" : true,
            "title" : "",
            "icons" : {
              "useIcons" : false,
              "iconProps" : {
                "fit" : "cover",
                "column" : "",
                "type" : "round",
                "parameters" : { }
              }
            }
          },
          "applyConditionalFormatting" : true
        },
        "type" : "chart"
      },
      "text_2" : {
        "parameters" : {
          "fontSize" : 12,
          "showActionMenu" : true,
          "text" : "ACTIVE AGREEMENTS (#)",
          "textAlignment" : "left",
          "textColor" : "#C6D3E1"
        },
        "type" : "text"
      },
      "chart_5" : {
        "parameters" : {
          "autoFitMode" : "keepLabels",
          "showPoints" : false,
          "legend" : {
            "descOrder" : false,
            "showHeader" : false,
            "show" : true,
            "customSize" : "auto",
            "position" : "bottom-center",
            "inside" : false
          },
          "axisMode" : "sync",
          "tooltip" : {
            "showBinLabel" : true,
            "measures" : [
              "Planned Demand",
              "Actual Demand",
              "Actual vs Planned Difference"
            ],
            "showNullValues" : true,
            "showPercentage" : true,
            "customText" : "Date:  [StartDate_Year~~~StartDate_Month]",
            "showDimensions" : false,
            "showMeasures" : true,
            "customizeTooltip" : true,
            "dimensions" : [
              "StartDate_Year~~~StartDate_Month"
            ]
          },
          "visualizationType" : "line",
          "dashLine" : {
            "measures" : "",
            "showDashLine" : false
          },
          "exploreLink" : true,
          "title" : {
            "fontSize" : 14,
            "subtitleFontSize" : 11,
            "label" : "",
            "align" : "center",
            "subtitleLabel" : ""
          },
          "trellis" : {
            "flipLabels" : false,
            "showGridLines" : true,
            "size" : [
              100,
              100
            ],
            "enable" : false,
            "type" : "x",
            "parameters" : { },
            "chartsPerLine" : 4
          },
          "columnMap" : {
            "split" : [ ],
            "trellis" : [ ],
            "dimensionAxis" : [
              "StartDate_Year~~~StartDate_Month"
            ],
            "plots" : [
              "Planned Demand",
              "Actual Demand"
            ]
          },
          "fillArea" : true,
          "showActionMenu" : true,
          "showZero" : true,
          "measureAxis2" : {
            "sqrtScale" : false,
            "showTitle" : true,
            "showAxis" : true,
            "title" : "",
            "customDomain" : {
              "showDomain" : false
            }
          },
          "measureAxis1" : {
            "sqrtScale" : false,
            "showTitle" : false,
            "showAxis" : true,
            "title" : "",
            "customDomain" : {
              "showDomain" : false
            }
          },
          "valueType" : "none",
          "theme" : "light",
          "step" : "Demand_Shortfall_Ove_1",
          "dimensionAxis" : {
            "showTitle" : true,
            "customSize" : "auto",
            "showAxis" : true,
            "title" : "Date (Year-Month)",
            "icons" : {
              "useIcons" : false,
              "iconProps" : {
                "fit" : "cover",
                "column" : "",
                "type" : "round",
                "parameters" : { }
              }
            }
          },
          "applyConditionalFormatting" : true,
          "drawArea" : {
            "measure" : "",
            "showDrawArea" : false,
            "bounding1" : "",
            "bounding2" : ""
          }
        },
        "type" : "chart"
      },
      "text_5" : {
        "parameters" : {
          "fontSize" : 16,
          "showActionMenu" : true,
          "text" : "Details Table",
          "textAlignment" : "left",
          "textColor" : "#091A3E"
        },
        "type" : "text"
      },
      "chart_8" : {
        "parameters" : {
          "autoFitMode" : "keepLabels",
          "showValues" : true,
          "bins" : {
            "breakpoints" : {
              "high" : 100,
              "low" : 0
            },
            "bands" : {
              "high" : {
                "color" : "#008000",
                "label" : ""
              },
              "low" : {
                "color" : "#B22222",
                "label" : ""
              },
              "medium" : {
                "color" : "#ffa500",
                "label" : ""
              }
            }
          },
          "legend" : {
            "descOrder" : false,
            "showHeader" : true,
            "show" : false,
            "customSize" : "auto",
            "position" : "right-top",
            "inside" : false
          },
          "axisMode" : "multi",
          "tooltip" : {
            "showBinLabel" : true,
            "measures" : "",
            "showNullValues" : true,
            "showPercentage" : true,
            "showDimensions" : true,
            "showMeasures" : true,
            "customizeTooltip" : false,
            "dimensions" : ""
          },
          "visualizationType" : "hbar",
          "exploreLink" : true,
          "title" : {
            "fontSize" : 14,
            "subtitleFontSize" : 11,
            "label" : "",
            "align" : "left",
            "subtitleLabel" : ""
          },
          "binValues" : false,
          "trellis" : {
            "flipLabels" : false,
            "showGridLines" : true,
            "size" : [
              100,
              100
            ],
            "enable" : false,
            "type" : "x",
            "parameters" : { },
            "chartsPerLine" : 4
          },
          "columnMap" : {
            "trellis" : [ ],
            "dimensionAxis" : [
              "SalesAgreementProduct.SalesAgreement.Name"
            ],
            "plots" : [
              "sum_DerivedActualAmount"
            ]
          },
          "showActionMenu" : true,
          "measureAxis2" : {
            "sqrtScale" : false,
            "showTitle" : true,
            "showAxis" : true,
            "title" : "",
            "customDomain" : {
              "showDomain" : false
            }
          },
          "measureAxis1" : {
            "sqrtScale" : false,
            "showTitle" : true,
            "showAxis" : true,
            "title" : "Actual Revenue from Expired Agreements",
            "customDomain" : {
              "showDomain" : false
            }
          },
          "theme" : "light",
          "step" : "Revenue_from_Expired_1",
          "dimensionAxis" : {
            "showTitle" : false,
            "customSize" : "auto",
            "showAxis" : true,
            "title" : "",
            "icons" : {
              "useIcons" : false,
              "iconProps" : {
                "fit" : "cover",
                "column" : "",
                "type" : "round",
                "parameters" : { }
              }
            }
          },
          "applyConditionalFormatting" : true
        },
        "type" : "chart"
      },
      "container_8" : {
        "parameters" : {
          "alignmentX" : "left",
          "alignmentY" : "top",
          "fit" : "original"
        },
        "type" : "container"
      },
      "text_4" : {
        "parameters" : {
          "fontSize" : 12,
          "showActionMenu" : true,
          "text" : "OUTSTANDING REVENUE (TOTAL)",
          "textAlignment" : "left",
          "textColor" : "#C6D3E1"
        },
        "type" : "text"
      },
      "chart_7" : {
        "parameters" : {
          "autoFitMode" : "keepLabels",
          "showValues" : true,
          "bins" : {
            "breakpoints" : {
              "high" : 100,
              "low" : 0
            },
            "bands" : {
              "high" : {
                "color" : "#008000",
                "label" : ""
              },
              "low" : {
                "color" : "#B22222",
                "label" : ""
              },
              "medium" : {
                "color" : "#ffa500",
                "label" : ""
              }
            }
          },
          "legend" : {
            "descOrder" : false,
            "showHeader" : true,
            "show" : false,
            "customSize" : "auto",
            "position" : "right-top",
            "inside" : false
          },
          "axisMode" : "multi",
          "tooltip" : {
            "showBinLabel" : true,
            "measures" : "",
            "showNullValues" : true,
            "showPercentage" : true,
            "showDimensions" : true,
            "showMeasures" : true,
            "customizeTooltip" : false,
            "dimensions" : ""
          },
          "visualizationType" : "hbar",
          "exploreLink" : true,
          "title" : {
            "fontSize" : 14,
            "subtitleFontSize" : 11,
            "label" : "",
            "align" : "left",
            "subtitleLabel" : ""
          },
          "binValues" : false,
          "trellis" : {
            "flipLabels" : false,
            "showGridLines" : true,
            "size" : [
              100,
              100
            ],
            "enable" : false,
            "type" : "x",
            "parameters" : { },
            "chartsPerLine" : 4
          },
          "columnMap" : {
            "trellis" : [ ],
            "dimensionAxis" : [
              "SalesAgreementProduct.SalesAgreement.Name"
            ],
            "plots" : [
              "C"
            ]
          },
          "showActionMenu" : true,
          "measureAxis2" : {
            "sqrtScale" : false,
            "showTitle" : true,
            "showAxis" : true,
            "title" : "",
            "customDomain" : {
              "showDomain" : false
            }
          },
          "measureAxis1" : {
            "sqrtScale" : false,
            "showTitle" : true,
            "showAxis" : true,
            "title" : "Planned Revenue vs Actual Revenue Difference for Cancelled Agreements",
            "customDomain" : {
              "showDomain" : false
            }
          },
          "theme" : "light",
          "step" : "Cancelled_Revenue_1",
          "dimensionAxis" : {
            "showTitle" : false,
            "customSize" : "auto",
            "showAxis" : true,
            "title" : "",
            "icons" : {
              "useIcons" : false,
              "iconProps" : {
                "fit" : "cover",
                "column" : "",
                "type" : "round",
                "parameters" : { }
              }
            }
          },
          "applyConditionalFormatting" : true
        },
        "type" : "chart"
      },
      "text_7" : {
        "parameters" : {
          "fontSize" : 12,
          "showActionMenu" : true,
          "text" : "COMPLIANCE",
          "textAlignment" : "left",
          "textColor" : "#C6D3E1"
        },
        "type" : "text"
      },
      "chart_2" : {
        "parameters" : {
          "autoFitMode" : "keepLabels",
          "showValues" : true,
          "bins" : {
            "breakpoints" : {
              "high" : 100,
              "low" : 0
            },
            "bands" : {
              "high" : {
                "color" : "#008000",
                "label" : ""
              },
              "low" : {
                "color" : "#B22222",
                "label" : ""
              },
              "medium" : {
                "color" : "#ffa500",
                "label" : ""
              }
            }
          },
          "legend" : {
            "descOrder" : false,
            "showHeader" : true,
            "show" : false,
            "customSize" : "auto",
            "position" : "right-top",
            "inside" : false
          },
          "axisMode" : "multi",
          "tooltip" : {
            "showBinLabel" : true,
            "measures" : [
              "{{coalesce(cell(Revenue_Count_Toggle_1.selection,0,\"value_demand_Shortfall_String_No_Quotes\"),0).asObject()}}"
            ],
            "showNullValues" : true,
            "showPercentage" : false,
            "showDimensions" : true,
            "showMeasures" : true,
            "customizeTooltip" : true,
            "dimensions" : [
              "SalesAgreementProduct.Name"
            ]
          },
          "visualizationType" : "hbar",
          "exploreLink" : true,
          "title" : {
            "fontSize" : 14,
            "subtitleFontSize" : 11,
            "label" : "",
            "align" : "center",
            "subtitleLabel" : ""
          },
          "binValues" : false,
          "trellis" : {
            "flipLabels" : false,
            "showGridLines" : true,
            "size" : [
              100,
              100
            ],
            "enable" : false,
            "type" : "x",
            "parameters" : { },
            "chartsPerLine" : 4
          },
          "showActionMenu" : true,
          "measureAxis2" : {
            "sqrtScale" : false,
            "showTitle" : true,
            "showAxis" : true,
            "title" : "",
            "customDomain" : {
              "showDomain" : false
            }
          },
          "measureAxis1" : {
            "sqrtScale" : false,
            "showTitle" : false,
            "showAxis" : true,
            "title" : "",
            "customDomain" : {
              "showDomain" : false
            }
          },
          "theme" : "wave",
          "step" : "Demand_Shortfall_1",
          "dimensionAxis" : {
            "showTitle" : true,
            "customSize" : "auto",
            "showAxis" : true,
            "title" : "",
            "icons" : {
              "useIcons" : false,
              "iconProps" : {
                "fit" : "cover",
                "column" : "",
                "type" : "round",
                "parameters" : { }
              }
            }
          },
          "applyConditionalFormatting" : true
        },
        "type" : "chart"
      },
      "text_6" : {
        "parameters" : {
          "fontSize" : 16,
          "showActionMenu" : true,
          "text" : "What is the current state of my active agreements?",
          "textAlignment" : "left",
          "textColor" : "#FFFFFF"
        },
        "type" : "text"
      },
      "chart_1" : {
        "parameters" : {
          "autoFitMode" : "keepLabels",
          "legend" : {
            "descOrder" : false,
            "showHeader" : true,
            "show" : true,
            "customSize" : "auto",
            "position" : "right-top",
            "inside" : false
          },
          "tooltip" : {
            "showBinLabel" : true,
            "measures" : "",
            "showNullValues" : true,
            "showPercentage" : true,
            "showDimensions" : true,
            "showMeasures" : true,
            "customizeTooltip" : false,
            "dimensions" : ""
          },
          "visualizationType" : "scatter",
          "exploreLink" : true,
          "title" : {
            "fontSize" : 14,
            "subtitleFontSize" : 11,
            "label" : "",
            "align" : "center",
            "subtitleLabel" : ""
          },
          "trellis" : {
            "flipLabels" : false,
            "showGridLines" : true,
            "size" : [
              100,
              100
            ],
            "enable" : false,
            "type" : "x",
            "parameters" : { },
            "chartsPerLine" : 4
          },
          "radiusRatio" : 5,
          "showActionMenu" : true,
          "x" : {
            "sqrtScale" : false,
            "showZero" : true,
            "showTitle" : true,
            "showAxis" : true,
            "title" : "",
            "customDomain" : {
              "showDomain" : false
            }
          },
          "y" : {
            "sqrtScale" : false,
            "showZero" : true,
            "showTitle" : true,
            "showAxis" : true,
            "referenceLines" : [
              {
                "color" : "#CD96FF",
                "label" : "Avg Compliance",
                "value" : "{{coalesce(cell(Average_compliance_1.result,0,\"avg_Comp\"),0).asObject()}}"
              },
              {
                "color" : "rgb(0, 161, 224)",
                "label" : "100% Compliance",
                "value" : 100
              }
            ],
            "title" : "",
            "customDomain" : {
              "showDomain" : false
            }
          },
          "theme" : "wave",
          "step" : "SalesAgreementProduc_1",
          "applyConditionalFormatting" : true
        },
        "type" : "chart"
      },
      "text_9" : {
        "parameters" : {
          "fontSize" : 12,
          "showActionMenu" : true,
          "text" : "UPCOMING RENEWALS",
          "textAlignment" : "left",
          "textColor" : "#C6D3E1"
        },
        "type" : "text"
      },
      "chart_4" : {
        "parameters" : {
          "centerText" : "",
          "legend" : {
            "descOrder" : false,
            "showHeader" : false,
            "show" : true,
            "customSize" : "auto",
            "position" : "right-top",
            "inside" : false
          },
          "showMeasureTitle" : false,
          "tooltip" : {
            "showBinLabel" : true,
            "measures" : "",
            "showNullValues" : true,
            "showPercentage" : true,
            "showDimensions" : true,
            "showMeasures" : true,
            "customizeTooltip" : false,
            "dimensions" : ""
          },
          "visualizationType" : "pie",
          "exploreLink" : true,
          "title" : {
            "fontSize" : 14,
            "subtitleFontSize" : 11,
            "label" : "",
            "align" : "center",
            "subtitleLabel" : ""
          },
          "trellis" : {
            "flipLabels" : false,
            "showGridLines" : true,
            "size" : [
              100,
              100
            ],
            "enable" : false,
            "type" : "x",
            "parameters" : { },
            "chartsPerLine" : 4
          },
          "inner" : 60,
          "columnMap" : {
            "trellis" : [ ],
            "dimension" : [
              "SalesAgreementProduct.SalesAgreement.Derived_Status"
            ],
            "plots" : [
              "E"
            ]
          },
          "showActionMenu" : true,
          "centerValueType" : "number",
          "valueType" : "compactNumber",
          "theme" : "dark",
          "step" : "Agreements_that_need_2",
          "applyConditionalFormatting" : true
        },
        "type" : "chart"
      },
      "text_8" : {
        "parameters" : {
          "fontSize" : 16,
          "showActionMenu" : true,
          "text" : "Which are my best and worst performing active agreements?",
          "textAlignment" : "left",
          "textColor" : "#091A3E"
        },
        "type" : "text"
      },
      "chart_3" : {
        "parameters" : {
          "autoFitMode" : "keepLabels",
          "showValues" : true,
          "bins" : {
            "breakpoints" : {
              "high" : 100,
              "low" : 0
            },
            "bands" : {
              "high" : {
                "color" : "#008000",
                "label" : ""
              },
              "low" : {
                "color" : "#B22222",
                "label" : ""
              },
              "medium" : {
                "color" : "#ffa500",
                "label" : ""
              }
            }
          },
          "legend" : {
            "descOrder" : false,
            "showHeader" : true,
            "show" : true,
            "customSize" : "auto",
            "position" : "bottom-center",
            "inside" : false
          },
          "axisMode" : "multi",
          "tooltip" : {
            "showBinLabel" : true,
            "measures" : [
              "Planned Demand",
              "Actual Demand"
            ],
            "showNullValues" : true,
            "showPercentage" : true,
            "customText" : "Date:  [StartDate_Year~~~StartDate_Month]",
            "showDimensions" : false,
            "showMeasures" : true,
            "customizeTooltip" : true,
            "dimensions" : [
              "StartDate_Year~~~StartDate_Month"
            ]
          },
          "visualizationType" : "vbar",
          "exploreLink" : true,
          "title" : {
            "fontSize" : 14,
            "subtitleFontSize" : 11,
            "label" : "",
            "align" : "center",
            "subtitleLabel" : ""
          },
          "binValues" : false,
          "trellis" : {
            "flipLabels" : false,
            "showGridLines" : true,
            "size" : [
              100,
              100
            ],
            "enable" : false,
            "type" : "x",
            "parameters" : { },
            "chartsPerLine" : 4
          },
          "columnMap" : {
            "trellis" : [ ],
            "dimensionAxis" : [
              "StartDate_Year~~~StartDate_Month"
            ],
            "plots" : [
              "Actual vs Planned Difference"
            ]
          },
          "showActionMenu" : true,
          "measureAxis2" : {
            "sqrtScale" : false,
            "showTitle" : true,
            "showAxis" : true,
            "title" : "",
            "customDomain" : {
              "showDomain" : false
            }
          },
          "measureAxis1" : {
            "sqrtScale" : false,
            "showTitle" : false,
            "showAxis" : true,
            "title" : "",
            "customDomain" : {
              "showDomain" : false
            }
          },
          "theme" : "wave",
          "step" : "Demand_Shortfall_Ove_1",
          "dimensionAxis" : {
            "showTitle" : false,
            "customSize" : "auto",
            "showAxis" : false,
            "title" : "",
            "icons" : {
              "useIcons" : false,
              "iconProps" : {
                "fit" : "cover",
                "column" : "",
                "type" : "round",
                "parameters" : { }
              }
            }
          },
          "applyConditionalFormatting" : true
        },
        "type" : "chart"
      },
      "text_1" : {
        "parameters" : {
          "fontSize" : 16,
          "showActionMenu" : true,
          "text" : "Sales Agreement Insights",
          "textAlignment" : "left",
          "textColor" : "#091A3E"
        },
        "type" : "text"
      },
      "number_5" : {
        "parameters" : {
          "compact" : true,
          "exploreLink" : true,
          "measureField" : "sum_Actual vs Planned Difference",
          "numberColor" : "#091A3E",
          "numberSize" : 24,
          "showActionMenu" : true,
          "step" : "Demand_ShortFall_Met_1",
          "textAlignment" : "left",
          "title" : "",
          "titleColor" : "#091A3E",
          "titleSize" : 12
        },
        "type" : "number"
      },
      "number_4" : {
        "parameters" : {
          "compact" : false,
          "exploreLink" : true,
          "measureField" : "avg_Compliance",
          "numberColor" : "#FFFFFF",
          "numberSize" : 24,
          "showActionMenu" : true,
          "step" : "Average_compliance_1",
          "textAlignment" : "left",
          "title" : "",
          "titleColor" : "#091A3E",
          "titleSize" : 16
        },
        "type" : "number"
      },
      "number_3" : {
        "parameters" : {
          "compact" : true,
          "exploreLink" : true,
          "measureField" : "D",
          "numberColor" : "#FFFFFF",
          "numberSize" : 24,
          "showActionMenu" : true,
          "step" : "__ACTIVE_AGREEMENTS_1",
          "textAlignment" : "left",
          "title" : "",
          "titleColor" : "#091A3E",
          "titleSize" : 16
        },
        "type" : "number"
      },
      "number_2" : {
        "parameters" : {
          "compact" : true,
          "exploreLink" : true,
          "measureField" : "B",
          "numberColor" : "#FFFFFF",
          "numberSize" : 24,
          "showActionMenu" : true,
          "step" : "__ACTIVE_AGREEMENTS_1",
          "textAlignment" : "left",
          "title" : "",
          "titleColor" : "#091A3E",
          "titleSize" : 16
        },
        "type" : "number"
      },
      "number_1" : {
        "parameters" : {
          "compact" : false,
          "exploreLink" : true,
          "measureField" : "A",
          "numberColor" : "#FFFFFF",
          "numberSize" : 24,
          "showActionMenu" : true,
          "step" : "__ACTIVE_AGREEMENTS_1",
          "textAlignment" : "left",
          "title" : "",
          "titleColor" : "#091A3E",
          "titleSize" : 16
        },
        "type" : "number"
      },
      "image_1" : {
        "parameters" : {
          "alignmentX" : "center",
          "alignmentY" : "center",
          "fit" : "fitwidth",
          "image" : {
            "name" : "${App.Images['manufacturing_app_icon2xpng'].Name}",
            "namespace" : "${Org.Namespace}"
          }
        },
        "type" : "image"
      },
      "container_12" : {
        "parameters" : {
          "alignmentX" : "left",
          "alignmentY" : "top",
          "fit" : "original"
        },
        "type" : "container"
      },
      "container_11" : {
        "parameters" : {
          "alignmentX" : "left",
          "alignmentY" : "top",
          "fit" : "original"
        },
        "type" : "container"
      },
      "number_9" : {
        "parameters" : {
          "compact" : true,
          "exploreLink" : true,
          "measureField" : "B",
          "numberColor" : "#FFFFFF",
          "numberSize" : 24,
          "showActionMenu" : true,
          "step" : "Pipeline_KPI_1",
          "textAlignment" : "left",
          "title" : "",
          "titleColor" : "#091A3E",
          "titleSize" : 16
        },
        "type" : "number"
      },
      "number_8" : {
        "parameters" : {
          "compact" : true,
          "exploreLink" : true,
          "measureField" : "C",
          "numberColor" : "#FFFFFF",
          "numberSize" : 24,
          "showActionMenu" : true,
          "step" : "Pipeline_KPI_1",
          "textAlignment" : "left",
          "title" : "",
          "titleColor" : "#091A3E",
          "titleSize" : 16
        },
        "type" : "number"
      },
      "number_7" : {
        "parameters" : {
          "compact" : true,
          "exploreLink" : true,
          "measureField" : "sum_Actual Demand",
          "numberColor" : "#091A3E",
          "numberSize" : 24,
          "showActionMenu" : true,
          "step" : "Demand_ShortFall_Met_1",
          "textAlignment" : "left",
          "title" : "",
          "titleColor" : "#091A3E",
          "titleSize" : 12
        },
        "type" : "number"
      },
      "number_6" : {
        "parameters" : {
          "compact" : true,
          "exploreLink" : true,
          "measureField" : "sum_Planned Demand",
          "numberColor" : "#091A3E",
          "numberSize" : 24,
          "showActionMenu" : true,
          "step" : "Demand_ShortFall_Met_1",
          "textAlignment" : "left",
          "title" : "",
          "titleColor" : "#091A3E",
          "titleSize" : 12
        },
        "type" : "number"
      },
      "filterpanel_8" : {
        "parameters" : {
          "filterItemOptions" : {
            "propertyColor" : "#54698D",
            "valueColor" : "#16325C"
          },
          "filters" : [
            {
              "dataset" : {
                "name" : "${App.Datasets.MFG_SalesAgreementProductSchedule_tp.Name}"
              },
              "field" : "SalesAgreementProduct.SalesAgreement.ScheduleFrequency"
            }
          ],
          "showAllFilters" : false
        },
        "type" : "filterpanel"
      },
      "filterpanel_7" : {
        "parameters" : {
          "filterItemOptions" : {
            "propertyColor" : "#54698D",
            "valueColor" : "#16325C"
          },
          "filters" : [
            {
              "dataset" : {
                "name" : "${App.Datasets.MFG_SalesAgreementProductSchedule_tp.Name}"
              },
              "field" : "SalesAgreementProduct.SalesAgreement.Account.Parent.Name"
            }
          ],
          "showAllFilters" : false
        },
        "type" : "filterpanel"
      },
      "filterpanel_6" : {
        "parameters" : {
          "filterItemOptions" : {
            "propertyColor" : "#54698D",
            "valueColor" : "#16325C"
          },
          "filters" : [
            {
              "dataset" : {
                "name" : "${App.Datasets.MFG_SalesAgreementProductSchedule_tp.Name}"
              },
              "field" : "SalesAgreementProduct.SalesAgreement.ActualsCalculationMode"
            }
          ],
          "showAllFilters" : false
        },
        "type" : "filterpanel"
      },
      "filterpanel_5" : {
        "parameters" : {
          "filterItemOptions" : {
            "propertyColor" : "#54698D",
            "valueColor" : "#16325C"
          },
          "filters" : [
            {
              "dataset" : {
                "name" : "${App.Datasets.MFG_SalesAgreementProductSchedule_tp.Name}"
              },
              "field" : "SalesAgreementProduct.PricebookEntry.Pricebook.Name"
            }
          ],
          "showAllFilters" : false
        },
        "type" : "filterpanel"
      },
      "filterpanel_4" : {
        "parameters" : {
          "filterItemOptions" : {
            "propertyColor" : "#54698D",
            "valueColor" : "#16325C"
          },
          "filters" : [
            {
              "dataset" : {
                "name" : "${App.Datasets.MFG_SalesAgreementProductSchedule_tp.Name}"
              },
              "field" : "SalesAgreementProduct.SalesAgreement.Account.Type"
            }
          ],
          "showAllFilters" : false
        },
        "type" : "filterpanel"
      },
      "filterpanel_3" : {
        "parameters" : {
          "filterItemOptions" : {
            "backgroundColor" : "#FFFFFF",
            "borderColor" : "#E6ECF2",
            "borderRadius" : 0,
            "borderWidth" : 1,
            "propertyColor" : "#54698D",
            "valueColor" : "#16325C"
          },
          "filters" : [
            {
              "dataset" : {
                "name" : "${App.Datasets.MFG_SalesAgreementProductSchedule_tp.Name}"
              },
              "field" : "SalesAgreementProduct.SalesAgreement.Account.Owner.Name"
            }
          ],
          "showAllFilters" : false
        },
        "type" : "filterpanel"
      },
      "text_24" : {
        "parameters" : {
          "fontSize" : 12,
          "showActionMenu" : true,
          "text" : "UNDER REVISION",
          "textAlignment" : "left",
          "textColor" : "#C6D3E1"
        },
        "type" : "text"
      },
      "text_21" : {
        "parameters" : {
          "fontSize" : 16,
          "showActionMenu" : true,
          "text" : "Sales agreements by planned revenue",
          "textAlignment" : "left",
          "textColor" : "#FFFFFF"
        },
        "type" : "text"
      },
      "navigation_1" : {
        "parameters" : {
          "fontSize" : 12,
          "selectedTab" : {
            "backgroundColor" : "#FFFFFF",
            "borderColor" : "rgb(0, 112, 210)",
            "borderEdges" : [
              "bottom"
            ],
            "borderWidth" : 2,
            "textColor" : "#0070D2"
          },
          "tabCount" : 2,
          "textColor" : "#54698D"
        },
        "type" : "navigation"
      },
      "text_20" : {
        "parameters" : {
          "fontSize" : 16,
          "showActionMenu" : true,
          "text" : "Sales agreement products by planned revenue",
          "textAlignment" : "left",
          "textColor" : "#FFFFFF"
        },
        "type" : "text"
      },
      "text_23" : {
        "parameters" : {
          "fontSize" : 14,
          "showActionMenu" : true,
          "text" : "Which agreements expired in the selected time period?",
          "textAlignment" : "left",
          "textColor" : "#335779"
        },
        "type" : "text"
      },
      "text_22" : {
        "parameters" : {
          "fontSize" : 14,
          "showActionMenu" : true,
          "text" : "What was the revenue loss due to cancellation in the selected time period?",
          "textAlignment" : "left",
          "textColor" : "#335779"
        },
        "type" : "text"
      },
      "table_1" : {
        "parameters" : {
          "borderColor" : "#54698d",
          "borderWidth" : 1,
          "cell" : {
            "backgroundColor" : "#16325c",
            "fontColor" : "#ffffff",
            "fontSize" : 12
          },
          "columnProperties" : { },
          "columns" : [ ],
          "customBulkActions" : [ ],
          "exploreLink" : true,
          "header" : {
            "backgroundColor" : "#000000",
            "fontColor" : "#ffffff",
            "fontSize" : 12
          },
          "innerMajorBorderColor" : "#54698d",
          "innerMinorBorderColor" : "#54698d",
          "mode" : "fittocontainer",
          "numberOfLines" : 1,
          "pivoted" : false,
          "showActionMenu" : true,
          "showRowIndexColumn" : false,
          "step" : "State_of_active_agre_1",
          "totals" : true,
          "verticalPadding" : 8
        },
        "type" : "table"
      },
      "table_2" : {
        "parameters" : {
          "borderColor" : "#e0e5ee",
          "borderWidth" : 1,
          "cell" : {
            "backgroundColor" : "#ffffff",
            "fontColor" : "#16325c",
            "fontSize" : 12
          },
          "columnProperties" : { },
          "columns" : [
            "A",
            "B",
            "F",
            "E",
            "G",
            "SalesAgreementProduct.SalesAgreement.Account.Name",
            "SalesAgreementProduct.SalesAgreement.Name",
            "SalesAgreementProduct.SalesAgreement.ScheduleFrequency",
            "SalesAgreementProduct.SalesAgreement.StartDate_Year~~~SalesAgreementProduct.SalesAgreement.StartDate_Month~~~SalesAgreementProduct.SalesAgreement.StartDate_Day",
            "SalesAgreementProduct.SalesAgreement.EndDate_Year~~~SalesAgreementProduct.SalesAgreement.EndDate_Month~~~SalesAgreementProduct.SalesAgreement.EndDate_Day",
            "SalesAgreementProduct.Name"
          ],
          "customBulkActions" : [ ],
          "exploreLink" : true,
          "header" : {
            "backgroundColor" : "#f4f6f9",
            "fontColor" : "#16325c",
            "fontSize" : 12
          },
          "innerMajorBorderColor" : "#a8b7c7",
          "innerMinorBorderColor" : "#e0e5ee",
          "mode" : "fittocontainer",
          "numberOfLines" : 1,
          "pivoted" : false,
          "showActionMenu" : true,
          "showRowIndexColumn" : false,
          "step" : "Sales_Agreement_Perf_1",
          "totals" : true,
          "verticalPadding" : 8
        },
        "type" : "table"
      },
      "table_3" : {
        "parameters" : {
          "borderColor" : "#e0e5ee",
          "borderWidth" : 1,
          "cell" : {
            "backgroundColor" : "#ffffff",
            "fontColor" : "#16325c",
            "fontSize" : 12
          },
          "columnProperties" : {
            "A" : {
              "parameters" : {
                "alignment" : "right"
              },
              "type" : "text"
            },
            "B" : {
              "parameters" : {
                "alignment" : "right"
              },
              "type" : "text"
            }
          },
          "columns" : [ ],
          "customBulkActions" : [ ],
          "exploreLink" : true,
          "header" : {
            "backgroundColor" : "#f4f6f9",
            "fontColor" : "#16325c",
            "fontSize" : 12
          },
          "innerMajorBorderColor" : "#a8b7c7",
          "innerMinorBorderColor" : "#e0e5ee",
          "mode" : "fittocontainer",
          "numberOfLines" : 1,
          "pivoted" : false,
          "showActionMenu" : true,
          "showRowIndexColumn" : false,
          "step" : "Sales_agreements_pip_1",
          "totals" : true,
          "verticalPadding" : 8
        },
        "type" : "table"
      },
      "pillbox_2" : {
        "parameters" : {
          "compact" : false,
          "exploreLink" : false,
          "fontSize" : 14,
          "selectedTab" : {
            "backgroundColor" : "rgb(51, 87, 121)",
            "borderColor" : "rgba(255, 255, 255, 0)",
            "borderEdges" : [
              "all"
            ],
            "borderWidth" : 0,
            "textColor" : "#FFFFFF"
          },
          "showActionMenu" : false,
          "step" : "Time_Filter_1_1",
          "textColor" : "rgb(125, 152, 179)"
        },
        "type" : "pillbox"
      },
      "pillbox_1" : {
        "parameters" : {
          "compact" : false,
          "displayTemplate" : "[]",
          "exploreLink" : false,
          "fontSize" : 12,
          "selectedTab" : {
            "backgroundColor" : "rgb(51, 87, 121)",
            "borderColor" : "rgba(198, 211, 225, 0)",
            "borderEdges" : [ ],
            "borderWidth" : 0,
            "textColor" : "#FFFFFF"
          },
          "showActionMenu" : false,
          "step" : "Revenue_Count_Toggle_1",
          "textColor" : "rgb(51, 87, 121)"
        },
        "type" : "pillbox"
      },
      "pillbox_3" : {
        "parameters" : {
          "compact" : false,
          "exploreLink" : false,
          "fontSize" : 14,
          "selectedTab" : {
            "backgroundColor" : "rgb(51, 87, 121)",
            "borderColor" : "#FFFFFF",
            "borderEdges" : [ ],
            "borderWidth" : 0,
            "textColor" : "#FFFFFF"
          },
          "showActionMenu" : false,
          "step" : "Time_Filter_2_1",
          "textColor" : "rgb(51, 87, 121)"
        },
        "type" : "pillbox"
      },
      "listselector_1" : {
        "parameters" : {
          "compact" : false,
          "displayMode" : "filter",
          "exploreLink" : false,
          "filterStyle" : {
            "titleColor" : "#54698D",
            "valueColor" : "#16325C"
          },
          "instant" : false,
          "measureField" : "none",
          "showActionMenu" : true,
          "step" : "SalesAgreementProduc_4",
          "title" : "Account Name"
        },
        "type" : "listselector"
      }
    }
  }
}