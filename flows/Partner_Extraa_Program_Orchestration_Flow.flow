<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <actionCalls>
        <name>Assign_Member_Benefit</name>
        <label>Assign Member Benefit</label>
        <locationX>1027</locationX>
        <locationY>1616</locationY>
        <actionName>Assign_Member_Benefits</actionName>
        <actionType>batchJobAction</actionType>
        <connector>
            <targetReference>Pause_For_Assign_Member_Benefit</targetReference>
        </connector>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <nameSegment>Assign_Member_Benefits</nameSegment>
        <storeOutputAutomatically>true</storeOutputAutomatically>
        <versionSegment>1</versionSegment>
    </actionCalls>
    <actionCalls>
        <name>Batch_Accrual</name>
        <label>Batch Accrual</label>
        <locationX>1039</locationX>
        <locationY>238</locationY>
        <actionName>Process_Pending_Transactions_Based_on_Loyalty_Program</actionName>
        <actionType>batchJobAction</actionType>
        <connector>
            <targetReference>Pause_For_Batch_Accrual</targetReference>
        </connector>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>criteria_LoyaltyProgram</name>
            <value>
                <elementReference>Get_Partner_Extra_Program.Id</elementReference>
            </value>
        </inputParameters>
        <nameSegment>Process_Pending_Transactions_Based_on_Loyalty_Program</nameSegment>
        <storeOutputAutomatically>true</storeOutputAutomatically>
        <versionSegment>1</versionSegment>
    </actionCalls>
    <actionCalls>
        <name>Create_Transaction_Journal_From_Order</name>
        <label>Create Transaction Journal From Order</label>
        <locationX>1044</locationX>
        <locationY>52</locationY>
        <actionName>Create_Transaction_Journals_Based_on_Orders</actionName>
        <actionType>dataProcessingEngineAction</actionType>
        <connector>
            <targetReference>Pause_for_Order_Copy</targetReference>
        </connector>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>endDate</name>
            <value>
                <elementReference>TomorrowDate</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>journalSubTypeId</name>
            <value>
                <elementReference>Order_Journal_Sub_type.Id</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>journalTypeId</name>
            <value>
                <elementReference>Order_Journal_Sub_type.JournalTypeId</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>programId</name>
            <value>
                <elementReference>Get_Partner_Extra_Program.Id</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>startDate</name>
            <value>
                <dateValue>2020-01-01</dateValue>
            </value>
        </inputParameters>
        <nameSegment>Create_Transaction_Journals_Based_on_Orders</nameSegment>
        <storeOutputAutomatically>true</storeOutputAutomatically>
        <versionSegment>1</versionSegment>
    </actionCalls>
    <actionCalls>
        <name>Error_Email</name>
        <label>Error Email</label>
        <locationX>3204</locationX>
        <locationY>515</locationY>
        <actionName>emailSimple</actionName>
        <actionType>emailSimple</actionType>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>emailBody</name>
            <value>
                <elementReference>FailedEmailBody</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>emailAddresses</name>
            <value>
                <elementReference>NotifyUserEmail</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>emailSubject</name>
            <value>
                <elementReference>FailedEmailSubject</elementReference>
            </value>
        </inputParameters>
        <nameSegment>emailSimple</nameSegment>
        <versionSegment>1</versionSegment>
    </actionCalls>
    <actionCalls>
        <name>NQP_Expiration</name>
        <label>NQP Expiration</label>
        <locationX>1037</locationX>
        <locationY>646</locationY>
        <actionName>Calculate_Non_Qualifying_Points_For_Expiration_Based_On_Fixed_Model</actionName>
        <actionType>dataProcessingEngineAction</actionType>
        <connector>
            <targetReference>Pause_For_NQP_Point_Expiration</targetReference>
        </connector>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>LoyaltyProgramName</name>
            <value>
                <elementReference>Get_Partner_Extra_Program.Name</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>ProcessRunDate</name>
            <value>
                <elementReference>YesterdayDate</elementReference>
            </value>
        </inputParameters>
        <nameSegment>Calculate_Non_Qualifying_Points_For_Expiration_Based_On_Fixed_Model</nameSegment>
        <storeOutputAutomatically>true</storeOutputAutomatically>
        <versionSegment>1</versionSegment>
    </actionCalls>
    <actionCalls>
        <name>Process_Expired_Benefits</name>
        <label>Process Expired Benefits</label>
        <locationX>1021</locationX>
        <locationY>1798</locationY>
        <actionName>Process_Expired_Benefits</actionName>
        <actionType>batchJobAction</actionType>
        <connector>
            <targetReference>Pause_For_Process_Expired_Benefits</targetReference>
        </connector>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <nameSegment>Process_Expired_Benefits</nameSegment>
        <storeOutputAutomatically>true</storeOutputAutomatically>
        <versionSegment>1</versionSegment>
    </actionCalls>
    <actionCalls>
        <name>Process_New_And_Updated_Member_Benefits</name>
        <label>Process New And Updated Member Benefits</label>
        <locationX>1020</locationX>
        <locationY>1981</locationY>
        <actionName>Process_New_And_Updated_Member_Benefits</actionName>
        <actionType>batchJobAction</actionType>
        <connector>
            <targetReference>Pause_For_Process_New_And_Updated_Member_Benefits</targetReference>
        </connector>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <nameSegment>Process_New_And_Updated_Member_Benefits</nameSegment>
        <storeOutputAutomatically>true</storeOutputAutomatically>
        <versionSegment>1</versionSegment>
    </actionCalls>
    <actionCalls>
        <name>Tier_Assessment</name>
        <label>Tier Assessment</label>
        <locationX>1040</locationX>
        <locationY>1242</locationY>
        <actionName>Process_Members_for_Tier_Assessment</actionName>
        <actionType>batchJobAction</actionType>
        <connector>
            <targetReference>Pause_For_Process_Members_for_Tier_Assessment</targetReference>
        </connector>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <nameSegment>Process_Members_for_Tier_Assessment</nameSegment>
        <storeOutputAutomatically>true</storeOutputAutomatically>
        <versionSegment>1</versionSegment>
    </actionCalls>
    <actionCalls>
        <name>Tier_Audience_Building</name>
        <label>Tier Audience Building</label>
        <locationX>1032</locationX>
        <locationY>926</locationY>
        <actionName>Select_Members_for_Tier_Assessment</actionName>
        <actionType>dataProcessingEngineAction</actionType>
        <connector>
            <targetReference>Pause_For_Tier_Audience_Building</targetReference>
        </connector>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>EndDate</name>
            <value>
                <elementReference>TomorrowDate</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>StartDate</name>
            <value>
                <dateValue>2020-01-01</dateValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>TierGroupName</name>
            <value>
                <stringValue>Status Tier Group</stringValue>
            </value>
        </inputParameters>
        <nameSegment>Select_Members_for_Tier_Assessment</nameSegment>
        <storeOutputAutomatically>true</storeOutputAutomatically>
        <versionSegment>1</versionSegment>
    </actionCalls>
    <actionCalls>
        <name>Update_NQP_Point_Balance</name>
        <label>Update NQP Point Balance</label>
        <locationX>1037</locationX>
        <locationY>434</locationY>
        <actionName>Calculate_Non_Qualifying_Points_To_Credit_Members</actionName>
        <actionType>dataProcessingEngineAction</actionType>
        <connector>
            <targetReference>Pause_For_NQP_Point_Balance_Update</targetReference>
        </connector>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>LoyaltyProgramName</name>
            <value>
                <elementReference>Get_Partner_Extra_Program.Name</elementReference>
            </value>
        </inputParameters>
        <nameSegment>Calculate_Non_Qualifying_Points_To_Credit_Members</nameSegment>
        <storeOutputAutomatically>true</storeOutputAutomatically>
        <versionSegment>1</versionSegment>
    </actionCalls>
    <apiVersion>49.0</apiVersion>
    <assignments>
        <name>Prepare_Email_Content</name>
        <label>Prepare Email Content</label>
        <locationX>3045</locationX>
        <locationY>517</locationY>
        <assignmentItems>
            <assignToReference>FailedStep</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Get_Batch_Job_Record.Name</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>FailureReason</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Get_Batch_Job_Record.ErrorDescription</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Error_Email</targetReference>
        </connector>
    </assignments>
    <decisions>
        <name>Check_Copy_Order_Job_Status</name>
        <label>Check Copy Order Job Status</label>
        <locationX>2723</locationX>
        <locationY>168</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Copy_Order_Successful</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>BatchJobCompletedEvent.Status</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Success</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Batch_Accrual</targetReference>
            </connector>
            <label>Copy Order Successful</label>
        </rules>
        <rules>
            <name>Copy_Order_Failed</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>BatchJobCompletedEvent.Status</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Failure</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_Batch_Job_Record</targetReference>
            </connector>
            <label>Copy Order Failed</label>
        </rules>
    </decisions>
    <decisions>
        <name>Validate_Accrual_Job_Status</name>
        <label>Validate Accrual Job Status</label>
        <locationX>2436</locationX>
        <locationY>311</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Accrual_Job_Success</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>BatchJobCompletedEvent.Status</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Success</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Update_NQP_Point_Balance</targetReference>
            </connector>
            <label>Accrual Job Success</label>
        </rules>
        <rules>
            <name>Accrual_Job_Failed</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>BatchJobCompletedEvent.Status</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Failure</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_Batch_Job_Record</targetReference>
            </connector>
            <label>Accrual Job Failed</label>
        </rules>
    </decisions>
    <decisions>
        <name>Validate_Assign_Member_Benefit_Job_Status</name>
        <label>Validate Assign Member Benefit Job Status</label>
        <locationX>2014</locationX>
        <locationY>1775</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Assign_Member_Benefit_Success</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>BatchJobCompletedEvent.Status</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Success</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Process_Expired_Benefits</targetReference>
            </connector>
            <label>Assign Member Benefit Success</label>
        </rules>
        <rules>
            <name>Assign_Member_Benefit_Failed</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>BatchJobCompletedEvent.Status</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Failure</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_Batch_Job_Record</targetReference>
            </connector>
            <label>Assign Member Benefit Failed</label>
        </rules>
    </decisions>
    <decisions>
        <name>Validate_NQP_Point_Expiration_Jobs_Status</name>
        <label>Validate NQP Point Expiration Jobs Status</label>
        <locationX>1748</locationX>
        <locationY>921</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>NQP_Point_Expiration_Success</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>BatchJobCompletedEvent.Status</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Success</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Tier_Audience_Building</targetReference>
            </connector>
            <label>NQP Point Expiration Success</label>
        </rules>
        <rules>
            <name>NQP_Point_Expiration_Failed</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>BatchJobCompletedEvent.Status</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Failure</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_Batch_Job_Record</targetReference>
            </connector>
            <label>NQP Point Expiration Failed</label>
        </rules>
    </decisions>
    <decisions>
        <name>Validate_NQP_Update_job_status</name>
        <label>Validate NQP Update job status</label>
        <locationX>1746</locationX>
        <locationY>664</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>NQP_Update_job_completed</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>BatchJobCompletedEvent.Status</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Success</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>NQP_Expiration</targetReference>
            </connector>
            <label>NQP Update job completed</label>
        </rules>
        <rules>
            <name>NQP_Update_Failed</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>BatchJobCompletedEvent.Status</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Failure</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_Batch_Job_Record</targetReference>
            </connector>
            <label>NQP Update Failed</label>
        </rules>
    </decisions>
    <decisions>
        <name>Validate_Process_Expired_Benefit_Job_Status</name>
        <label>Validate Process Expired Benefit Job Status</label>
        <locationX>1913</locationX>
        <locationY>1935</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Process_Expired_Benefit_Success</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>BatchJobCompletedEvent.Status</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Success</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Process_New_And_Updated_Member_Benefits</targetReference>
            </connector>
            <label>Process Expired Benefit Success</label>
        </rules>
        <rules>
            <name>Process_Expired_Benefit_Failed</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>BatchJobCompletedEvent.Status</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Failure</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_Batch_Job_Record</targetReference>
            </connector>
            <label>Process Expired Benefit Failed</label>
        </rules>
    </decisions>
    <decisions>
        <name>Validate_Process_New_And_Updated_Member_Benefits_Job_Status</name>
        <label>Validate Process New And Updated Member Benefits Job Status</label>
        <locationX>3123</locationX>
        <locationY>2045</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Process_New_And_Updated_Member_Benefits_Success</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>BatchJobCompletedEvent.Status</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Success</stringValue>
                </rightValue>
            </conditions>
            <label>Process New And Updated Member Benefits Success</label>
        </rules>
        <rules>
            <name>Process_New_And_Updated_Member_Benefits_Failed</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>BatchJobCompletedEvent.Status</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Failure</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_Batch_Job_Record</targetReference>
            </connector>
            <label>Process New And Updated Member Benefits Failed</label>
        </rules>
    </decisions>
    <decisions>
        <name>Validate_Tier_Assessment_Job_Status</name>
        <label>Validate Tier Assessment  Job Status</label>
        <locationX>2151</locationX>
        <locationY>1368</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Tier_Assessment_Success</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>BatchJobCompletedEvent.Status</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Success</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Assign_Member_Benefit</targetReference>
            </connector>
            <label>Tier Assessment Success</label>
        </rules>
        <rules>
            <name>Tier_Assessment_Failed</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>ProcessMembersforTierAssessmentEvent.Status</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Failure</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_Batch_Job_Record</targetReference>
            </connector>
            <label>Tier Assessment Failed</label>
        </rules>
    </decisions>
    <decisions>
        <name>Validate_Tier_Audience_Building_Job_Status</name>
        <label>Validate Tier Audience Building Job Status</label>
        <locationX>1781</locationX>
        <locationY>1228</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Tier_Audience_Building_Success</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>BatchJobCompletedEvent.Status</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Success</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Tier_Assessment</targetReference>
            </connector>
            <label>Tier Audience Building Success</label>
        </rules>
        <rules>
            <name>Tier_Audience_Building_Failed</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>BatchJobCompletedEvent.Status</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Failure</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_Batch_Job_Record</targetReference>
            </connector>
            <label>Tier Audience Building Failed</label>
        </rules>
    </decisions>
    <formulas>
        <name>TodayDate</name>
        <dataType>Date</dataType>
        <expression>{!$Flow.CurrentDate}</expression>
    </formulas>
    <formulas>
        <name>TomorrowDate</name>
        <dataType>Date</dataType>
        <expression>DATE(YEAR(TODAY()),MONTH(TODAY()) ,DAY(TODAY())+1)</expression>
    </formulas>
    <formulas>
        <name>YesterdayDate</name>
        <dataType>Date</dataType>
        <expression>TODAY()-1</expression>
    </formulas>
    <interviewLabel>Partner Extraa Program Orchestration Flow {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Partner Extraa Program Orchestration Flow</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>FREE_FORM_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordLookups>
        <name>Get_Batch_Job_Record</name>
        <label>Get Batch Job Record</label>
        <locationX>2898</locationX>
        <locationY>517</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Prepare_Email_Content</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>BatchJobCompletedEvent.BatchJob</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>BatchJob</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Partner_Extra_Program</name>
        <label>Get Partner Extra Program</label>
        <locationX>481</locationX>
        <locationY>53</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Order_Journal_Sub_type</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Name</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Partner Extraa Program</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>LoyaltyProgram</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Order_Journal_Sub_type</name>
        <label>Order Journal Sub type</label>
        <locationX>771</locationX>
        <locationY>53</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Create_Transaction_Journal_From_Order</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Name</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Order</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>JournalSubType</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <start>
        <locationX>49</locationX>
        <locationY>250</locationY>
        <connector>
            <targetReference>Get_Partner_Extra_Program</targetReference>
        </connector>
        <schedule>
            <frequency>Once</frequency>
            <startDate>2021-01-01</startDate>
            <startTime>00:00:00.000Z</startTime>
        </schedule>
        <triggerType>Scheduled</triggerType>
    </start>
    <status>Active</status>
    <textTemplates>
        <name>FailedEmailBody</name>
        <isViewedAsPlainText>false</isViewedAsPlainText>
        <text>Hi,

Partner Extraa Program - Orchestration failed.
Action Failed - {!FailedStep} with error {!FailureReason}

Thanks,
Salesforce</text>
    </textTemplates>
    <variables>
        <name>BatchJobCompletedEvent</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>BatchJobStatusChangedEvent</objectType>
    </variables>
    <variables>
        <name>BatchJobId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>FailedEmailSubject</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <value>
            <stringValue>[Failed] Partner Extraa Program Flow Processing Failure</stringValue>
        </value>
    </variables>
    <variables>
        <name>FailedStep</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>FailureReason</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>NotifyUserEmail</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>NQPPointExpiration</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>BatchJobStatusChangedEvent</objectType>
    </variables>
    <variables>
        <name>Output_Event</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>BatchJobStatusChangedEvent</objectType>
    </variables>
    <variables>
        <name>ProcessMembersforTierAssessmentEvent</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>BatchJobStatusChangedEvent</objectType>
    </variables>
    <variables>
        <name>TierAudienceBuildingEvent</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>BatchJobStatusChangedEvent</objectType>
    </variables>
    <waits>
        <name>Pause_For_Assign_Member_Benefit</name>
        <label>Pause For Assign Member Benefit</label>
        <locationX>1680</locationX>
        <locationY>1623</locationY>
        <defaultConnectorLabel>Default Path</defaultConnectorLabel>
        <waitEvents>
            <name>Assign_Member_Benefits_Job_Completed</name>
            <conditionLogic>and</conditionLogic>
            <connector>
                <targetReference>Validate_Assign_Member_Benefit_Job_Status</targetReference>
            </connector>
            <eventType>BatchJobStatusChangedEvent</eventType>
            <inputParameters>
                <name>BatchJob</name>
                <value>
                    <elementReference>Assign_Member_Benefit.batchJobId</elementReference>
                </value>
            </inputParameters>
            <label>Assign Member Benefits Job Completed</label>
            <outputParameters>
                <assignToReference>BatchJobCompletedEvent</assignToReference>
                <name>BatchJobStatusChangedEvent</name>
            </outputParameters>
        </waitEvents>
    </waits>
    <waits>
        <name>Pause_For_Batch_Accrual</name>
        <label>Pause For Batch Accrual</label>
        <locationX>1409</locationX>
        <locationY>270</locationY>
        <defaultConnectorLabel>Default Path</defaultConnectorLabel>
        <waitEvents>
            <name>Accruals_Job_Completed</name>
            <conditionLogic>and</conditionLogic>
            <connector>
                <targetReference>Validate_Accrual_Job_Status</targetReference>
            </connector>
            <eventType>BatchJobStatusChangedEvent</eventType>
            <inputParameters>
                <name>BatchJob</name>
                <value>
                    <elementReference>Batch_Accrual.batchJobId</elementReference>
                </value>
            </inputParameters>
            <label>Accruals Job Completed</label>
            <outputParameters>
                <assignToReference>BatchJobCompletedEvent</assignToReference>
                <name>BatchJobStatusChangedEvent</name>
            </outputParameters>
        </waitEvents>
    </waits>
    <waits>
        <name>Pause_For_NQP_Point_Balance_Update</name>
        <label>Pause  For NQP Point Balance Update</label>
        <locationX>1405</locationX>
        <locationY>514</locationY>
        <defaultConnectorLabel>Default Path</defaultConnectorLabel>
        <waitEvents>
            <name>NQP_Point_Balance_Update_Job_Completed</name>
            <conditionLogic>and</conditionLogic>
            <connector>
                <targetReference>Validate_NQP_Update_job_status</targetReference>
            </connector>
            <eventType>BatchJobStatusChangedEvent</eventType>
            <inputParameters>
                <name>BatchJob</name>
                <value>
                    <elementReference>Update_NQP_Point_Balance.batchJobId</elementReference>
                </value>
            </inputParameters>
            <label>NQP Point Balance Update Job Completed</label>
            <outputParameters>
                <assignToReference>BatchJobCompletedEvent</assignToReference>
                <name>BatchJobStatusChangedEvent</name>
            </outputParameters>
        </waitEvents>
    </waits>
    <waits>
        <name>Pause_For_NQP_Point_Expiration</name>
        <label>Pause  For NQP Point Expiration</label>
        <locationX>1427</locationX>
        <locationY>747</locationY>
        <defaultConnectorLabel>Default Path</defaultConnectorLabel>
        <waitEvents>
            <name>NQP_Point_Expiration_Job_Completed</name>
            <conditionLogic>and</conditionLogic>
            <connector>
                <targetReference>Validate_NQP_Point_Expiration_Jobs_Status</targetReference>
            </connector>
            <eventType>BatchJobStatusChangedEvent</eventType>
            <inputParameters>
                <name>BatchJob</name>
                <value>
                    <elementReference>NQP_Expiration.batchJobId</elementReference>
                </value>
            </inputParameters>
            <label>NQP Point Expiration Job Completed</label>
            <outputParameters>
                <assignToReference>BatchJobCompletedEvent</assignToReference>
                <name>BatchJobStatusChangedEvent</name>
            </outputParameters>
        </waitEvents>
    </waits>
    <waits>
        <name>Pause_for_Order_Copy</name>
        <label>Pause for Order Copy</label>
        <locationX>1356</locationX>
        <locationY>53</locationY>
        <defaultConnectorLabel>Default Path</defaultConnectorLabel>
        <waitEvents>
            <name>Order_Copy_Completed</name>
            <conditionLogic>and</conditionLogic>
            <connector>
                <targetReference>Check_Copy_Order_Job_Status</targetReference>
            </connector>
            <eventType>BatchJobStatusChangedEvent</eventType>
            <inputParameters>
                <name>BatchJob</name>
                <value>
                    <elementReference>Create_Transaction_Journal_From_Order.batchJobId</elementReference>
                </value>
            </inputParameters>
            <label>Order Copy Completed</label>
            <outputParameters>
                <assignToReference>BatchJobCompletedEvent</assignToReference>
                <name>BatchJobStatusChangedEvent</name>
            </outputParameters>
        </waitEvents>
    </waits>
    <waits>
        <name>Pause_For_Process_Expired_Benefits</name>
        <label>Pause For Process Expired Benefits</label>
        <locationX>1454</locationX>
        <locationY>1858</locationY>
        <defaultConnectorLabel>Default Path</defaultConnectorLabel>
        <waitEvents>
            <name>Process_Expired_Benefits_Job_Completed</name>
            <conditionLogic>and</conditionLogic>
            <connector>
                <targetReference>Validate_Process_Expired_Benefit_Job_Status</targetReference>
            </connector>
            <eventType>BatchJobStatusChangedEvent</eventType>
            <inputParameters>
                <name>BatchJob</name>
                <value>
                    <elementReference>Process_Expired_Benefits.batchJobId</elementReference>
                </value>
            </inputParameters>
            <label>Process Expired Benefits Job Completed</label>
            <outputParameters>
                <assignToReference>BatchJobCompletedEvent</assignToReference>
                <name>BatchJobStatusChangedEvent</name>
            </outputParameters>
        </waitEvents>
    </waits>
    <waits>
        <name>Pause_For_Process_Members_for_Tier_Assessment</name>
        <label>Pause For Process Members for Tier Assessment</label>
        <locationX>1445</locationX>
        <locationY>1368</locationY>
        <defaultConnectorLabel>Default Path</defaultConnectorLabel>
        <waitEvents>
            <name>Process_Members_for_Tier_Assessment_Job_Completed</name>
            <conditionLogic>and</conditionLogic>
            <connector>
                <targetReference>Validate_Tier_Assessment_Job_Status</targetReference>
            </connector>
            <eventType>BatchJobStatusChangedEvent</eventType>
            <inputParameters>
                <name>BatchJob</name>
                <value>
                    <elementReference>Tier_Assessment.batchJobId</elementReference>
                </value>
            </inputParameters>
            <label>Process Members for Tier Assessment Job Completed</label>
            <outputParameters>
                <assignToReference>BatchJobCompletedEvent</assignToReference>
                <name>BatchJobStatusChangedEvent</name>
            </outputParameters>
        </waitEvents>
    </waits>
    <waits>
        <name>Pause_For_Process_New_And_Updated_Member_Benefits</name>
        <label>Pause For Process New And Updated Member Benefits</label>
        <locationX>1485</locationX>
        <locationY>2058</locationY>
        <defaultConnectorLabel>Default Path</defaultConnectorLabel>
        <waitEvents>
            <name>Process_New_And_Updated_Member_Benefits_Job_Completed</name>
            <conditionLogic>and</conditionLogic>
            <connector>
                <targetReference>Validate_Process_New_And_Updated_Member_Benefits_Job_Status</targetReference>
            </connector>
            <eventType>BatchJobStatusChangedEvent</eventType>
            <inputParameters>
                <name>BatchJob</name>
                <value>
                    <elementReference>Process_New_And_Updated_Member_Benefits.batchJobId</elementReference>
                </value>
            </inputParameters>
            <label>Process New And Updated Member Benefits Job Completed</label>
            <outputParameters>
                <assignToReference>BatchJobCompletedEvent</assignToReference>
                <name>BatchJobStatusChangedEvent</name>
            </outputParameters>
        </waitEvents>
    </waits>
    <waits>
        <name>Pause_For_Tier_Audience_Building</name>
        <label>Pause For Tier Audience Building</label>
        <locationX>1430</locationX>
        <locationY>1018</locationY>
        <defaultConnectorLabel>Default Path</defaultConnectorLabel>
        <waitEvents>
            <name>Tier_Audience_Building_job_Completed</name>
            <conditionLogic>and</conditionLogic>
            <connector>
                <targetReference>Validate_Tier_Audience_Building_Job_Status</targetReference>
            </connector>
            <eventType>BatchJobStatusChangedEvent</eventType>
            <inputParameters>
                <name>BatchJob</name>
                <value>
                    <elementReference>Tier_Audience_Building.batchJobId</elementReference>
                </value>
            </inputParameters>
            <label>Tier Audience Building job Completed</label>
            <outputParameters>
                <assignToReference>BatchJobCompletedEvent</assignToReference>
                <name>BatchJobStatusChangedEvent</name>
            </outputParameters>
        </waitEvents>
    </waits>
</Flow>
