{"dataSourceLinksInfo":{"enableAutomaticLinking":false,"excludeRelationships":[],"links":[{"fields":[{"dataSourceName":"ProgramRebateTypeMaster","dataSourceNamespace":"","dataSourceType":"dataset","fieldName":"RebateProgram.Name"},{"dataSourceName":"ProgramRebateTypeBenefitMaster","dataSourceNamespace":"","dataSourceType":"dataset","fieldName":"RebateType.RebateProgram.Name"}],"label":"Benefit","name":"Link_159"},{"fields":[{"dataSourceName":"RebateProgramMemberMaster","dataSourceNamespace":"","dataSourceType":"dataset","fieldName":"RebateProgram.Name"},{"dataSourceName":"ProgramRebateTypePayoutSourceMaster","dataSourceNamespace":"","dataSourceType":"dataset","fieldName":"MemberPayout.PayoutPeriods.RebateProgram.Name"}],"label":"ProgramNameFaceting","name":"Link_820"}]},"filters":[],"gridLayouts":[{"maxWidth":1100,"name":"Default","numColumns":50,"pages":[{"label":"Main Page","name":"283bca5f-02b9-41c7-ac23-a58555662379","navigationHidden":false,"widgets":[{"colspan":48,"column":1,"name":"container_1","row":1,"rowspan":7,"widgetStyle":{"backgroundColor":"#E6ECF2","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":8,"borderWidth":8}},{"colspan":11,"column":2,"name":"Date_Selector_1","row":4,"rowspan":3,"widgetStyle":{"backgroundColor":"#FFFFFF","borderColor":"#E6ECF2","borderEdges":["all"],"borderRadius":4,"borderWidth":1}},{"colspan":11,"column":14,"name":"dateselector_1","row":4,"rowspan":3,"widgetStyle":{"backgroundColor":"#FFFFFF","borderColor":"#E6ECF2","borderEdges":["all"],"borderRadius":4,"borderWidth":1}},{"colspan":11,"column":37,"name":"pillbox_1","row":3,"rowspan":3,"widgetStyle":{"backgroundColor":"#FFFFFF","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":8,"borderWidth":8}},{"colspan":7,"column":1,"name":"chart_1","row":12,"rowspan":12,"widgetStyle":{"borderEdges":[]}},{"colspan":41,"column":8,"name":"chart_2","row":12,"rowspan":12,"widgetStyle":{"borderEdges":[]}},{"colspan":24,"column":1,"name":"container_2","row":25,"rowspan":10,"widgetStyle":{"backgroundColor":"rgb(240, 240, 240)","borderColor":"#C6D3E1","borderEdges":[],"borderRadius":8,"borderWidth":8}},{"colspan":3,"column":3,"name":"number_1","row":30,"rowspan":2,"widgetStyle":{"backgroundColor":"#335779","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":23,"column":26,"name":"container_3","row":25,"rowspan":10,"widgetStyle":{"backgroundColor":"rgb(240, 240, 240)","borderColor":"#C6D3E1","borderEdges":[],"borderRadius":8,"borderWidth":8}},{"colspan":4,"column":19,"name":"number_2","row":30,"rowspan":2,"widgetStyle":{"backgroundColor":"rgb(240, 240, 240)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":4,"column":13,"name":"number_3","row":30,"rowspan":2,"widgetStyle":{"backgroundColor":"rgb(240, 240, 240)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":4,"column":8,"name":"number_4","row":30,"rowspan":2,"widgetStyle":{"backgroundColor":"rgb(240, 240, 240)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":5,"column":19,"name":"text_1","row":32,"rowspan":2,"widgetStyle":{"backgroundColor":"rgb(240, 240, 240)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":5,"column":13,"name":"text_2","row":32,"rowspan":2,"widgetStyle":{"backgroundColor":"rgb(240, 240, 240)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":4,"column":8,"name":"text_3","row":32,"rowspan":2,"widgetStyle":{"backgroundColor":"rgb(240, 240, 240)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":4,"column":33,"name":"text_4","row":32,"rowspan":2,"widgetStyle":{"backgroundColor":"rgb(240, 240, 240)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":3,"column":28,"name":"number_5","row":30,"rowspan":2,"widgetStyle":{"backgroundColor":"#335779","borderColor":"#335779","borderEdges":["top","bottom"],"borderRadius":0,"borderWidth":2}},{"colspan":4,"column":33,"name":"number_6","row":30,"rowspan":2,"widgetStyle":{"backgroundColor":"rgb(240, 240, 240)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":4,"column":38,"name":"number_7","row":30,"rowspan":2,"widgetStyle":{"backgroundColor":"rgb(240, 240, 240)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":4,"column":42,"name":"number_8","row":30,"rowspan":2,"widgetStyle":{"backgroundColor":"rgb(240, 240, 240)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":3,"column":38,"name":"text_5","row":32,"rowspan":2,"widgetStyle":{"backgroundColor":"rgb(240, 240, 240)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":5,"column":42,"name":"text_6","row":32,"rowspan":2,"widgetStyle":{"backgroundColor":"rgb(240, 240, 240)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":5,"column":8,"name":"text_7","row":28,"rowspan":2,"widgetStyle":{"backgroundColor":"rgb(240, 240, 240)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":5,"column":13,"name":"text_8","row":28,"rowspan":2,"widgetStyle":{"backgroundColor":"rgb(240, 240, 240)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":5,"column":19,"name":"text_9","row":28,"rowspan":2,"widgetStyle":{"backgroundColor":"rgb(240, 240, 240)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":5,"column":33,"name":"text_10","row":28,"rowspan":2,"widgetStyle":{"backgroundColor":"rgb(240, 240, 240)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":3,"column":38,"name":"text_11","row":28,"rowspan":2,"widgetStyle":{"backgroundColor":"rgb(240, 240, 240)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":7,"column":42,"name":"text_12","row":28,"rowspan":2,"widgetStyle":{"backgroundColor":"rgb(240, 240, 240)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":1,"column":6,"name":"text_13","row":30,"rowspan":2,"widgetStyle":{"backgroundColor":"#335779","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":9,"column":3,"name":"text_15","row":26,"rowspan":2,"widgetStyle":{"backgroundColor":"rgb(240, 240, 240)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":9,"column":28,"name":"text_16","row":26,"rowspan":2,"widgetStyle":{"backgroundColor":"rgb(240, 240, 240)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":1,"column":31,"name":"text_17","row":30,"rowspan":2,"widgetStyle":{"backgroundColor":"#335779","borderColor":"#335779","borderEdges":["right"],"borderRadius":0,"borderWidth":2}},{"colspan":24,"column":1,"name":"chart_6","row":40,"rowspan":19,"widgetStyle":{"borderEdges":[]}},{"colspan":1,"column":27,"name":"image_2","row":29,"rowspan":4,"widgetStyle":{"backgroundColor":"#335779","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":1,"column":2,"name":"image_3","row":29,"rowspan":4,"widgetStyle":{"backgroundColor":"#335779","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":49,"column":1,"name":"container_4","row":9,"rowspan":3,"widgetStyle":{"backgroundColor":"#FFFFFF","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":8,"borderWidth":8}},{"colspan":2,"column":1,"name":"image_4","row":9,"rowspan":3,"widgetStyle":{"borderEdges":[]}},{"colspan":7,"column":3,"name":"text_21","row":9,"rowspan":3,"widgetStyle":{"borderEdges":[]}},{"colspan":2,"column":1,"name":"image_5","row":26,"rowspan":2,"widgetStyle":{"backgroundColor":"rgb(240, 240, 240)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":2,"column":26,"name":"image_6","row":26,"rowspan":2,"widgetStyle":{"backgroundColor":"rgb(240, 240, 240)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":48,"column":1,"name":"container_5","row":37,"rowspan":3,"widgetStyle":{"borderEdges":[]}},{"colspan":2,"column":1,"name":"image_7","row":37,"rowspan":2,"widgetStyle":{"backgroundColor":"#FFFFFF","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":9,"column":3,"name":"text_22","row":37,"rowspan":2,"widgetStyle":{"borderEdges":[]}},{"colspan":22,"column":25,"name":"chart_7","row":40,"rowspan":19,"widgetStyle":{"borderEdges":[]}},{"colspan":2,"column":47,"name":"link_4","row":40,"rowspan":19,"widgetStyle":{"backgroundColor":"#E6ECF2","borderColor":"#C6D3E1","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":4,"column":3,"name":"text_18","row":29,"rowspan":1,"widgetStyle":{"backgroundColor":"#335779","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":4,"column":3,"name":"text_19","row":32,"rowspan":1,"widgetStyle":{"backgroundColor":"#335779","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":9,"column":2,"name":"text_20","row":2,"rowspan":2,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":9,"column":14,"name":"text_23","row":2,"rowspan":2,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":4,"column":28,"name":"text_24","row":29,"rowspan":1,"widgetStyle":{"backgroundColor":"#335779","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":4,"column":28,"name":"text_25","row":32,"rowspan":1,"widgetStyle":{"backgroundColor":"#335779","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}}]},{"label":"Page 2","name":"b0b8dedf-caa5-462f-81f5-16040891ac71","navigationHidden":false,"widgets":[{"colspan":48,"column":1,"name":"container_1","row":1,"rowspan":7,"widgetStyle":{"backgroundColor":"#E6ECF2","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":8,"borderWidth":8}},{"colspan":11,"column":2,"name":"Date_Selector_1","row":4,"rowspan":3,"widgetStyle":{"backgroundColor":"#FFFFFF","borderColor":"#E6ECF2","borderEdges":["all"],"borderRadius":4,"borderWidth":1}},{"colspan":11,"column":14,"name":"dateselector_1","row":4,"rowspan":3,"widgetStyle":{"backgroundColor":"#FFFFFF","borderColor":"#E6ECF2","borderEdges":["all"],"borderRadius":4,"borderWidth":1}},{"colspan":11,"column":37,"name":"pillbox_1","row":3,"rowspan":3,"widgetStyle":{"backgroundColor":"#FFFFFF","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":8,"borderWidth":8}},{"colspan":7,"column":1,"name":"chart_1","row":12,"rowspan":12,"widgetStyle":{"borderEdges":[]}},{"colspan":41,"column":8,"name":"chart_2","row":12,"rowspan":12,"widgetStyle":{"borderEdges":[]}},{"colspan":24,"column":1,"name":"container_2","row":25,"rowspan":10,"widgetStyle":{"backgroundColor":"rgb(240, 240, 240)","borderColor":"#C6D3E1","borderEdges":[],"borderRadius":8,"borderWidth":8}},{"colspan":3,"column":3,"name":"number_1","row":30,"rowspan":2,"widgetStyle":{"backgroundColor":"#335779","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":23,"column":26,"name":"container_3","row":25,"rowspan":10,"widgetStyle":{"backgroundColor":"rgb(240, 240, 240)","borderColor":"#C6D3E1","borderEdges":[],"borderRadius":8,"borderWidth":8}},{"colspan":4,"column":19,"name":"number_2","row":30,"rowspan":2,"widgetStyle":{"backgroundColor":"rgb(240, 240, 240)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":4,"column":13,"name":"number_3","row":30,"rowspan":2,"widgetStyle":{"backgroundColor":"rgb(240, 240, 240)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":4,"column":8,"name":"number_4","row":30,"rowspan":2,"widgetStyle":{"backgroundColor":"rgb(240, 240, 240)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":5,"column":19,"name":"text_1","row":32,"rowspan":2,"widgetStyle":{"backgroundColor":"rgb(240, 240, 240)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":5,"column":13,"name":"text_2","row":32,"rowspan":2,"widgetStyle":{"backgroundColor":"rgb(240, 240, 240)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":4,"column":8,"name":"text_3","row":32,"rowspan":2,"widgetStyle":{"backgroundColor":"rgb(240, 240, 240)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":4,"column":33,"name":"text_4","row":32,"rowspan":2,"widgetStyle":{"backgroundColor":"rgb(240, 240, 240)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":3,"column":28,"name":"number_5","row":30,"rowspan":2,"widgetStyle":{"backgroundColor":"#335779","borderColor":"#335779","borderEdges":["top","bottom"],"borderRadius":0,"borderWidth":2}},{"colspan":4,"column":33,"name":"number_6","row":30,"rowspan":2,"widgetStyle":{"backgroundColor":"rgb(240, 240, 240)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":4,"column":38,"name":"number_7","row":30,"rowspan":2,"widgetStyle":{"backgroundColor":"rgb(240, 240, 240)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":4,"column":42,"name":"number_8","row":30,"rowspan":2,"widgetStyle":{"backgroundColor":"rgb(240, 240, 240)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":3,"column":38,"name":"text_5","row":32,"rowspan":2,"widgetStyle":{"backgroundColor":"rgb(240, 240, 240)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":5,"column":42,"name":"text_6","row":32,"rowspan":2,"widgetStyle":{"backgroundColor":"rgb(240, 240, 240)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":5,"column":8,"name":"text_7","row":28,"rowspan":2,"widgetStyle":{"backgroundColor":"rgb(240, 240, 240)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":5,"column":13,"name":"text_8","row":28,"rowspan":2,"widgetStyle":{"backgroundColor":"rgb(240, 240, 240)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":5,"column":19,"name":"text_9","row":28,"rowspan":2,"widgetStyle":{"backgroundColor":"rgb(240, 240, 240)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":5,"column":33,"name":"text_10","row":28,"rowspan":2,"widgetStyle":{"backgroundColor":"rgb(240, 240, 240)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":3,"column":38,"name":"text_11","row":28,"rowspan":2,"widgetStyle":{"backgroundColor":"rgb(240, 240, 240)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":7,"column":42,"name":"text_12","row":28,"rowspan":2,"widgetStyle":{"backgroundColor":"rgb(240, 240, 240)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":1,"column":6,"name":"text_13","row":30,"rowspan":2,"widgetStyle":{"backgroundColor":"#335779","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":9,"column":3,"name":"text_15","row":26,"rowspan":2,"widgetStyle":{"backgroundColor":"rgb(240, 240, 240)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":9,"column":28,"name":"text_16","row":26,"rowspan":2,"widgetStyle":{"backgroundColor":"rgb(240, 240, 240)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":1,"column":31,"name":"text_17","row":30,"rowspan":2,"widgetStyle":{"backgroundColor":"#335779","borderColor":"#335779","borderEdges":["right"],"borderRadius":0,"borderWidth":2}},{"colspan":14,"column":1,"name":"chart_6","row":40,"rowspan":19,"widgetStyle":{"borderEdges":[]}},{"colspan":1,"column":27,"name":"image_2","row":29,"rowspan":4,"widgetStyle":{"backgroundColor":"#335779","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":1,"column":2,"name":"image_3","row":29,"rowspan":4,"widgetStyle":{"backgroundColor":"#335779","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":49,"column":1,"name":"container_4","row":9,"rowspan":3,"widgetStyle":{"backgroundColor":"#FFFFFF","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":8,"borderWidth":8}},{"colspan":2,"column":1,"name":"image_4","row":9,"rowspan":3,"widgetStyle":{"borderEdges":[]}},{"colspan":7,"column":3,"name":"text_21","row":9,"rowspan":3,"widgetStyle":{"borderEdges":[]}},{"colspan":2,"column":1,"name":"image_5","row":26,"rowspan":2,"widgetStyle":{"backgroundColor":"rgb(240, 240, 240)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":2,"column":26,"name":"image_6","row":26,"rowspan":2,"widgetStyle":{"backgroundColor":"rgb(240, 240, 240)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":48,"column":1,"name":"container_5","row":37,"rowspan":3,"widgetStyle":{"borderEdges":[]}},{"colspan":2,"column":1,"name":"image_7","row":37,"rowspan":2,"widgetStyle":{"backgroundColor":"#FFFFFF","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":9,"column":3,"name":"text_22","row":37,"rowspan":2,"widgetStyle":{"borderEdges":[]}},{"colspan":15,"column":16,"name":"chart_7","row":40,"rowspan":19,"widgetStyle":{"borderEdges":[]}},{"colspan":4,"column":3,"name":"text_18","row":29,"rowspan":1,"widgetStyle":{"backgroundColor":"#335779","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":4,"column":3,"name":"text_19","row":32,"rowspan":1,"widgetStyle":{"backgroundColor":"#335779","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":9,"column":2,"name":"text_20","row":2,"rowspan":2,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":9,"column":14,"name":"text_23","row":2,"rowspan":2,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":4,"column":28,"name":"text_24","row":29,"rowspan":1,"widgetStyle":{"backgroundColor":"#335779","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":4,"column":28,"name":"text_25","row":32,"rowspan":1,"widgetStyle":{"backgroundColor":"#335779","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":2,"column":31,"name":"link_3","row":40,"rowspan":19,"widgetStyle":{"backgroundColor":"#E6ECF2","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":16,"column":33,"name":"chart_8","row":40,"rowspan":19,"widgetStyle":{"backgroundColor":"rgb(249, 249, 249)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}}]}],"rowHeight":"fine","selectors":[],"style":{"alignmentX":"left","alignmentY":"top","backgroundColor":"#FFFFFF","cellSpacingX":0,"cellSpacingY":0,"fit":"original","gutterColor":"#C5D3E0"},"version":1.0}],"layouts":[],"steps":{"Consider_To_Enroll_1":{"broadcastFacet":true,"groups":[],"label":"Consider_To_Enroll","numbers":[],"query":"ProgramRebateTypeMaster = load \"ProgramRebateTypeMaster\";\r\nProgramRebateTypeMaster = filter ProgramRebateTypeMaster by 'CalculationBasis' in [\"PayoutAndAccrual\", \"Payout\"];\nProgramRebateTypeMaster = group ProgramRebateTypeMaster by ('InclusionFilters.ValuesMultiValue','RebateProgram.Name');\r\nProductMaster = load \"ProductMaster\";all_payout_sources = load \"ProgramRebateTypePayoutSourceMaster\";\r\nall_payout_sources = filter all_payout_sources by 'RebateType.CalculationBasis' in [\"PayoutAndAccrual\", \"Payout\"];\ncurrent_valid_payout_sources = filter all_payout_sources by 'MemberPayout.PayoutPeriods.StartDate_sec_epoch' <= {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000;\r\ncurrent_valid_payout_sources = filter current_valid_payout_sources by 'MemberPayout.PayoutPeriods.EndDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000;\r\nStart_Current = foreach current_valid_payout_sources generate 'Product.Id' as 'Product.Id', {{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000 as 'Start', {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000 as 'End', 'Id' as 'Id', 'MemberPayout.PayoutPeriods.StartDate_sec_epoch' as 'Start Date', 'MemberPayout.PayoutPeriods.EndDate_sec_epoch' as 'End Date', case when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000) then date_to_string(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch'),\"yyyy\") else date_to_string(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000),\"yyyy\") end as 'Date_Year', case when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000) then date_to_string(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch'),\"MM\") else date_to_string(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000),\"MM\") end as 'Date_Month', case when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' >= date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch')))) && {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000 >= date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch'))) then (daysBetween(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch'),month_last_day(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch')))) * 'DailyTotalTransactionAmount' when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000) && {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000 <= date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch'))) then (daysBetween(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch'),toDate({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000))) * 'DailyTotalTransactionAmount' when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < {{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' >= date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000)))) && {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000 >= date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000))) then (daysBetween(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000),month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000)))) * 'DailyTotalTransactionAmount' when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < {{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' <= date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000)))) && {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000 >= 'MemberPayout.PayoutPeriods.EndDate_sec_epoch' then (daysBetween(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000),toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) * 'DailyTotalTransactionAmount' when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < {{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000) && ({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000 <= date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000)))) && {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000 <= 'MemberPayout.PayoutPeriods.EndDate_sec_epoch' then (daysBetween(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000),toDate({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000))) * 'DailyTotalTransactionAmount' else 'AggregateObject.TotalTransactionAmount' end as 'TotalTransactionAmount', case when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' >= date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch')))) && {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000 >= date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch'))) then (daysBetween(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch'),month_last_day(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch')))) * 'DailyFinalRebateAmount' when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000) && {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000 <= date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch'))) then (daysBetween(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch'),toDate({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000))) * 'DailyFinalRebateAmount' when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < {{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' >= date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000)))) && {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000 >= date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000))) then (daysBetween(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000),month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000)))) * 'DailyFinalRebateAmount' when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < {{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' <= date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000)))) && {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000 >= 'MemberPayout.PayoutPeriods.EndDate_sec_epoch' then (daysBetween(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000),toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) * 'DailyFinalRebateAmount' when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < {{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000) && ({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000 <= date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000)))) && {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000 <= 'MemberPayout.PayoutPeriods.EndDate_sec_epoch' then (daysBetween(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000),toDate({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000))) * 'DailyFinalRebateAmount' else 'FinalRebateAmount' end as 'RebateAmount', case when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' >= date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch')))) && {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000 >= date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch'))) then (daysBetween(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch'),month_last_day(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch')))) * 'DailyRebateAmount' when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000) && {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000 <= date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch'))) then (daysBetween(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch'),toDate({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000))) * 'DailyRebateAmount' when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < {{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' >= date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000)))) && {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000 >= date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000))) then (daysBetween(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000),month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000)))) * 'DailyRebateAmount' when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < {{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' <= date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000)))) && {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000 >= 'MemberPayout.PayoutPeriods.EndDate_sec_epoch' then (daysBetween(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000),toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) * 'DailyRebateAmount' when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < {{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000) && ({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000 <= date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000)))) && {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000 <= 'MemberPayout.PayoutPeriods.EndDate_sec_epoch' then (daysBetween(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000),toDate({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000))) * 'DailyRebateAmount' else 'RebateAmount' end as 'RebateBeforeAdjustment', case when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' >= date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch')))) && {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000 >= date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch'))) then (daysBetween(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch'),month_last_day(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch')))) * 'DailyQuantity' when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000) && {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000 <= date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch'))) then (daysBetween(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch'),toDate({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000))) * 'DailyQuantity' when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < {{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' >= date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000)))) && {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000 >= date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000))) then (daysBetween(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000),month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000)))) * 'DailyQuantity' when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < {{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' <= date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000)))) && {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000 >= 'MemberPayout.PayoutPeriods.EndDate_sec_epoch' then (daysBetween(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000),toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) * 'DailyQuantity' when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < {{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000) && ({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000 <= date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000)))) && {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000 <= 'MemberPayout.PayoutPeriods.EndDate_sec_epoch' then (daysBetween(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000),toDate({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000))) * 'DailyQuantity' else 'AggregateObject.TotalQuantity' end as 'TotalQuantity', 'DailyTotalTransactionAmount' as 'DailyTotalTransactionAmount', 'DailyFinalRebateAmount' as 'DailyFinalRebateAmount', 'DailyQuantity' as 'DailyQuantity', 'DailyRebateAmount' as 'DailyRebateAmount';\r\nEnd_Current = foreach current_valid_payout_sources generate  'Product.Id' as 'Product.Id',{{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000 as 'Start', {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000 as 'End', 'Id' as 'Id', 'MemberPayout.PayoutPeriods.StartDate_sec_epoch' as 'Start Date', 'MemberPayout.PayoutPeriods.EndDate_sec_epoch' as 'End Date', case when ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' < {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000) then date_to_string(toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'),\"yyyy\") else  date_to_string(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000),\"yyyy\") end as 'Date_Year', case when ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' < {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000) then date_to_string(toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'),\"MM\") else  date_to_string(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000),\"MM\") end as 'Date_Month', case when (('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < (date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) - 2764800)))) + 86400)) && ({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000 < (date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) - 2764800)))) + 86400)) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' <= {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000))  then (daysBetween(toDate((date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) - 2764800)))))),toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) * 'DailyTotalTransactionAmount' when (('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < (date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000))) - 2764800)))) + 86400)) && ({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000 < (date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000))) - 2764800)))) + 86400)) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000)) then (daysBetween(toDate((date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000))) - 2764800)))))),toDate({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000))) * 'DailyTotalTransactionAmount' else 0 end as 'TotalTransactionAmount', case when (('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < (date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) - 2764800)))) + 86400)) && ({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000 < (date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) - 2764800)))) + 86400)) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' <= {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000))  then (daysBetween(toDate((date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) - 2764800)))))),toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) * 'DailyFinalRebateAmount' when (('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < (date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000))) - 2764800)))) + 86400)) && ({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000 < (date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000))) - 2764800)))) + 86400)) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000)) then (daysBetween(toDate((date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000))) - 2764800)))))),toDate({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000))) * 'DailyFinalRebateAmount' else 0 end as 'RebateAmount', case when (('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < (date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) - 2764800)))) + 86400)) && ({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000 < (date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) - 2764800)))) + 86400)) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' <= {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000))  then (daysBetween(toDate((date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) - 2764800)))))),toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) * 'DailyRebateAmount' when (('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < (date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000))) - 2764800)))) + 86400)) && ({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000 < (date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000))) - 2764800)))) + 86400)) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000)) then (daysBetween(toDate((date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000))) - 2764800)))))),toDate({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000))) * 'DailyRebateAmount' else 0 end as 'RebateBeforeAdjustment', case when (('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < (date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) - 2764800)))) + 86400)) && ({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000 < (date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) - 2764800)))) + 86400)) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' <= {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000))  then (daysBetween(toDate((date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) - 2764800)))))),toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) * 'DailyQuantity' when (('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < (date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000))) - 2764800)))) + 86400)) && ({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000 < (date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000))) - 2764800)))) + 86400)) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000)) then (daysBetween(toDate((date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000))) - 2764800)))))),toDate({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000))) * 'DailyQuantity' else 0 end as 'TotalQuantity', 'DailyTotalTransactionAmount' as 'DailyTotalTransactionAmount', 'DailyFinalRebateAmount' as 'DailyFinalRebateAmount', 'DailyQuantity' as 'DailyQuantity', 'DailyRebateAmount' as 'DailyRebateAmount';\r\nDataForFill_Current = union Start_Current, End_Current;\r\nDataForFill_Current = foreach DataForFill_Current generate  'Product.Id' as 'Product.Id','Id' as 'Id', 'Date_Year' as 'Date_Year', 'Date_Month' as 'Date_Month','Start' as 'Start', 'End' as 'End', 'Start Date' as 'Start Date', 'End Date' as 'End Date', 'TotalTransactionAmount' as 'TotalTransactionAmount', 'RebateAmount' as 'RebateAmount', 'TotalQuantity' as 'TotalQuantity', 'DailyTotalTransactionAmount' as 'DailyTotalTransactionAmount', 'DailyFinalRebateAmount' as 'DailyFinalRebateAmount', 'DailyQuantity' as 'DailyQuantity', 'DailyRebateAmount' as 'DailyRebateAmount', 'RebateBeforeAdjustment' as 'RebateBeforeAdjustment';\r\nFilledData_Current = fill DataForFill_Current by (dateCols=('Date_Year', 'Date_Month', \"Y-M\"), partition='Id');\r\nFilledData_Current = group FilledData_Current by ('Id', 'Date_Year', 'Date_Month','Product.Id');\r\nFilledData_Current = foreach FilledData_Current generate 'Id', 'Date_Year', 'Date_Month','Product.Id', date_to_epoch(toDate('Date_Year'+\"-\"+'Date_Month'+\"-01\",\"yyyy-MM-dd\")) as 'Date', first('Start') as 'Start', min(first('Start')) over ([..0] partition by 'Id' order by ('Date_Year','Date_Month')) as 'StartFilter', first('End') as 'End', min(first('End')) over ([..0] partition by 'Id' order by ('Date_Year','Date_Month')) as 'EndFilter',  min(first('Start Date')) over ([..0] partition by 'Id' order by ('Date_Year','Date_Month')) as 'Start Date', max(first('End Date')) over ([..] partition by 'Id' ) as 'End Date',  sum('TotalTransactionAmount') as 'TotalTransactionAmount', min(first('DailyTotalTransactionAmount'))over ([..0] partition by 'Id' order by ('Date_Year','Date_Month')) as 'DailyTotalTransactionAmount', sum('RebateAmount') as 'RebateAmount', min(first('DailyFinalRebateAmount'))over ([..0] partition by 'Id' order by ('Date_Year','Date_Month')) as 'DailyFinalRebateAmount', sum('RebateBeforeAdjustment') as 'RebateBeforeAdjustment', min(first('DailyRebateAmount'))over ([..0] partition by 'Id' order by ('Date_Year','Date_Month')) as 'DailyRebateAmount', sum('TotalQuantity') as 'TotalQuantity', min(first('DailyQuantity'))over ([..0] partition by 'Id' order by ('Date_Year','Date_Month')) as 'DailyQuantity';\r\nFilledData_Current = filter FilledData_Current by coalesce('Start',0) != 0 || ('Date' > 'StartFilter' && 'Date' > 'Start Date' && 'Date' < 'End Date' && 'Date' < 'EndFilter');\r\nFilledData_Current = foreach FilledData_Current generate 'Product.Id' as 'Product.Id','Id', 'Date_Year', 'Date_Month', (case when 'TotalTransactionAmount' is null then month_days(toDate('Date'))*'DailyTotalTransactionAmount' else 'TotalTransactionAmount' end) as 'TotalTransactionAmount', (case when 'RebateAmount' is null then month_days(toDate('Date'))*'DailyFinalRebateAmount' else 'RebateAmount' end) as 'RebateAmount', (case when 'RebateBeforeAdjustment' is null then month_days(toDate('Date'))*'DailyRebateAmount' else 'RebateBeforeAdjustment' end) as 'RebateBeforeAdjustment', (case when 'TotalQuantity' is null then month_days(toDate('Date'))*'DailyQuantity' else 'TotalQuantity' end) as 'TotalQuantity';\r\nFilledData_Current = group FilledData_Current by 'Product.Id';\r\nFilledData_Current = foreach FilledData_Current generate 'Product.Id' as 'Product.Id',\r\nsum('RebateAmount')/ sum('TotalTransactionAmount') as 'Avg Effective Rebate';\r\nResult = cogroup ProgramRebateTypeMaster  by 'InclusionFilters.ValuesMultiValue' left,ProductMaster by 'Id' left,FilledData_Current by 'Product.Id';\r\nResult = foreach Result generate first(ProductMaster.'Name') as 'Name', ProgramRebateTypeMaster.'RebateProgram.Name' as 'RebateProgram.Name', sum(FilledData_Current.'Avg Effective Rebate') as 'Avg Effective Rebate';\r\nResult = filter Result by 'Name' is not null;\r\nResult = filter Result by 'Name' in [\"{{coalesce(cell(Top_Product_outside__1.selection, 0, \"Product.Name\"), cell(Top_Product_outside__1.result, 0, \"Product.Name\"), \"-\").asObject()}}\" ];\r\nResult = foreach Result generate  'RebateProgram.Name' as 'RebateProgram.Name','Avg Effective Rebate' as 'Avg Effective Rebate';\r\n Result = order Result  by 'Avg Effective Rebate' desc","receiveFacetSource":{"mode":"exclude","steps":["all_1"]},"selectMode":"single","start":"[\"Incentives on Jet Engine Sales\"]","strings":[],"type":"saql","useGlobal":true,"visualizationParameters":{"parameters":{"autoFitMode":"keepLabels","bins":{"breakpoints":{"high":100,"low":0},"bands":{"high":{"color":"#008000","label":""},"low":{"color":"#B22222","label":""},"medium":{"color":"#ffa500","label":""}}},"legend":{"descOrder":false,"showHeader":true,"show":true,"customSize":"auto","position":"right-top","inside":false},"axisMode":"multi","tooltip":{"content":{"legend":{"showBinLabel":true,"measures":[],"showNullValues":true,"customizeLegend":false,"showPercentage":true,"showDimensions":true,"showMeasures":true,"dimensions":[]}}},"visualizationType":"hbar","title":{"fontSize":14,"subtitleFontSize":11,"label":"","align":"center","subtitleLabel":""},"binValues":false,"trellis":{"flipLabels":false,"showGridLines":true,"size":[100,100],"enable":false,"type":"x","chartsPerLine":4},"showActionMenu":true,"measureAxis2":{"sqrtScale":false,"showTitle":true,"showAxis":true,"title":"","customDomain":{"showDomain":false}},"measureAxis1":{"sqrtScale":false,"showTitle":true,"showAxis":true,"title":"","customDomain":{"showDomain":false}},"valueType":"compactNumber","theme":"wave","compactDecimalDigits":-1,"dimensionAxis":{"showTitle":true,"customSize":"auto","showAxis":true,"title":"","icons":{"useIcons":false,"iconProps":{"fit":"cover","column":"","type":"round"}}},"applyConditionalFormatting":true},"type":"chart"}},"Date_Filter_1":{"broadcastFacet":true,"groups":[],"numbers":[],"query":"q = load \"RebatePayoutPeriodMaster\";\r\nq = foreach q generate \"1970\" as 'Date_Year', \"01\" as 'Date_Month', \"01\" as 'Date_Day';\r\nq = group q by ('Date_Year', 'Date_Month', 'Date_Day');\r\nq = foreach q generate 'Date_Year', 'Date_Month', 'Date_Day', count() as 'sum';\r\nq = fill q by (dateCols=('Date_Year','Date_Month','Date_Day', \"Y-M-D\"));\r\nq = timeseries q generate 'sum' as 'cnt' with (length=60000,  dateCols=('Date_Year','Date_Month','Date_Day', \"Y-M-D\"));\r\nq = foreach q generate 'Date_Year' + \"-\" + 'Date_Month' + \"-\" + 'Date_Day'+ \" 00:00:00\" as 'Date','Date_Year', 'Date_Month', 'Date_Day';\r\n\r\nqa = filter q by {{row(Date_Selector_1.selection, [0], [\"min\", \"max\"]).asDateRange(\"date('Date_Year', 'Date_Month', 'Date_Day')\")}};\r\nqa = foreach qa generate toDate('Date') as 'Date', date_to_epoch(toDate('Date')) as 'Date_sec_epoch';\r\n\r\n\r\nqb = filter q by {{row(Date_Selector_2.selection, [0], [\"min\", \"max\"]).asDateRange(\"date('Date_Year', 'Date_Month', 'Date_Day')\")}};\r\nqb = foreach qb generate toDate('Date') as 'Date1', date_to_epoch(toDate('Date')) as 'Date_sec_epoch1';\r\n\r\n\r\n\r\nqc = cogroup qa by all full, qb by all;\r\n\r\nqc = foreach qc generate min(qa.'Date') as 'Min Date', toDate(max(qa.'Date_sec_epoch')+86399) as 'Max Date', min(qa.'Date_sec_epoch')*1000 as 'Min',\r\n   (max(qa.'Date_sec_epoch')+86399)*1000 as 'Max',min(qb.'Date1') as 'Prev Min Date', toDate(max(qb.'Date_sec_epoch1')+86399) as 'Prev Max Date', min(qb.'Date_sec_epoch1')*1000 as 'Prev_Min',\r\n     (max(qb.'Date_sec_epoch1')+86399)*1000 as 'Prev_Max';\r\n","receiveFacetSource":{"mode":"all","steps":[]},"selectMode":"single","strings":[],"type":"saql","useGlobal":true,"visualizationParameters":{"parameters":{"autoFitMode":"keepLabels","bins":{"breakpoints":{"high":100,"low":0},"bands":{"high":{"color":"#008000","label":""},"low":{"color":"#B22222","label":""},"medium":{"color":"#ffa500","label":""}}},"legend":{"descOrder":false,"showHeader":true,"show":true,"customSize":"auto","position":"right-top","inside":false},"axisMode":"multi","tooltip":{"content":{"legend":{"showBinLabel":true,"measures":[],"showNullValues":true,"customizeLegend":false,"showPercentage":true,"showDimensions":true,"showMeasures":true,"dimensions":[]}}},"visualizationType":"hbar","title":{"fontSize":14,"subtitleFontSize":11,"label":"","align":"center","subtitleLabel":""},"binValues":false,"trellis":{"flipLabels":false,"showGridLines":true,"size":[100,100],"enable":false,"type":"x","chartsPerLine":4},"showActionMenu":true,"measureAxis2":{"sqrtScale":false,"showTitle":true,"showAxis":true,"title":"","customDomain":{"showDomain":false}},"measureAxis1":{"sqrtScale":false,"showTitle":true,"showAxis":true,"title":"","customDomain":{"showDomain":false}},"valueType":"compactNumber","theme":"wave","compactDecimalDigits":-1,"dimensionAxis":{"showTitle":true,"customSize":"auto","showAxis":true,"title":"","icons":{"useIcons":false,"iconProps":{"fit":"cover","column":"","type":"round"}}},"applyConditionalFormatting":true},"type":"chart"}},"Account_Name_1":{"broadcastFacet":true,"datasets":[{"name":"RebateProgramMemberMaster"}],"isGlobal":false,"query":{"query":"{\"measures\":[[\"count\",\"*\"]],\"groups\":[\"Account.Name\"]}","version":-1.0},"receiveFacetSource":{"mode":"all","steps":[]},"selectMode":"singlerequired","start":"[\"A A A Allstar Costume\"]","type":"aggregateflex","useGlobal":true,"visualizationParameters":{}},"static_1":{"broadcastFacet":true,"columns":{"Display":{"type":"string"}},"label":"","selectMode":"singlerequired","start":"{\"Display\":[\"Quantity\"]}","type":"staticflex","values":["{\"Display\":\"Quantity\",\"Value\":\"Quantity\"}","{\"Display\":\"Revenue\",\"Value\":\"TotalPrice\"}"]},"Revenue_Payout_Quant_1":{"broadcastFacet":true,"groups":[],"numbers":[],"query":"all_payout_sources = load \"ProgramRebateTypePayoutSourceMaster\";\r\nall_payout_sources = filter all_payout_sources by 'RebateType.CalculationBasis' in [\"PayoutAndAccrual\", \"Payout\"];\nall_payout_sources = filter all_payout_sources by 'MemberPayout.Status' != \"Rejected\";\r\nall_payout_sources = filter all_payout_sources by {{cell(Account_Name_1.selection, 0, \"Account.Name\").asEquality(\"MemberPayout.Member.Account.Name\")}};\r\ncurrent_valid_payout_sources = filter all_payout_sources by 'MemberPayout.PayoutPeriods.StartDate_sec_epoch' <= {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000;\r\ncurrent_valid_payout_sources = filter current_valid_payout_sources by 'MemberPayout.PayoutPeriods.EndDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000;\r\nStart_Current = foreach current_valid_payout_sources generate {{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000 as 'Start',\r\n'MemberPayout.Status' as 'MemberPayout.Status' ,(case when 'MemberPayout.Status' == \"Approved\" then 'DailyFinalRebateAmount' else 0 end) as 'DailyFinalRebateAmount_Approved', (case when 'MemberPayout.Status' == \"Interim\" || 'MemberPayout.Status' == \"Pending\" || 'MemberPayout.Status' == \"SystemCalculated\"  then 'DailyFinalRebateAmount' else 0 end ) as 'DailyFinalRebateAmount_UnderReview',\r\n {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000 as 'End', 'Id' as 'Id', 'MemberPayout.PayoutPeriods.StartDate_sec_epoch' as 'Start Date', 'MemberPayout.PayoutPeriods.EndDate_sec_epoch' as 'End Date', case when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000) then date_to_string(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch'),\"yyyy\") else date_to_string(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000),\"yyyy\") end as 'Date_Year', case when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000) then date_to_string(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch'),\"MM\") else date_to_string(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000),\"MM\") end as 'Date_Month', case when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' >= date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch')))) && {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000 >= date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch'))) then (daysBetween(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch'),month_last_day(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch')))) * 'DailyTotalTransactionAmount' when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000) && {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000 <= date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch'))) then (daysBetween(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch'),toDate({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000))) * 'DailyTotalTransactionAmount' when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < {{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' >= date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000)))) && {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000 >= date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000))) then (daysBetween(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000),month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000)))) * 'DailyTotalTransactionAmount' when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < {{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' <= date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000)))) && {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000 >= 'MemberPayout.PayoutPeriods.EndDate_sec_epoch' then (daysBetween(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000),toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) * 'DailyTotalTransactionAmount' when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < {{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000) && ({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000 <= date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000)))) && {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000 <= 'MemberPayout.PayoutPeriods.EndDate_sec_epoch' then (daysBetween(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000),toDate({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000))) * 'DailyTotalTransactionAmount' else 'AggregateObject.TotalTransactionAmount' end as 'TotalTransactionAmount',\r\n\r\n case when ('MemberPayout.Status' == \"Approved\") && ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' >= date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch')))) && {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000 >= date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch'))) then (daysBetween(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch'),month_last_day(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch')))) * 'DailyFinalRebateAmount' when ('MemberPayout.Status' == \"Approved\") && ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000) && {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000 <= date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch'))) then (daysBetween(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch'),toDate({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000))) * 'DailyFinalRebateAmount' when ('MemberPayout.Status' == \"Approved\") && ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < {{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' >= date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000)))) && {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000 >= date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000))) then (daysBetween(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000),month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000)))) * 'DailyFinalRebateAmount' when ('MemberPayout.Status' == \"Approved\") && ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < {{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' <= date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000)))) && {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000 >= 'MemberPayout.PayoutPeriods.EndDate_sec_epoch' then (daysBetween(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000),toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) * 'DailyFinalRebateAmount' when ('MemberPayout.Status' == \"Approved\") && ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < {{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000) && ({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000 <= date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000)))) && {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000 <= 'MemberPayout.PayoutPeriods.EndDate_sec_epoch' then (daysBetween(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000),toDate({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000))) * 'DailyFinalRebateAmount' else (case when 'MemberPayout.Status' == \"Approved\" then 'FinalRebateAmount' else 0 end)   end as 'Approved TD_Current',\r\n\r\n case when ('MemberPayout.Status' == \"Interim\" || 'MemberPayout.Status' == \"Pending\" || 'MemberPayout.Status' == \"SystemCalculated\") &&('MemberPayout.PayoutPeriods.StartDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' >= date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch')))) && {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000 >= date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch'))) then (daysBetween(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch'),month_last_day(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch')))) * 'DailyFinalRebateAmount' when ('MemberPayout.Status' == \"Interim\" || 'MemberPayout.Status' == \"Pending\" || 'MemberPayout.Status' == \"SystemCalculated\") && ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000) && {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000 <= date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch'))) then (daysBetween(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch'),toDate({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000))) * 'DailyFinalRebateAmount' when ('MemberPayout.Status' == \"Interim\" || 'MemberPayout.Status' == \"Pending\" || 'MemberPayout.Status' == \"SystemCalculated\") && ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < {{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' >= date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000)))) && {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000 >= date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000))) then (daysBetween(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000),month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000)))) * 'DailyFinalRebateAmount' when ('MemberPayout.Status' == \"Interim\" || 'MemberPayout.Status' == \"Pending\" || 'MemberPayout.Status' == \"SystemCalculated\") && ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < {{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' <= date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000)))) && {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000 >= 'MemberPayout.PayoutPeriods.EndDate_sec_epoch' then (daysBetween(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000),toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) * 'DailyFinalRebateAmount' when ('MemberPayout.Status' == \"Interim\" || 'MemberPayout.Status' == \"Pending\" || 'MemberPayout.Status' == \"SystemCalculated\") && ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < {{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000) && ({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000 <= date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000)))) && {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000 <= 'MemberPayout.PayoutPeriods.EndDate_sec_epoch' then (daysBetween(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000),toDate({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000))) * 'DailyFinalRebateAmount' else (case when 'MemberPayout.Status' == \"Interim\" || 'MemberPayout.Status' == \"Pending\" || 'MemberPayout.Status' == \"SystemCalculated\" then 'FinalRebateAmount' else 0 end)  end as 'Under Review_Current',\r\n \r\n \r\n case when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' >= date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch')))) && {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000 >= date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch'))) then (daysBetween(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch'),month_last_day(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch')))) * 'DailyFinalRebateAmount' when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000) && {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000 <= date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch'))) then (daysBetween(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch'),toDate({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000))) * 'DailyFinalRebateAmount' when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < {{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' >= date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000)))) && {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000 >= date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000))) then (daysBetween(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000),month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000)))) * 'DailyFinalRebateAmount' when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < {{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' <= date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000)))) && {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000 >= 'MemberPayout.PayoutPeriods.EndDate_sec_epoch' then (daysBetween(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000),toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) * 'DailyFinalRebateAmount' when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < {{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000) && ({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000 <= date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000)))) && {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000 <= 'MemberPayout.PayoutPeriods.EndDate_sec_epoch' then (daysBetween(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000),toDate({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000))) * 'DailyFinalRebateAmount' else 'FinalRebateAmount' end as 'RebateAmount',\r\n \r\n \r\n case when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' >= date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch')))) && {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000 >= date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch'))) then (daysBetween(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch'),month_last_day(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch')))) * 'DailyRebateAmount' when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000) && {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000 <= date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch'))) then (daysBetween(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch'),toDate({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000))) * 'DailyRebateAmount' when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < {{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' >= date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000)))) && {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000 >= date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000))) then (daysBetween(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000),month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000)))) * 'DailyRebateAmount' when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < {{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' <= date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000)))) && {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000 >= 'MemberPayout.PayoutPeriods.EndDate_sec_epoch' then (daysBetween(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000),toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) * 'DailyRebateAmount' when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < {{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000) && ({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000 <= date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000)))) && {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000 <= 'MemberPayout.PayoutPeriods.EndDate_sec_epoch' then (daysBetween(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000),toDate({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000))) * 'DailyRebateAmount' else 'RebateAmount' end as 'RebateBeforeAdjustment', case when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' >= date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch')))) && {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000 >= date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch'))) then (daysBetween(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch'),month_last_day(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch')))) * 'DailyQuantity' when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000) && {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000 <= date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch'))) then (daysBetween(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch'),toDate({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000))) * 'DailyQuantity' when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < {{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' >= date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000)))) && {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000 >= date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000))) then (daysBetween(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000),month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000)))) * 'DailyQuantity' when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < {{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' <= date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000)))) && {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000 >= 'MemberPayout.PayoutPeriods.EndDate_sec_epoch' then (daysBetween(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000),toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) * 'DailyQuantity' when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < {{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000) && ({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000 <= date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000)))) && {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000 <= 'MemberPayout.PayoutPeriods.EndDate_sec_epoch' then (daysBetween(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000),toDate({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000))) * 'DailyQuantity' else 'AggregateObject.TotalQuantity' end as 'TotalQuantity', 'DailyTotalTransactionAmount' as 'DailyTotalTransactionAmount', 'DailyFinalRebateAmount' as 'DailyFinalRebateAmount', 'DailyQuantity' as 'DailyQuantity', 'DailyRebateAmount' as 'DailyRebateAmount';\r\nEnd_Current = foreach current_valid_payout_sources generate 'MemberPayout.Status' as 'MemberPayout.Status',(case when 'MemberPayout.Status' == \"Approved\" then 'DailyFinalRebateAmount' else 0 end) as 'DailyFinalRebateAmount_Approved', (case when 'MemberPayout.Status' == \"Interim\" || 'MemberPayout.Status' == \"Pending\" || 'MemberPayout.Status' == \"SystemCalculated\"  then 'DailyFinalRebateAmount' else 0 end ) as 'DailyFinalRebateAmount_UnderReview' ,{{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000 as 'Start', {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000 as 'End', 'Id' as 'Id', 'MemberPayout.PayoutPeriods.StartDate_sec_epoch' as 'Start Date', 'MemberPayout.PayoutPeriods.EndDate_sec_epoch' as 'End Date', case when ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' < {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000) then date_to_string(toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'),\"yyyy\") else  date_to_string(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000),\"yyyy\") end as 'Date_Year', case when ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' < {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000) then date_to_string(toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'),\"MM\") else  date_to_string(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000),\"MM\") end as 'Date_Month', case when (('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < (date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) - 2764800)))) + 86400)) && ({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000 < (date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) - 2764800)))) + 86400)) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' <= {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000))  then (daysBetween(toDate((date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) - 2764800)))))),toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) * 'DailyTotalTransactionAmount' when (('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < (date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000))) - 2764800)))) + 86400)) && ({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000 < (date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000))) - 2764800)))) + 86400)) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000)) then (daysBetween(toDate((date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000))) - 2764800)))))),toDate({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000))) * 'DailyTotalTransactionAmount' else 0 end as 'TotalTransactionAmount', \r\n\r\n\r\n\r\ncase when ('MemberPayout.Status' == \"Approved\") && (('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < (date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) - 2764800)))) + 86400)) && ({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000 < (date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) - 2764800)))) + 86400)) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' <= {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000))  then (daysBetween(toDate((date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) - 2764800)))))),toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) * 'DailyFinalRebateAmount' when ('MemberPayout.Status' == \"Approved\") && (('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < (date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000))) - 2764800)))) + 86400)) && ({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000 < (date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000))) - 2764800)))) + 86400)) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000)) then (daysBetween(toDate((date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000))) - 2764800)))))),toDate({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000))) * 'DailyFinalRebateAmount' else 0 end as 'Approved TD_Current',\r\n\r\ncase when ('MemberPayout.Status' == \"Interim\" || 'MemberPayout.Status' == \"Pending\" || 'MemberPayout.Status' == \"SystemCalculated\") && (('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < (date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) - 2764800)))) + 86400)) && ({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000 < (date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) - 2764800)))) + 86400)) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' <= {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000))  then (daysBetween(toDate((date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) - 2764800)))))),toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) * 'DailyFinalRebateAmount' when ('MemberPayout.Status' == \"Interim\" || 'MemberPayout.Status' == \"Pending\" || 'MemberPayout.Status' == \"SystemCalculated\") && (('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < (date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000))) - 2764800)))) + 86400)) && ({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000 < (date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000))) - 2764800)))) + 86400)) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000)) then (daysBetween(toDate((date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000))) - 2764800)))))),toDate({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000))) * 'DailyFinalRebateAmount' else 0 end as 'Under Review_Current',\r\n\r\ncase when (('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < (date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) - 2764800)))) + 86400)) && ({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000 < (date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) - 2764800)))) + 86400)) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' <= {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000))  then (daysBetween(toDate((date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) - 2764800)))))),toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) * 'DailyFinalRebateAmount' when (('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < (date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000))) - 2764800)))) + 86400)) && ({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000 < (date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000))) - 2764800)))) + 86400)) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000)) then (daysBetween(toDate((date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000))) - 2764800)))))),toDate({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000))) * 'DailyFinalRebateAmount' else 0 end as 'RebateAmount',\r\ncase when (('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < (date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) - 2764800)))) + 86400)) && ({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000 < (date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) - 2764800)))) + 86400)) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' <= {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000))  then (daysBetween(toDate((date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) - 2764800)))))),toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) * 'DailyRebateAmount' when (('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < (date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000))) - 2764800)))) + 86400)) && ({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000 < (date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000))) - 2764800)))) + 86400)) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000)) then (daysBetween(toDate((date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000))) - 2764800)))))),toDate({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000))) * 'DailyRebateAmount' else 0 end as 'RebateBeforeAdjustment', case when (('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < (date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) - 2764800)))) + 86400)) && ({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000 < (date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) - 2764800)))) + 86400)) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' <= {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000))  then (daysBetween(toDate((date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) - 2764800)))))),toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) * 'DailyQuantity' when (('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < (date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000))) - 2764800)))) + 86400)) && ({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000 < (date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000))) - 2764800)))) + 86400)) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000)) then (daysBetween(toDate((date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000))) - 2764800)))))),toDate({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000))) * 'DailyQuantity' else 0 end as 'TotalQuantity', 'DailyTotalTransactionAmount' as 'DailyTotalTransactionAmount', 'DailyFinalRebateAmount' as 'DailyFinalRebateAmount', 'DailyQuantity' as 'DailyQuantity', 'DailyRebateAmount' as 'DailyRebateAmount';\r\nDataForFill_Current = union Start_Current, End_Current;\r\nDataForFill_Current = foreach DataForFill_Current generate 'Id' as 'Id', 'Date_Year' as 'Date_Year', 'Date_Month' as 'Date_Month','Start' as 'Start', 'End' as 'End', 'Start Date' as 'Start Date', 'End Date' as 'End Date','Approved TD_Current' as 'Approved TD_Current','Under Review_Current' as 'Under Review_Current', 'TotalTransactionAmount' as 'TotalTransactionAmount','RebateAmount' as 'RebateAmount', 'TotalQuantity' as 'TotalQuantity', 'DailyTotalTransactionAmount' as 'DailyTotalTransactionAmount','DailyFinalRebateAmount_Approved' as 'DailyFinalRebateAmount_Approved' ,'DailyFinalRebateAmount_UnderReview' as 'DailyFinalRebateAmount_UnderReview','DailyFinalRebateAmount' as 'DailyFinalRebateAmount', 'DailyQuantity' as 'DailyQuantity', 'DailyRebateAmount' as 'DailyRebateAmount', 'RebateBeforeAdjustment' as 'RebateBeforeAdjustment';\r\nFilledData_Current = fill DataForFill_Current by (dateCols=('Date_Year', 'Date_Month', \"Y-M\"), partition='Id');\r\nFilledData_Current = group FilledData_Current by ('Id', 'Date_Year', 'Date_Month');\r\nFilledData_Current = foreach FilledData_Current generate 'Id', 'Date_Year', 'Date_Month', date_to_epoch(toDate('Date_Year'+\"-\"+'Date_Month'+\"-01\",\"yyyy-MM-dd\")) as 'Date', first('Start') as 'Start', min(first('Start')) over ([..0] partition by 'Id' order by ('Date_Year','Date_Month')) as 'StartFilter', first('End') as 'End', min(first('End')) over ([..0] partition by 'Id' order by ('Date_Year','Date_Month')) as 'EndFilter',  min(first('Start Date')) over ([..0] partition by 'Id' order by ('Date_Year','Date_Month')) as 'Start Date', max(first('End Date')) over ([..] partition by 'Id' ) as 'End Date', sum('Approved TD_Current') as 'Approved TD_Current' ,sum('Under Review_Current') as 'Under Review_Current', sum('TotalTransactionAmount') as 'TotalTransactionAmount', min(first('DailyTotalTransactionAmount'))over ([..0] partition by 'Id' order by ('Date_Year','Date_Month')) as 'DailyTotalTransactionAmount', sum('RebateAmount') as 'RebateAmount', min(first('DailyFinalRebateAmount'))over ([..0] partition by 'Id' order by ('Date_Year','Date_Month')) as 'DailyFinalRebateAmount',min(first('DailyFinalRebateAmount_Approved'))over ([..0] partition by 'Id' order by ('Date_Year','Date_Month')) as 'DailyFinalRebateAmount_Approved',min(first('DailyFinalRebateAmount_UnderReview'))over ([..0] partition by 'Id' order by ('Date_Year','Date_Month')) as 'DailyFinalRebateAmount_UnderReview', sum('RebateBeforeAdjustment') as 'RebateBeforeAdjustment', min(first('DailyRebateAmount'))over ([..0] partition by 'Id' order by ('Date_Year','Date_Month')) as 'DailyRebateAmount', sum('TotalQuantity') as 'TotalQuantity', min(first('DailyQuantity'))over ([..0] partition by 'Id' order by ('Date_Year','Date_Month')) as 'DailyQuantity';\r\nFilledData_Current = filter FilledData_Current by coalesce('Start',0) != 0 || ('Date' > 'StartFilter' && 'Date' > 'Start Date' && 'Date' < 'End Date' && 'Date' < 'EndFilter');\r\nFilledData_Current = foreach FilledData_Current generate 'Id', 'Date_Year', 'Date_Month',\r\n(case when 'TotalTransactionAmount' is null then month_days(toDate('Date'))*'DailyTotalTransactionAmount' else 'TotalTransactionAmount' end) as 'TotalTransactionAmount',\r\n(case when 'RebateAmount' is null then month_days(toDate('Date'))*'DailyFinalRebateAmount' else 'RebateAmount' end) as 'RebateAmount',\r\n(case when 'RebateBeforeAdjustment' is null then month_days(toDate('Date'))*'DailyRebateAmount' else 'RebateBeforeAdjustment' end) as 'RebateBeforeAdjustment',\r\n(case when 'TotalQuantity' is null then month_days(toDate('Date'))*'DailyQuantity' else 'TotalQuantity' end) as 'TotalQuantity',\r\n(case when 'Approved TD_Current' is null then month_days(toDate('Date'))*'DailyFinalRebateAmount_Approved' else 'Approved TD_Current' end) as 'Approved TD_Current',\r\n(case when 'Under Review_Current' is null then month_days(toDate('Date'))*'DailyFinalRebateAmount_UnderReview' else 'Under Review_Current' end) as 'Under Review_Current';\r\nprevious_valid_payout_sources= filter all_payout_sources by 'MemberPayout.PayoutPeriods.StartDate_sec_epoch' <= {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000;\r\nprevious_valid_payout_sources= filter previous_valid_payout_sources by 'MemberPayout.PayoutPeriods.EndDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000;\r\nStart_Previous = foreach previous_valid_payout_sources generate {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000 as 'Start',\r\n'MemberPayout.Status' as 'MemberPayout.Status' ,(case when 'MemberPayout.Status' == \"Approved\" then 'DailyFinalRebateAmount' else 0 end) as 'DailyFinalRebateAmount_Approved', (case when 'MemberPayout.Status' == \"Interim\" || 'MemberPayout.Status' == \"Pending\" || 'MemberPayout.Status' == \"SystemCalculated\"  then 'DailyFinalRebateAmount' else 0 end ) as 'DailyFinalRebateAmount_UnderReview',\r\n {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000 as 'End', 'Id' as 'Id', 'MemberPayout.PayoutPeriods.StartDate_sec_epoch' as 'Start Date', 'MemberPayout.PayoutPeriods.EndDate_sec_epoch' as 'End Date', case when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000) then date_to_string(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch'),\"yyyy\") else date_to_string(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000),\"yyyy\") end as 'Date_Year', case when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000) then date_to_string(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch'),\"MM\") else date_to_string(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000),\"MM\") end as 'Date_Month', case when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' >= date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch')))) && {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000 >= date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch'))) then (daysBetween(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch'),month_last_day(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch')))) * 'DailyTotalTransactionAmount' when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000) && {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000 <= date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch'))) then (daysBetween(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch'),toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000))) * 'DailyTotalTransactionAmount' when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' >= date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000)))) && {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000 >= date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000))) then (daysBetween(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000),month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000)))) * 'DailyTotalTransactionAmount' when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' <= date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000)))) && {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000 >= 'MemberPayout.PayoutPeriods.EndDate_sec_epoch' then (daysBetween(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000),toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) * 'DailyTotalTransactionAmount' when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000) && ({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000 <= date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000)))) && {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000 <= 'MemberPayout.PayoutPeriods.EndDate_sec_epoch' then (daysBetween(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000),toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000))) * 'DailyTotalTransactionAmount' else 'AggregateObject.TotalTransactionAmount' end as 'TotalTransactionAmount',\r\n\r\n case when ('MemberPayout.Status' == \"Approved\") && ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' >= date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch')))) && {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000 >= date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch'))) then (daysBetween(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch'),month_last_day(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch')))) * 'DailyFinalRebateAmount' when ('MemberPayout.Status' == \"Approved\") && ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000) && {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000 <= date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch'))) then (daysBetween(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch'),toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000))) * 'DailyFinalRebateAmount' when ('MemberPayout.Status' == \"Approved\") && ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' >= date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000)))) && {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000 >= date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000))) then (daysBetween(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000),month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000)))) * 'DailyFinalRebateAmount' when ('MemberPayout.Status' == \"Approved\") && ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' <= date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000)))) && {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000 >= 'MemberPayout.PayoutPeriods.EndDate_sec_epoch' then (daysBetween(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000),toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) * 'DailyFinalRebateAmount' when ('MemberPayout.Status' == \"Approved\") && ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000) && ({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000 <= date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000)))) && {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000 <= 'MemberPayout.PayoutPeriods.EndDate_sec_epoch' then (daysBetween(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000),toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000))) * 'DailyFinalRebateAmount' else (case when 'MemberPayout.Status' == \"Approved\" then 'FinalRebateAmount' else 0 end)   end as 'Approved TD_Previous',\r\n\r\n case when ('MemberPayout.Status' == \"Interim\" || 'MemberPayout.Status' == \"Pending\" || 'MemberPayout.Status' == \"SystemCalculated\") &&('MemberPayout.PayoutPeriods.StartDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' >= date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch')))) && {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000 >= date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch'))) then (daysBetween(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch'),month_last_day(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch')))) * 'DailyFinalRebateAmount' when ('MemberPayout.Status' == \"Interim\" || 'MemberPayout.Status' == \"Pending\" || 'MemberPayout.Status' == \"SystemCalculated\") && ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000) && {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000 <= date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch'))) then (daysBetween(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch'),toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000))) * 'DailyFinalRebateAmount' when ('MemberPayout.Status' == \"Interim\" || 'MemberPayout.Status' == \"Pending\" || 'MemberPayout.Status' == \"SystemCalculated\") && ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' >= date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000)))) && {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000 >= date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000))) then (daysBetween(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000),month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000)))) * 'DailyFinalRebateAmount' when ('MemberPayout.Status' == \"Interim\" || 'MemberPayout.Status' == \"Pending\" || 'MemberPayout.Status' == \"SystemCalculated\") && ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' <= date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000)))) && {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000 >= 'MemberPayout.PayoutPeriods.EndDate_sec_epoch' then (daysBetween(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000),toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) * 'DailyFinalRebateAmount' when ('MemberPayout.Status' == \"Interim\" || 'MemberPayout.Status' == \"Pending\" || 'MemberPayout.Status' == \"SystemCalculated\") && ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000) && ({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000 <= date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000)))) && {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000 <= 'MemberPayout.PayoutPeriods.EndDate_sec_epoch' then (daysBetween(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000),toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000))) * 'DailyFinalRebateAmount' else (case when 'MemberPayout.Status' == \"Interim\" || 'MemberPayout.Status' == \"Pending\" || 'MemberPayout.Status' == \"SystemCalculated\" then 'FinalRebateAmount' else 0 end)  end as 'Under Review_Previous',\r\n \r\n \r\n case when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' >= date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch')))) && {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000 >= date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch'))) then (daysBetween(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch'),month_last_day(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch')))) * 'DailyFinalRebateAmount' when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000) && {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000 <= date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch'))) then (daysBetween(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch'),toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000))) * 'DailyFinalRebateAmount' when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' >= date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000)))) && {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000 >= date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000))) then (daysBetween(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000),month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000)))) * 'DailyFinalRebateAmount' when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' <= date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000)))) && {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000 >= 'MemberPayout.PayoutPeriods.EndDate_sec_epoch' then (daysBetween(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000),toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) * 'DailyFinalRebateAmount' when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000) && ({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000 <= date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000)))) && {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000 <= 'MemberPayout.PayoutPeriods.EndDate_sec_epoch' then (daysBetween(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000),toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000))) * 'DailyFinalRebateAmount' else 'FinalRebateAmount' end as 'RebateAmount',\r\n \r\n \r\n case when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' >= date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch')))) && {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000 >= date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch'))) then (daysBetween(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch'),month_last_day(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch')))) * 'DailyRebateAmount' when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000) && {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000 <= date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch'))) then (daysBetween(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch'),toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000))) * 'DailyRebateAmount' when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' >= date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000)))) && {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000 >= date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000))) then (daysBetween(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000),month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000)))) * 'DailyRebateAmount' when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' <= date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000)))) && {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000 >= 'MemberPayout.PayoutPeriods.EndDate_sec_epoch' then (daysBetween(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000),toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) * 'DailyRebateAmount' when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000) && ({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000 <= date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000)))) && {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000 <= 'MemberPayout.PayoutPeriods.EndDate_sec_epoch' then (daysBetween(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000),toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000))) * 'DailyRebateAmount' else 'RebateAmount' end as 'RebateBeforeAdjustment', case when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' >= date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch')))) && {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000 >= date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch'))) then (daysBetween(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch'),month_last_day(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch')))) * 'DailyQuantity' when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000) && {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000 <= date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch'))) then (daysBetween(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch'),toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000))) * 'DailyQuantity' when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' >= date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000)))) && {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000 >= date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000))) then (daysBetween(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000),month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000)))) * 'DailyQuantity' when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' <= date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000)))) && {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000 >= 'MemberPayout.PayoutPeriods.EndDate_sec_epoch' then (daysBetween(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000),toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) * 'DailyQuantity' when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000) && ({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000 <= date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000)))) && {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000 <= 'MemberPayout.PayoutPeriods.EndDate_sec_epoch' then (daysBetween(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000),toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000))) * 'DailyQuantity' else 'AggregateObject.TotalQuantity' end as 'TotalQuantity', 'DailyTotalTransactionAmount' as 'DailyTotalTransactionAmount', 'DailyFinalRebateAmount' as 'DailyFinalRebateAmount', 'DailyQuantity' as 'DailyQuantity', 'DailyRebateAmount' as 'DailyRebateAmount';\r\nEnd_Previous = foreach previous_valid_payout_sources generate 'MemberPayout.Status' as 'MemberPayout.Status',(case when 'MemberPayout.Status' == \"Approved\" then 'DailyFinalRebateAmount' else 0 end) as 'DailyFinalRebateAmount_Approved', (case when 'MemberPayout.Status' == \"Interim\" || 'MemberPayout.Status' == \"Pending\" || 'MemberPayout.Status' == \"SystemCalculated\"  then 'DailyFinalRebateAmount' else 0 end ) as 'DailyFinalRebateAmount_UnderReview' ,{{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000 as 'Start', {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000 as 'End', 'Id' as 'Id', 'MemberPayout.PayoutPeriods.StartDate_sec_epoch' as 'Start Date', 'MemberPayout.PayoutPeriods.EndDate_sec_epoch' as 'End Date', case when ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' < {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000) then date_to_string(toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'),\"yyyy\") else  date_to_string(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000),\"yyyy\") end as 'Date_Year', case when ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' < {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000) then date_to_string(toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'),\"MM\") else  date_to_string(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000),\"MM\") end as 'Date_Month', case when (('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < (date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) - 2764800)))) + 86400)) && ({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000 < (date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) - 2764800)))) + 86400)) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' <= {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000))  then (daysBetween(toDate((date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) - 2764800)))))),toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) * 'DailyTotalTransactionAmount' when (('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < (date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000))) - 2764800)))) + 86400)) && ({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000 < (date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000))) - 2764800)))) + 86400)) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000)) then (daysBetween(toDate((date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000))) - 2764800)))))),toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000))) * 'DailyTotalTransactionAmount' else 0 end as 'TotalTransactionAmount', \r\n\r\n\r\n\r\ncase when ('MemberPayout.Status' == \"Approved\") && (('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < (date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) - 2764800)))) + 86400)) && ({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000 < (date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) - 2764800)))) + 86400)) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' <= {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000))  then (daysBetween(toDate((date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) - 2764800)))))),toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) * 'DailyFinalRebateAmount' when ('MemberPayout.Status' == \"Approved\") && (('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < (date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000))) - 2764800)))) + 86400)) && ({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000 < (date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000))) - 2764800)))) + 86400)) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000)) then (daysBetween(toDate((date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000))) - 2764800)))))),toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000))) * 'DailyFinalRebateAmount' else 0 end as 'Approved TD_Previous',\r\n\r\ncase when ('MemberPayout.Status' == \"Interim\" || 'MemberPayout.Status' == \"Pending\" || 'MemberPayout.Status' == \"SystemCalculated\") && (('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < (date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) - 2764800)))) + 86400)) && ({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000 < (date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) - 2764800)))) + 86400)) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' <= {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000))  then (daysBetween(toDate((date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) - 2764800)))))),toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) * 'DailyFinalRebateAmount' when ('MemberPayout.Status' == \"Interim\" || 'MemberPayout.Status' == \"Pending\" || 'MemberPayout.Status' == \"SystemCalculated\") && (('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < (date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000))) - 2764800)))) + 86400)) && ({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000 < (date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000))) - 2764800)))) + 86400)) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000)) then (daysBetween(toDate((date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000))) - 2764800)))))),toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000))) * 'DailyFinalRebateAmount' else 0 end as 'Under Review_Previous',\r\n\r\ncase when (('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < (date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) - 2764800)))) + 86400)) && ({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000 < (date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) - 2764800)))) + 86400)) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' <= {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000))  then (daysBetween(toDate((date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) - 2764800)))))),toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) * 'DailyFinalRebateAmount' when (('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < (date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000))) - 2764800)))) + 86400)) && ({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000 < (date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000))) - 2764800)))) + 86400)) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000)) then (daysBetween(toDate((date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000))) - 2764800)))))),toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000))) * 'DailyFinalRebateAmount' else 0 end as 'RebateAmount',\r\ncase when (('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < (date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) - 2764800)))) + 86400)) && ({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000 < (date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) - 2764800)))) + 86400)) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' <= {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000))  then (daysBetween(toDate((date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) - 2764800)))))),toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) * 'DailyRebateAmount' when (('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < (date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000))) - 2764800)))) + 86400)) && ({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000 < (date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000))) - 2764800)))) + 86400)) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000)) then (daysBetween(toDate((date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000))) - 2764800)))))),toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000))) * 'DailyRebateAmount' else 0 end as 'RebateBeforeAdjustment', case when (('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < (date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) - 2764800)))) + 86400)) && ({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000 < (date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) - 2764800)))) + 86400)) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' <= {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000))  then (daysBetween(toDate((date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) - 2764800)))))),toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) * 'DailyQuantity' when (('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < (date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000))) - 2764800)))) + 86400)) && ({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000 < (date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000))) - 2764800)))) + 86400)) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000)) then (daysBetween(toDate((date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000))) - 2764800)))))),toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000))) * 'DailyQuantity' else 0 end as 'TotalQuantity', 'DailyTotalTransactionAmount' as 'DailyTotalTransactionAmount', 'DailyFinalRebateAmount' as 'DailyFinalRebateAmount', 'DailyQuantity' as 'DailyQuantity', 'DailyRebateAmount' as 'DailyRebateAmount';\r\nDataForFill_Previous = union Start_Previous, End_Previous;\r\nDataForFill_Previous = foreach DataForFill_Previous generate 'Id' as 'Id', 'Date_Year' as 'Date_Year', 'Date_Month' as 'Date_Month','Start' as 'Start', 'End' as 'End', 'Start Date' as 'Start Date', 'End Date' as 'End Date','Approved TD_Previous' as 'Approved TD_Previous','Under Review_Previous' as 'Under Review_Previous', 'TotalTransactionAmount' as 'TotalTransactionAmount','RebateAmount' as 'RebateAmount', 'TotalQuantity' as 'TotalQuantity', 'DailyTotalTransactionAmount' as 'DailyTotalTransactionAmount','DailyFinalRebateAmount_Approved' as 'DailyFinalRebateAmount_Approved' ,'DailyFinalRebateAmount_UnderReview' as 'DailyFinalRebateAmount_UnderReview','DailyFinalRebateAmount' as 'DailyFinalRebateAmount', 'DailyQuantity' as 'DailyQuantity', 'DailyRebateAmount' as 'DailyRebateAmount', 'RebateBeforeAdjustment' as 'RebateBeforeAdjustment';\r\nFilledData_Previous = fill DataForFill_Previous by (dateCols=('Date_Year', 'Date_Month', \"Y-M\"), partition='Id');\r\nFilledData_Previous = group FilledData_Previous by ('Id', 'Date_Year', 'Date_Month');\r\nFilledData_Previous = foreach FilledData_Previous generate 'Id', 'Date_Year', 'Date_Month', date_to_epoch(toDate('Date_Year'+\"-\"+'Date_Month'+\"-01\",\"yyyy-MM-dd\")) as 'Date', first('Start') as 'Start', min(first('Start')) over ([..0] partition by 'Id' order by ('Date_Year','Date_Month')) as 'StartFilter', first('End') as 'End', min(first('End')) over ([..0] partition by 'Id' order by ('Date_Year','Date_Month')) as 'EndFilter',  min(first('Start Date')) over ([..0] partition by 'Id' order by ('Date_Year','Date_Month')) as 'Start Date', max(first('End Date')) over ([..] partition by 'Id' ) as 'End Date', sum('Approved TD_Previous') as 'Approved TD_Previous' ,sum('Under Review_Previous') as 'Under Review_Previous', sum('TotalTransactionAmount') as 'TotalTransactionAmount', min(first('DailyTotalTransactionAmount'))over ([..0] partition by 'Id' order by ('Date_Year','Date_Month')) as 'DailyTotalTransactionAmount', sum('RebateAmount') as 'RebateAmount', min(first('DailyFinalRebateAmount'))over ([..0] partition by 'Id' order by ('Date_Year','Date_Month')) as 'DailyFinalRebateAmount',min(first('DailyFinalRebateAmount_Approved'))over ([..0] partition by 'Id' order by ('Date_Year','Date_Month')) as 'DailyFinalRebateAmount_Approved',min(first('DailyFinalRebateAmount_UnderReview'))over ([..0] partition by 'Id' order by ('Date_Year','Date_Month')) as 'DailyFinalRebateAmount_UnderReview', sum('RebateBeforeAdjustment') as 'RebateBeforeAdjustment', min(first('DailyRebateAmount'))over ([..0] partition by 'Id' order by ('Date_Year','Date_Month')) as 'DailyRebateAmount', sum('TotalQuantity') as 'TotalQuantity', min(first('DailyQuantity'))over ([..0] partition by 'Id' order by ('Date_Year','Date_Month')) as 'DailyQuantity';\r\nFilledData_Previous = filter FilledData_Previous by coalesce('Start',0) != 0 || ('Date' > 'StartFilter' && 'Date' > 'Start Date' && 'Date' < 'End Date' && 'Date' < 'EndFilter');\r\nFilledData_Previous = foreach FilledData_Previous generate 'Id', 'Date_Year', 'Date_Month',\r\n(case when 'TotalTransactionAmount' is null then month_days(toDate('Date'))*'DailyTotalTransactionAmount' else 'TotalTransactionAmount' end) as 'TotalTransactionAmount',\r\n(case when 'RebateAmount' is null then month_days(toDate('Date'))*'DailyFinalRebateAmount' else 'RebateAmount' end) as 'RebateAmount',\r\n(case when 'RebateBeforeAdjustment' is null then month_days(toDate('Date'))*'DailyRebateAmount' else 'RebateBeforeAdjustment' end) as 'RebateBeforeAdjustment',\r\n(case when 'TotalQuantity' is null then month_days(toDate('Date'))*'DailyQuantity' else 'TotalQuantity' end) as 'TotalQuantity',\r\n(case when 'Approved TD_Previous' is null then month_days(toDate('Date'))*'DailyFinalRebateAmount_Approved' else 'Approved TD_Previous' end) as 'Approved TD_Previous',\r\n(case when 'Under Review_Previous' is null then month_days(toDate('Date'))*'DailyFinalRebateAmount_UnderReview' else 'Under Review_Previous' end) as 'Under Review_Previous';\r\nresult = group FilledData_Current by all full, FilledData_Previous by all;\r\nresult = foreach result generate sum(FilledData_Current.'RebateAmount') as 'sum_RebateAmount',sum(FilledData_Current.'Approved TD_Current') as 'sum_Approved TD_Current',sum(FilledData_Current.'Under Review_Current') as 'sum_Under Review_Current', case when coalesce(sum(FilledData_Previous.'RebateAmount'),0) == 0 then \"-\" else number_to_string(round((coalesce(sum(FilledData_Current.'RebateAmount'),0) - coalesce(sum(FilledData_Previous.'RebateAmount'),0)) * 100 / coalesce(sum(FilledData_Previous.'RebateAmount'),0),0),\"0\") end as 'RebateDelta', case when coalesce(sum(FilledData_Previous.'Approved TD_Previous'),0) == 0 then \"-\" else number_to_string(round((coalesce(sum(FilledData_Current.'Approved TD_Current'),0) - coalesce(sum(FilledData_Previous.'Approved TD_Previous'),0)) * 100 / coalesce(sum(FilledData_Previous.'Approved TD_Previous'),0),0),\"0\") end as 'ApprovedTDDelta',case when coalesce(sum(FilledData_Previous.'Under Review_Previous'),0) == 0 then \"-\" else number_to_string(round((coalesce(sum(FilledData_Current.'Under Review_Current'),0) - coalesce(sum(FilledData_Previous.'Under Review_Previous'),0)) * 100 / coalesce(sum(FilledData_Previous.'Under Review_Previous'),0),0),\"0\") end as 'UnderReviewDelta',case when (coalesce(sum(FilledData_Current.'RebateAmount'),0) - coalesce(sum(FilledData_Previous.'RebateAmount'),0)) > 0 then \"rgb(255, 152, 151)\" else \"rgb(0, 181, 49)\" end as 'RebateColor',case when (coalesce(sum(FilledData_Current.'Approved TD_Current'),0) - coalesce(sum(FilledData_Previous.'Approved TD_Previous'),0)) > 0 then \"rgb(255, 152, 151)\" else \"rgb(0, 181, 49)\" end as 'ApprovedColor',case when (coalesce(sum(FilledData_Current.'Under Review_Current'),0) - coalesce(sum(FilledData_Previous.'Under Review_Previous'),0)) > 0 then \"rgb(255, 152, 151)\" else \"rgb(0, 181, 49)\" end as 'UnderReviewColor',case when (coalesce(sum(FilledData_Current.'RebateAmount'),0) - coalesce(sum(FilledData_Previous.'RebateAmount'),0)) > 0 then \"↑\"  when (coalesce(sum(FilledData_Current.'RebateAmount'),0) - coalesce(sum(FilledData_Previous.'RebateAmount'),0)) == 0 then \"-\" else \"↓\" end as 'RebateArrow', case when (coalesce(sum(FilledData_Current.'Approved TD_Current'),0) - coalesce(sum(FilledData_Previous.'Approved TD_Previous'),0)) > 0 then \"↑\"  when (coalesce(sum(FilledData_Current.'Approved TD_Current'),0) - coalesce(sum(FilledData_Previous.'Approved TD_Previous'),0)) == 0 then \"-\" else \"↓\" end as 'ApproveArrow',case when (coalesce(sum(FilledData_Current.'Under Review_Current'),0) - coalesce(sum(FilledData_Previous.'Under Review_Previous'),0)) > 0 then \"↑\"  when (coalesce(sum(FilledData_Current.'Under Review_Current'),0) - coalesce(sum(FilledData_Previous.'Under Review_Previous'),0)) == 0 then \"-\" else \"↓\" end as 'UnderReviewArrow',\r\nsum(FilledData_Current.'RebateBeforeAdjustment') as 'sum_RebateBeforeAdjustment', case when coalesce(sum(FilledData_Previous.'RebateBeforeAdjustment'),0) == 0 then \"-\" else number_to_string(round((coalesce(sum(FilledData_Current.'RebateBeforeAdjustment'),0) - coalesce(sum(FilledData_Previous.'RebateBeforeAdjustment'),0)) * 100 / coalesce(sum(FilledData_Previous.'RebateBeforeAdjustment'),0),0),\"0\") end as 'RebateBeforeAdjustmentDelta', case when (coalesce(sum(FilledData_Current.'RebateBeforeAdjustment'),0) - coalesce(sum(FilledData_Previous.'RebateBeforeAdjustment'),0)) > 0 then \"rgb(230, 29, 25)\" else \"rgb(0, 181, 49)\" end as 'RebateBeforeAdjustmentColor', case when (coalesce(sum(FilledData_Current.'RebateBeforeAdjustment'),0) - coalesce(sum(FilledData_Previous.'RebateBeforeAdjustment'),0)) > 0 then \"↑\"  when (coalesce(sum(FilledData_Current.'RebateBeforeAdjustment'),0) - coalesce(sum(FilledData_Previous.'RebateBeforeAdjustment'),0)) == 0 then \"-\" else \"↓\" end as 'RebateBeforeAdjustmentArrow', sum(FilledData_Current.'TotalQuantity') as 'sum_AggregateObject.TotalQuantity', case when coalesce(sum(FilledData_Previous.'TotalQuantity'),0) == 0 then \"-\" else number_to_string(round((coalesce(sum(FilledData_Current.'TotalQuantity'),0) - coalesce(sum(FilledData_Previous.'TotalQuantity'),0)) * 100 / coalesce(sum(FilledData_Previous.'TotalQuantity'),0),0),\"0\") end as 'QuantityDelta', case when (coalesce(sum(FilledData_Current.'TotalQuantity'),0) - coalesce(sum(FilledData_Previous.'TotalQuantity'),0)) > 0 then \"rgb(0, 181, 49)\" else \"rgb(230, 29, 25)\" end as 'QuantityColor', case when (coalesce(sum(FilledData_Current.'TotalQuantity'),0) - coalesce(sum(FilledData_Previous.'TotalQuantity'),0)) > 0 then \"↑\"  when (coalesce(sum(FilledData_Current.'TotalQuantity'),0) - coalesce(sum(FilledData_Previous.'TotalQuantity'),0)) == 0 then \"-\" else \"↓\" end as 'QuantityArrow', sum(FilledData_Current.'TotalTransactionAmount') as 'sum_AggregateObject.TotalTransactionAmount', case when coalesce(sum(FilledData_Previous.'TotalTransactionAmount'),0) == 0 then \"-\" else number_to_string(round((coalesce(sum(FilledData_Current.'TotalTransactionAmount'),0) - coalesce(sum(FilledData_Previous.'TotalTransactionAmount'),0)) * 100 / coalesce(sum(FilledData_Previous.'TotalTransactionAmount'),0),0),\"0\") end as 'TransactionDelta', case when (coalesce(sum(FilledData_Current.'TotalTransactionAmount'),0) - coalesce(sum(FilledData_Previous.'TotalTransactionAmount'),0)) > 0 then \"rgb(0, 181, 49)\" else \"rgb(230, 29, 25)\" end as 'TransactionColor', case when (coalesce(sum(FilledData_Current.'TotalTransactionAmount'),0) - coalesce(sum(FilledData_Previous.'TotalTransactionAmount'),0)) > 0 then \"↑\"  when (coalesce(sum(FilledData_Current.'TotalTransactionAmount'),0) - coalesce(sum(FilledData_Previous.'TotalTransactionAmount'),0)) == 0 then \"-\" else \"↓\" end as 'TransactionArrow', round(sum(FilledData_Current.'RebateAmount')/sum(FilledData_Current.'TotalTransactionAmount'),4) as 'Payout:Revenue', case when coalesce(sum(FilledData_Previous.'RebateAmount')/sum(FilledData_Previous.'TotalTransactionAmount'),0) == 0 then \"-\" else number_to_string(round((coalesce(sum(FilledData_Current.'RebateAmount')/sum(FilledData_Current.'TotalTransactionAmount'),0) - coalesce(sum(FilledData_Previous.'RebateAmount')/sum(FilledData_Previous.'TotalTransactionAmount'),0)) * 100 / coalesce(sum(FilledData_Previous.'RebateAmount')/sum(FilledData_Previous.'TotalTransactionAmount'),0),0),\"0\") end as 'Payout:RevenueDelta', case when (coalesce(sum(FilledData_Current.'RebateAmount')/sum(FilledData_Current.'TotalTransactionAmount'),0) - coalesce(sum(FilledData_Previous.'RebateAmount')/sum(FilledData_Previous.'TotalTransactionAmount'),0)) > 0 then \"rgb(255, 152, 151)\" else \"rgb(0, 181, 49)\" end as 'Payout:RevenueColor',  case when (coalesce(sum(FilledData_Current.'RebateAmount')/sum(FilledData_Current.'TotalTransactionAmount'),0) - coalesce(sum(FilledData_Previous.'RebateAmount')/sum(FilledData_Previous.'TotalTransactionAmount'),0)) > 0 then \"↑\"  when (coalesce(sum(FilledData_Current.'RebateAmount')/sum(FilledData_Current.'TotalTransactionAmount'),0) - coalesce(sum(FilledData_Previous.'RebateAmount')/sum(FilledData_Previous.'TotalTransactionAmount'),0)) == 0 then \"-\" else \"↓\" end as 'Payout:RevenueArrow', round(sum(FilledData_Current.'RebateAmount')/sum(FilledData_Current.'TotalQuantity'),2) as 'sum_Payout:Quantity', case when coalesce(sum(FilledData_Previous.'RebateAmount')/sum(FilledData_Previous.'TotalQuantity'),0) == 0 then \"-\" else number_to_string(round((coalesce(sum(FilledData_Current.'RebateAmount')/sum(FilledData_Current.'TotalQuantity'),0) - coalesce(sum(FilledData_Previous.'RebateAmount')/sum(FilledData_Previous.'TotalQuantity'),0)) * 100 / coalesce(sum(FilledData_Previous.'RebateAmount')/sum(FilledData_Previous.'TotalQuantity'),0),0),\"0\") end as 'Payout:QuantityDelta', case when (coalesce(sum(FilledData_Current.'RebateAmount')/sum(FilledData_Current.'TotalQuantity'),0) - coalesce(sum(FilledData_Previous.'RebateAmount')/sum(FilledData_Previous.'TotalQuantity'),0)) > 0 then \"rgb(230, 29, 25)\" else \"rgb(0, 181, 49)\" end as 'Payout:QuantityColor', case when (coalesce(sum(FilledData_Current.'RebateAmount')/sum(FilledData_Current.'TotalQuantity'),0) - coalesce(sum(FilledData_Previous.'RebateAmount')/sum(FilledData_Previous.'TotalQuantity'),0)) > 0 then \"↑\"  when (coalesce(sum(FilledData_Current.'RebateAmount')/sum(FilledData_Current.'TotalQuantity'),0) - coalesce(sum(FilledData_Previous.'RebateAmount')/sum(FilledData_Previous.'TotalQuantity'),0)) == 0 then \"-\" else \"↓\" end as 'Payout:QuantityArrow';","receiveFacetSource":{"mode":"exclude","steps":["Consider_To_Enroll_1"]},"selectMode":"single","strings":[],"type":"saql","useGlobal":true,"visualizationParameters":{"parameters":{"autoFitMode":"keepLabels","bins":{"breakpoints":{"high":100,"low":0},"bands":{"high":{"color":"#008000","label":""},"low":{"color":"#B22222","label":""},"medium":{"color":"#ffa500","label":""}}},"legend":{"descOrder":false,"showHeader":true,"show":true,"customSize":"auto","position":"right-top","inside":false},"axisMode":"multi","tooltip":{"content":{"legend":{"showBinLabel":true,"measures":[],"showNullValues":true,"customizeLegend":false,"showPercentage":true,"showDimensions":true,"showMeasures":true,"dimensions":[]}}},"visualizationType":"hbar","title":{"fontSize":14,"subtitleFontSize":11,"label":"","align":"center","subtitleLabel":""},"binValues":false,"trellis":{"flipLabels":false,"showGridLines":true,"size":[100,100],"enable":false,"type":"x","chartsPerLine":4},"showActionMenu":true,"measureAxis2":{"sqrtScale":false,"showTitle":true,"showAxis":true,"title":"","customDomain":{"showDomain":false}},"measureAxis1":{"sqrtScale":false,"showTitle":true,"showAxis":true,"title":"","customDomain":{"showDomain":false}},"valueType":"compactNumber","theme":"wave","compactDecimalDigits":-1,"dimensionAxis":{"showTitle":true,"customSize":"auto","showAxis":true,"title":"","icons":{"useIcons":false,"iconProps":{"fit":"cover","column":"","type":"round"}}},"applyConditionalFormatting":true},"type":"chart"}},"Top_Product_outside__1":{"broadcastFacet":false,"groups":[],"label":"Top Product outside Program","numbers":[],"query":"RebateProgramMemberMaster4 = load \"RebateProgramMemberMaster\";\r\nProgramRebateTypeMaster4 = load \"ProgramRebateTypeMaster\";\r\nProgramRebateTypeMaster4 = filter ProgramRebateTypeMaster4 by 'CalculationBasis' in [\"PayoutAndAccrual\", \"Payout\"];\nOrders = load \"OrderMaster\";\r\nProductMaster = load \"ProductMaster\";\r\nProgramRebateTypeMaster4 = group ProgramRebateTypeMaster4 by ('RebateProgram.Name','InclusionFilters.ValuesMultiValue');\r\nRebateProgramMemberMaster4 = filter RebateProgramMemberMaster4 by 'Account.Name' == \"{{cell(Account_Name_1.selection, 0, \"Account.Name\").asString()}}\";\r\nProg_for_Account = cogroup RebateProgramMemberMaster4 by 'RebateProgram.Name' left , ProgramRebateTypeMaster4 by 'RebateProgram.Name';\r\nProg_for_Account = foreach Prog_for_Account generate RebateProgramMemberMaster4.'RebateProgram.Name' as '#MyPrograms', ProgramRebateTypeMaster4.'InclusionFilters.ValuesMultiValue' as 'ProductId';\r\nProg_for_Account = filter Prog_for_Account by 'ProductId' is not null;\r\nOrders = filter Orders by 'Account.Name' == \"{{cell(Account_Name_1.selection, 0, \"Account.Name\").asString()}}\";\r\nresult = group Orders by 'Product2Id' left, ProductMaster by 'Id' left, ProgramRebateTypeMaster4 by 'InclusionFilters.ValuesMultiValue' left,Prog_for_Account by 'ProductId' ;\r\nresult = foreach result generate ProductMaster.'Id' as 'ProdId',first(ProductMaster.'Name') as 'Product.Name', coalesce(count(ProgramRebateTypeMaster4),0) as '#Programs', coalesce(count(Prog_for_Account),0) as '#MyPrograms', sum(Orders.'TotalPrice') as 'TotalPrice',sum(Orders.'Quantity') as 'Quantity';\r\nresult = filter result by '#MyPrograms' == 0 && '#Programs' > 0;\r\nresult = group result by 'Product.Name';\r\nresult = foreach result generate  'Product.Name' as 'Product.Name',first('ProdId') as 'ProdId',sum('{{column(static_1.selection, [\"Value\"]).asObject()}}') as '{{column(static_1.selection, [\"Display\"]).asObject()}}';\r\nresult = order result by '{{column(static_1.selection, [\"Display\"]).asObject()}}' desc;","receiveFacetSource":{"mode":"exclude","steps":["Consider_To_Enroll_1","all_1"]},"selectMode":"single","start":"[\"SJ1000hp\"]","strings":[],"type":"saql","useGlobal":true,"visualizationParameters":{"parameters":{"autoFitMode":"keepLabels","bins":{"breakpoints":{"high":100,"low":0},"bands":{"high":{"color":"#008000","label":""},"low":{"color":"#B22222","label":""},"medium":{"color":"#ffa500","label":""}}},"legend":{"descOrder":false,"showHeader":true,"show":true,"customSize":"auto","position":"right-top","inside":false},"axisMode":"multi","tooltip":{"content":{"legend":{"showBinLabel":true,"measures":[],"showNullValues":true,"customizeLegend":false,"showPercentage":true,"showDimensions":true,"showMeasures":true,"dimensions":[]}}},"visualizationType":"hbar","title":{"fontSize":14,"subtitleFontSize":11,"label":"","align":"center","subtitleLabel":""},"binValues":false,"trellis":{"flipLabels":false,"showGridLines":true,"size":[100,100],"enable":false,"type":"x","chartsPerLine":4},"showActionMenu":true,"measureAxis2":{"sqrtScale":false,"showTitle":true,"showAxis":true,"title":"","customDomain":{"showDomain":false}},"measureAxis1":{"sqrtScale":false,"showTitle":true,"showAxis":true,"title":"","customDomain":{"showDomain":false}},"valueType":"compactNumber","theme":"wave","compactDecimalDigits":-1,"dimensionAxis":{"showTitle":true,"customSize":"auto","showAxis":true,"title":"","icons":{"useIcons":false,"iconProps":{"fit":"cover","column":"","type":"round"}}},"applyConditionalFormatting":true},"type":"chart"}},"all_1":{"broadcastFacet":true,"groups":[],"label":"all_1","numbers":[],"query":"q = load \"RebateProgramMemberMaster\";\r\n q = filter q by {{cell(Account_Name_1.selection, 0, \"Account.Name\").asEquality(\"Account.Name\")}};\r\nq = filter q by 'RebateProgram.StartDate_sec_epoch' <= {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000; q = filter q by 'RebateProgram.EndDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000;\nq = group q by 'RebateProgram.Name';\nq = foreach q generate 'RebateProgram.Name' as 'RebateProgram.Name', count() as 'count';\nq = limit q 2000;","receiveFacetSource":{"mode":"none","steps":[]},"selectMode":"single","start":"[]","strings":[],"type":"saql","useGlobal":true,"visualizationParameters":{"parameters":{"autoFitMode":"keepLabels","centerText":"","legend":{"descOrder":false,"showHeader":true,"show":false,"customSize":"auto","position":"right-top","inside":false},"showMeasureTitle":true,"tooltip":{"content":{"legend":{"showBinLabel":true,"measures":[],"showNullValues":true,"customizeLegend":false,"showPercentage":true,"showDimensions":true,"showMeasures":true,"dimensions":[]}}},"visualizationType":"pie","title":{"fontSize":14,"subtitleFontSize":11,"label":"","align":"center","subtitleLabel":""},"trellis":{"flipLabels":false,"showGridLines":true,"size":[100,100],"enable":false,"type":"x","chartsPerLine":4},"inner":60,"showActionMenu":true,"centerValueType":"number","valueType":"none","theme":"wave","applyConditionalFormatting":true},"type":"chart"}},"Date_Selector_2":{"broadcastFacet":false,"datasets":[{"name":"RebatePayoutPeriodMaster"}],"isGlobal":false,"query":{"query":"{\"measures\":[[\"count\",\"*\"]],\"groups\":[[\"StartDate_Year\",\"StartDate_Month\",\"StartDate_Day\"]]}","version":-1.0},"receiveFacetSource":{"mode":"all","steps":[]},"selectMode":"single","start":"[[[\"year\",-1],[\"year\",-1]]]","type":"aggregateflex","useGlobal":true,"visualizationParameters":{"parameters":{"autoFitMode":"keepLabels","bins":{"breakpoints":{"high":100,"low":0},"bands":{"high":{"color":"#008000","label":""},"low":{"color":"#B22222","label":""},"medium":{"color":"#ffa500","label":""}}},"legend":{"descOrder":false,"showHeader":true,"show":true,"customSize":"auto","position":"right-top","inside":false},"axisMode":"multi","tooltip":{"content":{"legend":{"showBinLabel":true,"measures":[],"showNullValues":true,"customizeLegend":false,"showPercentage":true,"showDimensions":true,"showMeasures":true,"dimensions":[]}}},"visualizationType":"hbar","title":{"fontSize":14,"subtitleFontSize":11,"label":"","align":"center","subtitleLabel":""},"binValues":false,"trellis":{"flipLabels":false,"showGridLines":true,"size":[100,100],"enable":false,"type":"x","chartsPerLine":4},"columnMap":{"trellis":[],"dimensionAxis":["StartDate_Year~~~StartDate_Month~~~StartDate_Day"],"plots":["count"]},"showActionMenu":true,"measureAxis2":{"sqrtScale":false,"showTitle":true,"showAxis":true,"title":"","customDomain":{"showDomain":false}},"measureAxis1":{"sqrtScale":false,"showTitle":true,"showAxis":true,"title":"","customDomain":{"showDomain":false}},"valueType":"compactNumber","theme":"wave","compactDecimalDigits":-1,"dimensionAxis":{"showTitle":true,"customSize":"auto","showAxis":true,"title":"","icons":{"useIcons":false,"iconProps":{"fit":"cover","column":"","type":"round"}}},"applyConditionalFormatting":true},"type":"chart"}},"Rank_Query":{"broadcastFacet":true,"groups":[],"label":"Rank_Query","numbers":[],"query":"all_payout_sources = load \"ProgramRebateTypePayoutSourceMaster\";\r\nall_payout_sources = filter all_payout_sources by 'RebateType.CalculationBasis' in [\"PayoutAndAccrual\", \"Payout\"];\ncurrent_valid_payout_sources = filter all_payout_sources by 'MemberPayout.PayoutPeriods.StartDate_sec_epoch' <= {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000;\r\ncurrent_valid_payout_sources = filter current_valid_payout_sources by 'MemberPayout.PayoutPeriods.EndDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000;\r\nStart_Current = foreach current_valid_payout_sources generate 'MemberPayout.Member.Account.Name' as 'MemberPayout.Member.Account.Name', {{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000 as 'Start', {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000 as 'End', 'Id' as 'Id', 'MemberPayout.PayoutPeriods.StartDate_sec_epoch' as 'Start Date', 'MemberPayout.PayoutPeriods.EndDate_sec_epoch' as 'End Date', case when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000) then date_to_string(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch'),\"yyyy\") else date_to_string(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000),\"yyyy\") end as 'Date_Year', case when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000) then date_to_string(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch'),\"MM\") else date_to_string(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000),\"MM\") end as 'Date_Month', case when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' >= date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch')))) && {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000 >= date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch'))) then (daysBetween(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch'),month_last_day(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch')))) * 'DailyTotalTransactionAmount' when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000) && {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000 <= date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch'))) then (daysBetween(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch'),toDate({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000))) * 'DailyTotalTransactionAmount' when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < {{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' >= date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000)))) && {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000 >= date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000))) then (daysBetween(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000),month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000)))) * 'DailyTotalTransactionAmount' when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < {{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' <= date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000)))) && {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000 >= 'MemberPayout.PayoutPeriods.EndDate_sec_epoch' then (daysBetween(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000),toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) * 'DailyTotalTransactionAmount' when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < {{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000) && ({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000 <= date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000)))) && {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000 <= 'MemberPayout.PayoutPeriods.EndDate_sec_epoch' then (daysBetween(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000),toDate({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000))) * 'DailyTotalTransactionAmount' else 'AggregateObject.TotalTransactionAmount' end as 'TotalTransactionAmount', case when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' >= date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch')))) && {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000 >= date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch'))) then (daysBetween(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch'),month_last_day(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch')))) * 'DailyFinalRebateAmount' when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000) && {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000 <= date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch'))) then (daysBetween(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch'),toDate({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000))) * 'DailyFinalRebateAmount' when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < {{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' >= date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000)))) && {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000 >= date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000))) then (daysBetween(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000),month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000)))) * 'DailyFinalRebateAmount' when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < {{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' <= date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000)))) && {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000 >= 'MemberPayout.PayoutPeriods.EndDate_sec_epoch' then (daysBetween(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000),toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) * 'DailyFinalRebateAmount' when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < {{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000) && ({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000 <= date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000)))) && {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000 <= 'MemberPayout.PayoutPeriods.EndDate_sec_epoch' then (daysBetween(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000),toDate({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000))) * 'DailyFinalRebateAmount' else 'FinalRebateAmount' end as 'RebateAmount', case when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' >= date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch')))) && {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000 >= date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch'))) then (daysBetween(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch'),month_last_day(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch')))) * 'DailyRebateAmount' when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000) && {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000 <= date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch'))) then (daysBetween(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch'),toDate({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000))) * 'DailyRebateAmount' when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < {{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' >= date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000)))) && {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000 >= date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000))) then (daysBetween(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000),month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000)))) * 'DailyRebateAmount' when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < {{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' <= date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000)))) && {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000 >= 'MemberPayout.PayoutPeriods.EndDate_sec_epoch' then (daysBetween(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000),toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) * 'DailyRebateAmount' when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < {{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000) && ({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000 <= date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000)))) && {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000 <= 'MemberPayout.PayoutPeriods.EndDate_sec_epoch' then (daysBetween(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000),toDate({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000))) * 'DailyRebateAmount' else 'RebateAmount' end as 'RebateBeforeAdjustment', case when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' >= date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch')))) && {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000 >= date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch'))) then (daysBetween(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch'),month_last_day(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch')))) * 'DailyQuantity' when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000) && {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000 <= date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch'))) then (daysBetween(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch'),toDate({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000))) * 'DailyQuantity' when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < {{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' >= date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000)))) && {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000 >= date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000))) then (daysBetween(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000),month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000)))) * 'DailyQuantity' when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < {{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' <= date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000)))) && {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000 >= 'MemberPayout.PayoutPeriods.EndDate_sec_epoch' then (daysBetween(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000),toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) * 'DailyQuantity' when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < {{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000) && ({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000 <= date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000)))) && {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000 <= 'MemberPayout.PayoutPeriods.EndDate_sec_epoch' then (daysBetween(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000),toDate({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000))) * 'DailyQuantity' else 'AggregateObject.TotalQuantity' end as 'TotalQuantity', 'DailyTotalTransactionAmount' as 'DailyTotalTransactionAmount', 'DailyFinalRebateAmount' as 'DailyFinalRebateAmount', 'DailyQuantity' as 'DailyQuantity', 'DailyRebateAmount' as 'DailyRebateAmount';\r\nEnd_Current = foreach current_valid_payout_sources generate  'MemberPayout.Member.Account.Name' as 'MemberPayout.Member.Account.Name',{{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000 as 'Start', {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000 as 'End', 'Id' as 'Id', 'MemberPayout.PayoutPeriods.StartDate_sec_epoch' as 'Start Date', 'MemberPayout.PayoutPeriods.EndDate_sec_epoch' as 'End Date', case when ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' < {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000) then date_to_string(toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'),\"yyyy\") else  date_to_string(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000),\"yyyy\") end as 'Date_Year', case when ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' < {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000) then date_to_string(toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'),\"MM\") else  date_to_string(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000),\"MM\") end as 'Date_Month', case when (('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < (date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) - 2764800)))) + 86400)) && ({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000 < (date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) - 2764800)))) + 86400)) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' <= {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000))  then (daysBetween(toDate((date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) - 2764800)))))),toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) * 'DailyTotalTransactionAmount' when (('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < (date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000))) - 2764800)))) + 86400)) && ({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000 < (date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000))) - 2764800)))) + 86400)) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000)) then (daysBetween(toDate((date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000))) - 2764800)))))),toDate({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000))) * 'DailyTotalTransactionAmount' else 0 end as 'TotalTransactionAmount', case when (('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < (date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) - 2764800)))) + 86400)) && ({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000 < (date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) - 2764800)))) + 86400)) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' <= {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000))  then (daysBetween(toDate((date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) - 2764800)))))),toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) * 'DailyFinalRebateAmount' when (('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < (date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000))) - 2764800)))) + 86400)) && ({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000 < (date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000))) - 2764800)))) + 86400)) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000)) then (daysBetween(toDate((date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000))) - 2764800)))))),toDate({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000))) * 'DailyFinalRebateAmount' else 0 end as 'RebateAmount', case when (('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < (date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) - 2764800)))) + 86400)) && ({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000 < (date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) - 2764800)))) + 86400)) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' <= {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000))  then (daysBetween(toDate((date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) - 2764800)))))),toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) * 'DailyRebateAmount' when (('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < (date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000))) - 2764800)))) + 86400)) && ({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000 < (date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000))) - 2764800)))) + 86400)) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000)) then (daysBetween(toDate((date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000))) - 2764800)))))),toDate({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000))) * 'DailyRebateAmount' else 0 end as 'RebateBeforeAdjustment', case when (('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < (date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) - 2764800)))) + 86400)) && ({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000 < (date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) - 2764800)))) + 86400)) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' <= {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000))  then (daysBetween(toDate((date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) - 2764800)))))),toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) * 'DailyQuantity' when (('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < (date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000))) - 2764800)))) + 86400)) && ({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000 < (date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000))) - 2764800)))) + 86400)) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000)) then (daysBetween(toDate((date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000))) - 2764800)))))),toDate({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000))) * 'DailyQuantity' else 0 end as 'TotalQuantity', 'DailyTotalTransactionAmount' as 'DailyTotalTransactionAmount', 'DailyFinalRebateAmount' as 'DailyFinalRebateAmount', 'DailyQuantity' as 'DailyQuantity', 'DailyRebateAmount' as 'DailyRebateAmount';\r\nDataForFill_Current = union Start_Current, End_Current;\r\nDataForFill_Current = foreach DataForFill_Current generate  'MemberPayout.Member.Account.Name' as 'MemberPayout.Member.Account.Name','Id' as 'Id', 'Date_Year' as 'Date_Year', 'Date_Month' as 'Date_Month','Start' as 'Start', 'End' as 'End', 'Start Date' as 'Start Date', 'End Date' as 'End Date', 'TotalTransactionAmount' as 'TotalTransactionAmount', 'RebateAmount' as 'RebateAmount', 'TotalQuantity' as 'TotalQuantity', 'DailyTotalTransactionAmount' as 'DailyTotalTransactionAmount', 'DailyFinalRebateAmount' as 'DailyFinalRebateAmount', 'DailyQuantity' as 'DailyQuantity', 'DailyRebateAmount' as 'DailyRebateAmount', 'RebateBeforeAdjustment' as 'RebateBeforeAdjustment';\r\nFilledData_Current = fill DataForFill_Current by (dateCols=('Date_Year', 'Date_Month', \"Y-M\"), partition='Id');\r\nFilledData_Current = group FilledData_Current by ('Id', 'Date_Year', 'Date_Month','MemberPayout.Member.Account.Name');\r\nFilledData_Current = foreach FilledData_Current generate 'Id', 'Date_Year', 'Date_Month','MemberPayout.Member.Account.Name', date_to_epoch(toDate('Date_Year'+\"-\"+'Date_Month'+\"-01\",\"yyyy-MM-dd\")) as 'Date', first('Start') as 'Start', min(first('Start')) over ([..0] partition by 'Id' order by ('Date_Year','Date_Month')) as 'StartFilter', first('End') as 'End', min(first('End')) over ([..0] partition by 'Id' order by ('Date_Year','Date_Month')) as 'EndFilter',  min(first('Start Date')) over ([..0] partition by 'Id' order by ('Date_Year','Date_Month')) as 'Start Date', max(first('End Date')) over ([..] partition by 'Id' ) as 'End Date',  sum('TotalTransactionAmount') as 'TotalTransactionAmount', min(first('DailyTotalTransactionAmount'))over ([..0] partition by 'Id' order by ('Date_Year','Date_Month')) as 'DailyTotalTransactionAmount', sum('RebateAmount') as 'RebateAmount', min(first('DailyFinalRebateAmount'))over ([..0] partition by 'Id' order by ('Date_Year','Date_Month')) as 'DailyFinalRebateAmount', sum('RebateBeforeAdjustment') as 'RebateBeforeAdjustment', min(first('DailyRebateAmount'))over ([..0] partition by 'Id' order by ('Date_Year','Date_Month')) as 'DailyRebateAmount', sum('TotalQuantity') as 'TotalQuantity', min(first('DailyQuantity'))over ([..0] partition by 'Id' order by ('Date_Year','Date_Month')) as 'DailyQuantity';\r\nFilledData_Current = filter FilledData_Current by coalesce('Start',0) != 0 || ('Date' > 'StartFilter' && 'Date' > 'Start Date' && 'Date' < 'End Date' && 'Date' < 'EndFilter');\r\nFilledData_Current = foreach FilledData_Current generate 'MemberPayout.Member.Account.Name' as 'MemberPayout.Member.Account.Name','Id', 'Date_Year', 'Date_Month', (case when 'TotalTransactionAmount' is null then month_days(toDate('Date'))*'DailyTotalTransactionAmount' else 'TotalTransactionAmount' end) as 'TotalTransactionAmount', (case when 'RebateAmount' is null then month_days(toDate('Date'))*'DailyFinalRebateAmount' else 'RebateAmount' end) as 'RebateAmount', (case when 'RebateBeforeAdjustment' is null then month_days(toDate('Date'))*'DailyRebateAmount' else 'RebateBeforeAdjustment' end) as 'RebateBeforeAdjustment', (case when 'TotalQuantity' is null then month_days(toDate('Date'))*'DailyQuantity' else 'TotalQuantity' end) as 'TotalQuantity';\r\nprevious_valid_payout_sources = filter all_payout_sources by 'MemberPayout.PayoutPeriods.StartDate_sec_epoch' <= {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000;\r\nprevious_valid_payout_sources = filter previous_valid_payout_sources by 'MemberPayout.PayoutPeriods.EndDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000;\r\nStart_Previous = foreach previous_valid_payout_sources generate  'MemberPayout.Member.Account.Name' as 'MemberPayout.Member.Account.Name',{{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000 as 'Start', {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000 as 'End', 'Id' as 'Id', 'MemberPayout.PayoutPeriods.StartDate_sec_epoch' as 'Start Date', 'MemberPayout.PayoutPeriods.EndDate_sec_epoch' as 'End Date', case when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000) then date_to_string(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch'),\"yyyy\") else date_to_string(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000),\"yyyy\") end as 'Date_Year', case when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000) then date_to_string(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch'),\"MM\") else date_to_string(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000),\"MM\") end as 'Date_Month', case when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' >= date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch')))) && {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000 >= date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch'))) then (daysBetween(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch'),month_last_day(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch')))) * 'DailyTotalTransactionAmount' when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000) && {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000 <= date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch'))) then (daysBetween(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch'),toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000))) * 'DailyTotalTransactionAmount' when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' >= date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000)))) && {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000 >= date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000))) then (daysBetween(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000),month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000)))) * 'DailyTotalTransactionAmount' when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' <= date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000)))) && {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000 >= 'MemberPayout.PayoutPeriods.EndDate_sec_epoch' then (daysBetween(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000),toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) * 'DailyTotalTransactionAmount' when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000) && ({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000 <= date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000)))) && {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000 <= 'MemberPayout.PayoutPeriods.EndDate_sec_epoch' then (daysBetween(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000),toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000))) * 'DailyTotalTransactionAmount' else 'AggregateObject.TotalTransactionAmount' end as 'TotalTransactionAmount', case when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' >= date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch')))) && {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000 >= date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch'))) then (daysBetween(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch'),month_last_day(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch')))) * 'DailyFinalRebateAmount' when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000) && {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000 <= date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch'))) then (daysBetween(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch'),toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000))) * 'DailyFinalRebateAmount' when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' >= date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000)))) && {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000 >= date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000))) then (daysBetween(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000),month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000)))) * 'DailyFinalRebateAmount' when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' <= date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000)))) && {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000 >= 'MemberPayout.PayoutPeriods.EndDate_sec_epoch' then (daysBetween(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000),toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) * 'DailyFinalRebateAmount' when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000) && ({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000 <= date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000)))) && {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000 <= 'MemberPayout.PayoutPeriods.EndDate_sec_epoch' then (daysBetween(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000),toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000))) * 'DailyFinalRebateAmount' else 'FinalRebateAmount' end as 'RebateAmount', case when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' >= date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch')))) && {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000 >= date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch'))) then (daysBetween(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch'),month_last_day(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch')))) * 'DailyFinalRebateAmount' when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000) && {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000 <= date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch'))) then (daysBetween(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch'),toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000))) * 'DailyFinalRebateAmount' when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' >= date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000)))) && {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000 >= date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000))) then (daysBetween(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000),month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000)))) * 'DailyFinalRebateAmount' when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' <= date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000)))) && {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000 >= 'MemberPayout.PayoutPeriods.EndDate_sec_epoch' then (daysBetween(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000),toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) * 'DailyFinalRebateAmount' when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000) && ({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000 <= date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000)))) && {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000 <= 'MemberPayout.PayoutPeriods.EndDate_sec_epoch' then (daysBetween(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000),toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000))) * 'DailyFinalRebateAmount' else 'FinalRebateAmount' end as 'RebateBeforeAdjustment', case when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' >= date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch')))) && {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000 >= date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch'))) then (daysBetween(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch'),month_last_day(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch')))) * 'DailyQuantity' when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000) && {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000 <= date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch'))) then (daysBetween(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch'),toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000))) * 'DailyQuantity' when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' >= date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000)))) && {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000 >= date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000))) then (daysBetween(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000),month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000)))) * 'DailyQuantity' when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' <= date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000)))) && {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000 >= 'MemberPayout.PayoutPeriods.EndDate_sec_epoch' then (daysBetween(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000),toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) * 'DailyQuantity' when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000) && ({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000 <= date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000)))) && {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000 <= 'MemberPayout.PayoutPeriods.EndDate_sec_epoch' then (daysBetween(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000),toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000))) * 'DailyQuantity' else 'AggregateObject.TotalQuantity' end as 'TotalQuantity', 'DailyTotalTransactionAmount' as 'DailyTotalTransactionAmount', 'DailyFinalRebateAmount' as 'DailyFinalRebateAmount', 'DailyQuantity' as 'DailyQuantity', 'DailyRebateAmount' as 'DailyRebateAmount';\r\nEnd_Previous = foreach previous_valid_payout_sources generate  'MemberPayout.Member.Account.Name' as 'MemberPayout.Member.Account.Name',{{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000 as 'Start', {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000 as 'End', 'Id' as 'Id', 'MemberPayout.PayoutPeriods.StartDate_sec_epoch' as 'Start Date', 'MemberPayout.PayoutPeriods.EndDate_sec_epoch' as 'End Date', case when ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' < {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000) then date_to_string(toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'),\"yyyy\") else  date_to_string(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000),\"yyyy\") end as 'Date_Year', case when ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' < {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000) then date_to_string(toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'),\"MM\") else  date_to_string(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000),\"MM\") end as 'Date_Month', case when (('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < (date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) - 2764800)))) + 86400)) && ({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000 < (date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) - 2764800)))) + 86400)) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' <= {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000))  then (daysBetween(toDate((date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) - 2764800)))))),toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) * 'DailyTotalTransactionAmount' when (('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < (date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000))) - 2764800)))) + 86400)) && ({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000 < (date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000))) - 2764800)))) + 86400)) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000)) then (daysBetween(toDate((date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000))) - 2764800)))))),toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000))) * 'DailyTotalTransactionAmount' else 0 end as 'TotalTransactionAmount', case when (('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < (date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) - 2764800)))) + 86400)) && ({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000 < (date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) - 2764800)))) + 86400)) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' <= {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000))  then (daysBetween(toDate((date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) - 2764800)))))),toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) * 'DailyFinalRebateAmount' when (('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < (date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000))) - 2764800)))) + 86400)) && ({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000 < (date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000))) - 2764800)))) + 86400)) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000)) then (daysBetween(toDate((date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000))) - 2764800)))))),toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000))) * 'DailyFinalRebateAmount' else 0 end as 'RebateAmount', case when (('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < (date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) - 2764800)))) + 86400)) && ({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000 < (date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) - 2764800)))) + 86400)) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' <= {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000))  then (daysBetween(toDate((date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) - 2764800)))))),toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) * 'DailyRebateAmount' when (('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < (date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000))) - 2764800)))) + 86400)) && ({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000 < (date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000))) - 2764800)))) + 86400)) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000)) then (daysBetween(toDate((date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000))) - 2764800)))))),toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000))) * 'DailyRebateAmount' else 0 end as 'RebateBeforeAdjustment', case when (('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < (date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) - 2764800)))) + 86400)) && ({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000 < (date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) - 2764800)))) + 86400)) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' <= {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000))  then (daysBetween(toDate((date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) - 2764800)))))),toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) * 'DailyQuantity' when (('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < (date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000))) - 2764800)))) + 86400)) && ({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000 < (date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000))) - 2764800)))) + 86400)) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000)) then (daysBetween(toDate((date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000))) - 2764800)))))),toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000))) * 'DailyQuantity' else 0 end as 'TotalQuantity', 'DailyTotalTransactionAmount' as 'DailyTotalTransactionAmount', 'DailyFinalRebateAmount' as 'DailyFinalRebateAmount', 'DailyQuantity' as 'DailyQuantity', 'DailyRebateAmount' as 'DailyRebateAmount';\r\nDataForFill_Previous = union Start_Previous, End_Previous;\r\nDataForFill_Previous = foreach DataForFill_Previous generate  'MemberPayout.Member.Account.Name' as 'MemberPayout.Member.Account.Name','Id' as 'Id', 'Date_Year' as 'Date_Year', 'Date_Month' as 'Date_Month','Start' as 'Start', 'End' as 'End', 'Start Date' as 'Start Date', 'End Date' as 'End Date', 'TotalTransactionAmount' as 'TotalTransactionAmount', 'RebateAmount' as 'RebateAmount', 'TotalQuantity' as 'TotalQuantity', 'DailyTotalTransactionAmount' as 'DailyTotalTransactionAmount', 'DailyFinalRebateAmount' as 'DailyFinalRebateAmount', 'DailyQuantity' as 'DailyQuantity', 'DailyRebateAmount' as 'DailyRebateAmount', 'RebateBeforeAdjustment' as 'RebateBeforeAdjustment';\r\nFilledData_Previous = fill DataForFill_Previous by (dateCols=('Date_Year', 'Date_Month', \"Y-M\"), partition='Id');\r\nFilledData_Previous = group FilledData_Previous by ('Id', 'Date_Year', 'Date_Month','MemberPayout.Member.Account.Name');\r\nFilledData_Previous = foreach FilledData_Previous generate 'MemberPayout.Member.Account.Name','Id', 'Date_Year', 'Date_Month', date_to_epoch(toDate('Date_Year'+\"-\"+'Date_Month'+\"-01\",\"yyyy-MM-dd\")) as 'Date', first('Start') as 'Start', min(first('Start')) over ([..0] partition by 'Id' order by ('Date_Year','Date_Month')) as 'StartFilter', first('End') as 'End', min(first('End')) over ([..0] partition by 'Id' order by ('Date_Year','Date_Month')) as 'EndFilter',  min(first('Start Date')) over ([..0] partition by 'Id' order by ('Date_Year','Date_Month')) as 'Start Date', max(first('End Date')) over ([..] partition by 'Id' ) as 'End Date',  sum('TotalTransactionAmount') as 'TotalTransactionAmount', min(first('DailyTotalTransactionAmount'))over ([..0] partition by 'Id' order by ('Date_Year','Date_Month')) as 'DailyTotalTransactionAmount', sum('RebateAmount') as 'RebateAmount', min(first('DailyFinalRebateAmount'))over ([..0] partition by 'Id' order by ('Date_Year','Date_Month')) as 'DailyFinalRebateAmount', sum('RebateBeforeAdjustment') as 'RebateBeforeAdjustment', min(first('DailyRebateAmount'))over ([..0] partition by 'Id' order by ('Date_Year','Date_Month')) as 'DailyRebateAmount', sum('TotalQuantity') as 'TotalQuantity', min(first('DailyQuantity'))over ([..0] partition by 'Id' order by ('Date_Year','Date_Month')) as 'DailyQuantity';\r\nFilledData_Previous = filter FilledData_Previous by coalesce('Start',0) != 0 || ('Date' > 'StartFilter' && 'Date' > 'Start Date' && 'Date' < 'End Date' && 'Date' < 'EndFilter');\r\nFilledData_Previous = foreach FilledData_Previous generate 'MemberPayout.Member.Account.Name','Id', 'Date_Year', 'Date_Month', (case when 'TotalTransactionAmount' is null then month_days(toDate('Date'))*'DailyTotalTransactionAmount' else 'TotalTransactionAmount' end) as 'TotalTransactionAmount', (case when 'RebateAmount' is null then month_days(toDate('Date'))*'DailyFinalRebateAmount' else 'RebateAmount' end) as 'RebateAmount', (case when 'RebateBeforeAdjustment' is null then month_days(toDate('Date'))*'DailyRebateAmount' else 'RebateBeforeAdjustment' end) as 'RebateBeforeAdjustment', (case when 'TotalQuantity' is null then month_days(toDate('Date'))*'DailyQuantity' else 'TotalQuantity' end) as 'TotalQuantity';\r\nresult = group FilledData_Current by 'MemberPayout.Member.Account.Name' full , FilledData_Previous by 'MemberPayout.Member.Account.Name';\r\n\r\nresult = foreach result generate FilledData_Current.'MemberPayout.Member.Account.Name' as 'MemberPayout.Member.Account.Name',sum(FilledData_Current.'RebateAmount') as 'sum_RebateAmount',\r\nsum(FilledData_Current.'TotalTransactionAmount') as 'Sum_Trans', rank() over ([..] partition by all order by sum(FilledData_Current.'RebateAmount') desc ) as 'Rank_Rebate_Current',\r\nrank() over ([..] partition by all order by sum(FilledData_Current.'TotalTransactionAmount') desc ) as 'Rank_Trans_Current',\r\n rank() over ([..] partition by all order by sum(FilledData_Previous.'RebateAmount') desc ) as 'Rank_Rebate_Previous',\r\n rank() over ([..] partition by all order by sum(FilledData_Previous.'TotalTransactionAmount') desc ) as 'Rank_Trans_Previous';\r\n\r\nresult = foreach result generate 'MemberPayout.Member.Account.Name' as 'MemberPayout.Member.Account.Name',sum('sum_RebateAmount') as 'sum_RebateAmount',\r\nsum('Sum_Trans') as 'Sum_Trans', 'Rank_Rebate_Current' as 'Rank_Rebate_Current', 'Rank_Trans_Current' as 'Rank_Trans_Current', 'Rank_Rebate_Previous' as  'Rank_Rebate_Previous',\r\n'Rank_Trans_Previous' as 'Rank_Trans_Previous',\r\n(case when 'Rank_Rebate_Current' <= 'Rank_Rebate_Previous' || 'Rank_Rebate_Previous' is null then \"↑\" else \"↓\" end ) as 'RankRebateArrow', (case when 'Rank_Trans_Current' <= 'Rank_Trans_Previous' || 'Rank_Trans_Previous' is null then \"↑\" else \"↓\" end ) as 'RankTransArrow';\r\nresult =  filter result by {{cell(Account_Name_1.selection, 0, \"Account.Name\").asEquality(\"MemberPayout.Member.Account.Name\")}};\r\nresult = foreach result generate 'MemberPayout.Member.Account.Name' as 'MemberPayout.Member.Account.Name',sum('sum_RebateAmount') as 'sum_RebateAmount',sum('Sum_Trans') as 'Sum_Trans','Rank_Rebate_Current' as 'Rank_Rebate_Current',  'Rank_Trans_Current' as 'Rank_Trans_Current', 'Rank_Rebate_Previous' as  'Rank_Rebate_Previous',\r\n'Rank_Trans_Previous' as 'Rank_Trans_Previous','RankRebateArrow' as 'RankRebateArrow', 'RankTransArrow' as 'RankTransArrow';","receiveFacetSource":{"mode":"exclude","steps":["Consider_To_Enroll_1"]},"selectMode":"single","start":"[]","strings":[],"type":"saql","useGlobal":true,"visualizationParameters":{"parameters":{"autoFitMode":"keepLabels","bins":{"breakpoints":{"high":100,"low":0},"bands":{"high":{"color":"#008000","label":""},"low":{"color":"#B22222","label":""},"medium":{"color":"#ffa500","label":""}}},"legend":{"descOrder":false,"showHeader":true,"show":true,"customSize":"auto","position":"right-top","inside":false},"axisMode":"multi","tooltip":{"content":{"legend":{"showBinLabel":true,"measures":[],"showNullValues":true,"customizeLegend":false,"showPercentage":true,"showDimensions":true,"showMeasures":true,"dimensions":[]}}},"visualizationType":"hbar","title":{"fontSize":14,"subtitleFontSize":11,"label":"","align":"center","subtitleLabel":""},"binValues":false,"trellis":{"flipLabels":false,"showGridLines":true,"size":[100,100],"enable":false,"type":"x","chartsPerLine":4},"showActionMenu":true,"measureAxis2":{"sqrtScale":false,"showTitle":true,"showAxis":true,"title":"","customDomain":{"showDomain":false}},"measureAxis1":{"sqrtScale":false,"showTitle":true,"showAxis":true,"title":"","customDomain":{"showDomain":false}},"valueType":"compactNumber","theme":"wave","compactDecimalDigits":-1,"dimensionAxis":{"showTitle":true,"customSize":"auto","showAxis":true,"title":"","icons":{"useIcons":false,"iconProps":{"fit":"cover","column":"","type":"round"}}},"applyConditionalFormatting":true},"type":"chart"}},"Date_Selector_1":{"broadcastFacet":false,"datasets":[{"name":"RebatePayoutPeriodMaster"}],"isGlobal":false,"query":{"query":"{\"measures\":[[\"count\",\"*\"]],\"groups\":[[\"StartDate_Year\",\"StartDate_Month\",\"StartDate_Day\"]]}","version":-1.0},"receiveFacetSource":{"mode":"all","steps":[]},"selectMode":"single","start":"[[[\"year\",0],[\"year\",0]]]","type":"aggregateflex","useGlobal":true,"visualizationParameters":{"parameters":{"autoFitMode":"keepLabels","bins":{"breakpoints":{"high":100,"low":0},"bands":{"high":{"color":"#008000","label":""},"low":{"color":"#B22222","label":""},"medium":{"color":"#ffa500","label":""}}},"legend":{"descOrder":false,"showHeader":true,"show":true,"customSize":"auto","position":"right-top","inside":false},"axisMode":"multi","tooltip":{"content":{"legend":{"showBinLabel":true,"measures":[],"showNullValues":true,"customizeLegend":false,"showPercentage":true,"showDimensions":true,"showMeasures":true,"dimensions":[]}}},"visualizationType":"hbar","title":{"fontSize":14,"subtitleFontSize":11,"label":"","align":"center","subtitleLabel":""},"binValues":false,"trellis":{"flipLabels":false,"showGridLines":true,"size":[100,100],"enable":false,"type":"x","chartsPerLine":4},"columnMap":{"trellis":[],"dimensionAxis":["StartDate_Year~~~StartDate_Month~~~StartDate_Day"],"plots":["count"]},"showActionMenu":true,"measureAxis2":{"sqrtScale":false,"showTitle":true,"showAxis":true,"title":"","customDomain":{"showDomain":false}},"measureAxis1":{"sqrtScale":false,"showTitle":true,"showAxis":true,"title":"","customDomain":{"showDomain":false}},"valueType":"compactNumber","theme":"wave","compactDecimalDigits":-1,"dimensionAxis":{"showTitle":true,"customSize":"auto","showAxis":true,"title":"","icons":{"useIcons":false,"iconProps":{"fit":"cover","column":"","type":"round"}}},"applyConditionalFormatting":true},"type":"chart"}},"lens_1":{"broadcastFacet":false,"groups":[],"numbers":[],"query":"all_payout_sources = load \"ProgramRebateTypePayoutSourceMaster\";\nall_payout_sources = filter all_payout_sources by 'RebateType.CalculationBasis' in [\"PayoutAndAccrual\", \"Payout\"];\nall_payout_sources = filter all_payout_sources by {{column(Account_Name_1.selection, [\"Account.Name\"]).asEquality(\"MemberPayout.Member.Account.Name\")}}; current_valid_payout_sources = filter all_payout_sources by 'MemberPayout.PayoutPeriods.StartDate_sec_epoch' <= {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000; current_valid_payout_sources = filter current_valid_payout_sources by 'MemberPayout.PayoutPeriods.EndDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000; Start_Current = foreach current_valid_payout_sources generate {{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000 as 'Start', {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000 as 'End', 'MemberPayout.PayoutPeriods.RebateProgram.Name' as 'Id', 'MemberPayout.PayoutPeriods.StartDate_sec_epoch' as 'Start Date', 'MemberPayout.PayoutPeriods.EndDate_sec_epoch' as 'End Date', case when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000) then date_to_string(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch'),\"yyyy\") else date_to_string(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000),\"yyyy\") end as 'Date_Year', case when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000) then date_to_string(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch'),\"MM\") else date_to_string(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000),\"MM\") end as 'Date_Month', 1 as 'counter'; Start_Current = order Start_Current by ('Id' asc, 'Date_Year' asc, 'Date_Month' asc); Start_Current = group Start_Current by ('Id'); Start_Current = foreach Start_Current generate 'Id' as 'Id', first('Date_Year') as 'Date_Year', first('Date_Month') as 'Date_Month', first('Start') as 'Start', first('End') as 'End', first('Start Date') as 'Start Date', first('End Date') as 'End Date', sum(first('counter')) over ([..0] partition by all order by ('Id')) as 'counter'; End_Current = foreach current_valid_payout_sources generate {{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000 as 'Start', {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000 as 'End', 'MemberPayout.PayoutPeriods.RebateProgram.Name' as 'Id', 'MemberPayout.PayoutPeriods.StartDate_sec_epoch' as 'Start Date', 'MemberPayout.PayoutPeriods.EndDate_sec_epoch' as 'End Date', case when ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' < {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000) then date_to_string(toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'),\"yyyy\") else  date_to_string(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000),\"yyyy\") end as 'Date_Year', case when ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' < {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000) then date_to_string(toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'),\"MM\") else  date_to_string(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000),\"MM\") end as 'Date_Month', 0 as 'counter'; End_Current = order End_Current by ('Id' asc, 'Date_Year' desc, 'Date_Month' desc); End_Current = group End_Current by ('Id'); End_Current = foreach End_Current generate 'Id' as 'Id', first('Date_Year') as 'Date_Year', first('Date_Month') as 'Date_Month', first('Start') as 'Start', first('End') as 'End', first('Start Date') as 'Start Date', first('End Date') as 'End Date', 0 as 'counter';DataForFill_Current = union Start_Current, End_Current; DataForFill_Current = foreach DataForFill_Current generate 'Id' as 'Id', 'Date_Year' as 'Date_Year', 'Date_Month' as 'Date_Month','Start' as 'Start', 'End' as 'End', 'Start Date' as 'Start Date', 'End Date' as 'End Date', 'counter' as 'counter'; FilledData_Current = fill DataForFill_Current by (dateCols=('Date_Year', 'Date_Month', \"Y-M\"), partition='Id'); FilledData_Current = group FilledData_Current by ('Id', 'Date_Year', 'Date_Month'); FilledData_Current = foreach FilledData_Current generate 'Id', 'Date_Year', 'Date_Month', date_to_epoch(toDate('Date_Year'+\"-\"+'Date_Month'+\"-01\",\"yyyy-MM-dd\")) as 'Date', first('Start') as 'Start', min(first('Start')) over ([..0] partition by 'Id' order by ('Date_Year','Date_Month')) as 'StartFilter', first('End') as 'End', min(first('End')) over ([..0] partition by 'Id' order by ('Date_Year','Date_Month')) as 'EndFilter',  min(first('Start Date')) over ([..0] partition by 'Id' order by ('Date_Year','Date_Month')) as 'Start Date', max(first('End Date')) over ([..] partition by 'Id' ) as 'End Date', max(first('counter'))over ([..0] partition by 'Id' order by ('Date_Year','Date_Month')) as 'counter'; FilledData_Current = filter FilledData_Current by coalesce('Start',0) != 0 || ('Date' > 'StartFilter' && 'Date' > 'Start Date' && 'Date' < 'End Date' && 'Date' < 'EndFilter'); FilledData_Current = foreach FilledData_Current generate 'Id' as 'MemberPayout.PayoutPeriods.RebateProgram.Name', 'Date_Year', 'Date_Month', 'counter' as counter; result = group FilledData_Current by ('Date_Year', 'Date_Month', 'MemberPayout.PayoutPeriods.RebateProgram.Name'); result = foreach result generate 'Date_Year'+\"~~~\"+'Date_Month' as 'CreatedDate_Year~~~CreatedDate_Month', 'MemberPayout.PayoutPeriods.RebateProgram.Name', sum('counter') as 'counter';","receiveFacetSource":{"mode":"exclude","steps":[]},"selectMode":"none","start":"[]","strings":[],"type":"saql","useGlobal":true,"visualizationParameters":{"parameters":{"autoFitMode":"keepLabels","bins":{"breakpoints":{"high":100,"low":0},"bands":{"high":{"color":"#008000","label":""},"low":{"color":"#B22222","label":""},"medium":{"color":"#ffa500","label":""}}},"legend":{"descOrder":false,"showHeader":true,"show":true,"customSize":"auto","position":"right-top","inside":false},"axisMode":"multi","tooltip":{"content":{"legend":{"showBinLabel":true,"measures":[],"showNullValues":true,"customizeLegend":false,"showPercentage":true,"showDimensions":true,"showMeasures":true,"dimensions":[]}}},"visualizationType":"hbar","title":{"fontSize":14,"subtitleFontSize":11,"label":"","align":"center","subtitleLabel":""},"binValues":false,"trellis":{"flipLabels":false,"showGridLines":true,"size":[100,100],"enable":false,"type":"x","chartsPerLine":4},"showActionMenu":true,"measureAxis2":{"sqrtScale":false,"showTitle":true,"showAxis":true,"title":"","customDomain":{"showDomain":false}},"measureAxis1":{"sqrtScale":false,"showTitle":true,"showAxis":true,"title":"","customDomain":{"showDomain":false}},"valueType":"compactNumber","theme":"wave","compactDecimalDigits":-1,"dimensionAxis":{"showTitle":true,"customSize":"auto","showAxis":true,"title":"","icons":{"useIcons":false,"iconProps":{"fit":"cover","column":"","type":"round"}}},"applyConditionalFormatting":true},"type":"chart"}},"lens_2":{"broadcastFacet":true,"groups":[],"numbers":[],"query":"all_benefit_types = load \"ProgramRebateTypeBenefitMaster\";\r\nall_benefit_types = filter all_benefit_types by 'RebateType.CalculationBasis' in [\"PayoutAndAccrual\", \"Payout\"];\nProgramRebateTypeMaster4 = load \"ProgramRebateTypeMaster\";\r\nProgramRebateTypeMaster4 = filter ProgramRebateTypeMaster4 by 'CalculationBasis' in [\"PayoutAndAccrual\", \"Payout\"];\nProgramRebateTypeMaster4 = filter ProgramRebateTypeMaster4 by 'RebateProgram.Name' in  [\"{{coalesce(cell(Consider_To_Enroll_1.selection, 0, \"RebateProgram.Name\"),cell(Consider_To_Enroll_1.result, 0, \"RebateProgram.Name\")).asObject()}}\"];\r\nProgramRebateTypeMaster4 = group ProgramRebateTypeMaster4  by ('Id', 'InclusionFilters.ValuesMultiValue','RebateProgram.Name');\r\nall_benefit_types = filter all_benefit_types by 'RebateType.RebateProgram.Name' in [\"{{coalesce(cell(Consider_To_Enroll_1.selection, 0, \"RebateProgram.Name\"),cell(Consider_To_Enroll_1.result, 0, \"RebateProgram.Name\")).asObject()}}\"];\r\nall_benefit_types = foreach all_benefit_types generate 'ProgramRebateTypeId' as 'ProgramRebateTypeId','ProductId' as 'ProductId','RebateType.RebateProgram.Name','Id' as 'Id', 'Name' as 'Name', number_to_string('MinimumQualifyingValue',\"#.0#\") as 'MinimumQualifyingValue_str', 'MinimumQualifyingValue', number_to_string('MaximumQualifyingValue',\"#.0#\") as 'MaximumQualifyingValue_str', 'MaximumQualifyingValue', 'BenefitValue', 'RebateType.RebateMeasureType';\r\nall_benefit_types = foreach all_benefit_types generate 'ProgramRebateTypeId' as 'ProgramRebateTypeId','ProductId' as 'ProductId','RebateType.RebateProgram.Name','Id' as 'Id', 'Name' as 'Name', 'MaximumQualifyingValue', case when len('MaximumQualifyingValue_str') > 5 then (number_to_string('MaximumQualifyingValue'/1000,\"#.0#\")+\"K\") else 'MaximumQualifyingValue_str' end as 'MaximumQualifyingValue_str', 'MinimumQualifyingValue', case when len('MinimumQualifyingValue_str') > 5 then (number_to_string('MinimumQualifyingValue'/1000,\"#.0#\")+\"K\") else 'MinimumQualifyingValue_str' end as 'MinimumQualifyingValue_str', 'BenefitValue', 'RebateType.RebateMeasureType', case when 'RebateType.RebateMeasureType'==\"PercentageOfRevenue\" then \"%\" when 'RebateType.RebateMeasureType'==\"Custom\" then \"no units\" else \"$\" end as 'BenefitUnit';\r\nall_benefit_types = foreach all_benefit_types generate 'ProgramRebateTypeId' as 'ProgramRebateTypeId','ProductId' as 'ProductId','RebateType.RebateProgram.Name', 'Id' as 'Id', 'Name' as 'Name', 'MinimumQualifyingValue_str'+\" - \"+'MaximumQualifyingValue_str' as 'Tiers', 'BenefitValue', 'BenefitUnit','MinimumQualifyingValue';\r\nresult = foreach all_benefit_types generate 'ProgramRebateTypeId' as 'ProgramRebateTypeId','ProductId' as 'ProductId','RebateType.RebateProgram.Name' as 'RebateType.RebateProgram.Name', 'Id' as 'ProgramRebateTypeBenefitId', first(all_benefit_types.'Tiers') as 'Tiers', first(all_benefit_types.'BenefitUnit') as 'BenefitUnit', case when first(all_benefit_types.'BenefitUnit') == \"%\" then \"%\" else null end as 'BenefitUnit_suffix', case when first(all_benefit_types.'BenefitUnit') == \"$\" then \"$\" else null end as 'BenefitUnit_prefix',\r\ncoalesce(sum(all_benefit_types.'BenefitValue'),0) as 'Benefit Value','MinimumQualifyingValue';\r\nresult = group result by ('ProgramRebateTypeId','ProductId' ,'RebateType.RebateProgram.Name','ProgramRebateTypeBenefitId','Tiers');\r\n--result = foreach result generate 'ProgramRebateTypeId' as 'ProgramRebateTypeId','ProductId' as 'ProductId', 'Tiers' as 'Tiers',sum('Benefit Value') as 'Benefit Multiplier';\r\nresult1 = cogroup result by 'ProgramRebateTypeId' left , ProgramRebateTypeMaster4 by 'Id';\r\nresult1 = foreach result1 generate ProgramRebateTypeMaster4.'InclusionFilters.ValuesMultiValue' as 'InclusionFilters.ValuesMultiValue',  result.'ProductId' as 'ProductId', ProgramRebateTypeMaster4.'RebateProgram.Name' as 'RebateProgram.Name', result.'RebateType.RebateProgram.Name' as 'RebateType.RebateProgram.Name' ,result.'ProgramRebateTypeBenefitId' as 'ProgramRebateTypeBenefitId' , result.'Tiers' as 'Tiers', sum(result.'Benefit Value') as 'Benefit Multiplier';\r\nresult1 = filter result1 by  'InclusionFilters.ValuesMultiValue' in [\"{{coalesce(cell(Top_Product_outside__1.selection, 0, \"ProdId\"),cell(Top_Product_outside__1.result, 0, \"ProdId\"),\"null\").asObject()}}\"] && ( 'ProductId' in [\"null\"] || 'ProductId' in [\"{{coalesce(cell(Top_Product_outside__1.selection, 0, \"ProdId\"),cell(Top_Product_outside__1.result, 0, \"ProdId\"),\"null\").asObject()}}\"]);\r\nresult1 = foreach result1 generate 'Tiers' as 'Tiers',sum('Benefit Multiplier') as 'Benefit Multiplier';","receiveFacetSource":{"mode":"exclude","steps":["Consider_To_Enroll_1"]},"selectMode":"single","start":"[]","strings":[],"type":"saql","useGlobal":true,"visualizationParameters":{"parameters":{"autoFitMode":"keepLabels","bins":{"breakpoints":{"high":100,"low":0},"bands":{"high":{"color":"#008000","label":""},"low":{"color":"#B22222","label":""},"medium":{"color":"#ffa500","label":""}}},"legend":{"descOrder":false,"showHeader":true,"show":true,"customSize":"auto","position":"right-top","inside":false},"axisMode":"multi","tooltip":{"content":{"legend":{"showBinLabel":true,"measures":[],"showNullValues":true,"customizeLegend":false,"showPercentage":true,"showDimensions":true,"showMeasures":true,"dimensions":[]}}},"visualizationType":"hbar","title":{"fontSize":14,"subtitleFontSize":11,"label":"","align":"center","subtitleLabel":""},"binValues":false,"trellis":{"flipLabels":false,"showGridLines":true,"size":[100,100],"enable":false,"type":"x","chartsPerLine":4},"showActionMenu":true,"measureAxis2":{"sqrtScale":false,"showTitle":true,"showAxis":true,"title":"","customDomain":{"showDomain":false}},"measureAxis1":{"sqrtScale":false,"showTitle":true,"showAxis":true,"title":"","customDomain":{"showDomain":false}},"valueType":"compactNumber","theme":"wave","compactDecimalDigits":-1,"dimensionAxis":{"showTitle":true,"customSize":"auto","showAxis":true,"title":"","icons":{"useIcons":false,"iconProps":{"fit":"cover","column":"","type":"round"}}},"applyConditionalFormatting":true},"type":"chart"}}},"widgetStyle":{"backgroundColor":"#FFFFFF","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1},"widgets":{"text_18":{"parameters":{"content":{"richTextContent":[{"attributes":{"size":"16px","color":"#091A3E","align":"left"},"insert":""}]},"interactions":[],"showActionMenu":true},"type":"text"},"text_17":{"parameters":{"content":{"richTextContent":[{"attributes":{"size":"16px","color":"#FFFFFF","align":"left"},"insert":"{{cell(Rank_Query.result, 0, \"RankTransArrow\").asString()}}"}]},"interactions":[],"showActionMenu":true},"type":"text"},"text_19":{"parameters":{"content":{"richTextContent":[{"attributes":{"size":"16px","color":"#091A3E","align":"left"},"insert":""}]},"interactions":[],"showActionMenu":true},"type":"text"},"text_13":{"parameters":{"content":{"richTextContent":[{"attributes":{"size":"16px","color":"#FFFFFF","align":"left"},"insert":"{{cell(Rank_Query.result, 0, \"RankRebateArrow\").asString()}}"}]},"interactions":[],"showActionMenu":true},"type":"text"},"text_16":{"parameters":{"content":{"richTextContent":[{"attributes":{"size":"16px","color":"#091A3E","align":"left"},"insert":"Transactions"}]},"interactions":[],"showActionMenu":true},"type":"text"},"text_15":{"parameters":{"content":{"richTextContent":[{"attributes":{"size":"16px","color":"#091A3E","align":"left"},"insert":"Payouts"}]},"interactions":[],"showActionMenu":true},"type":"text"},"text_10":{"parameters":{"content":{"richTextContent":[{"attributes":{"size":"12px","color":"#091A3E","align":"left"},"insert":"Transactions"}]},"interactions":[],"showActionMenu":true},"type":"text"},"text_12":{"parameters":{"content":{"richTextContent":[{"attributes":{"size":"12px","color":"#091A3E","align":"left"},"insert":"Payout to Revenue"}]},"interactions":[],"showActionMenu":true},"type":"text"},"text_11":{"parameters":{"content":{"richTextContent":[{"attributes":{"size":"12px","color":"#091A3E","align":"left"},"insert":"Quantity"}]},"interactions":[],"showActionMenu":true},"type":"text"},"container_1":{"parameters":{"alignmentX":"left","alignmentY":"top","fit":"original","interactions":[]},"type":"container"},"container_2":{"parameters":{"alignmentX":"left","alignmentY":"top","fit":"original","interactions":[]},"type":"container"},"container_3":{"parameters":{"alignmentX":"left","alignmentY":"top","fit":"original","interactions":[]},"type":"container"},"container_4":{"parameters":{"alignmentX":"left","alignmentY":"top","fit":"original","interactions":[]},"type":"container"},"container_5":{"parameters":{"alignmentX":"left","alignmentY":"top","fit":"original","interactions":[]},"type":"container"},"text_3":{"parameters":{"content":{"richTextContent":[{"attributes":{"size":"12px","color":"{{cell(Revenue_Payout_Quant_1.result, 0, \"ApprovedColor\").asObject()}}","align":"left"},"insert":"{{coalesce(cell(Revenue_Payout_Quant_1.result, 0, \"ApprovedTDDelta\"),\"-\").asObject()}}%\r {{cell(Revenue_Payout_Quant_1.result, 0, \"ApproveArrow\").asObject()}}"}]},"interactions":[],"showActionMenu":true},"type":"text"},"chart_6":{"parameters":{"autoFitMode":"none","bins":{"breakpoints":{"high":100,"low":0},"bands":{"high":{"color":"#008000","label":""},"low":{"color":"#B22222","label":""},"medium":{"color":"#ffa500","label":""}}},"legend":{"descOrder":false,"showHeader":true,"show":false,"customSize":"auto","position":"right-top","inside":false},"axisMode":"multi","tooltip":{"content":{"legend":{"showBinLabel":true,"measures":[],"showNullValues":true,"customizeLegend":false,"showPercentage":true,"showDimensions":true,"showMeasures":true,"dimensions":[]}}},"visualizationType":"hbar","exploreLink":true,"title":{"fontSize":14,"subtitleFontSize":11,"label":"High-Performing Products Without Incentives","align":"center","subtitleLabel":""},"binValues":false,"trellis":{"flipLabels":false,"showGridLines":true,"size":[100,100],"enable":false,"type":"x","parameters":{},"chartsPerLine":4},"showActionMenu":true,"measureAxis2":{"sqrtScale":false,"showTitle":true,"showAxis":true,"title":"","customDomain":{"showDomain":false}},"measureAxis1":{"sqrtScale":false,"showTitle":true,"showAxis":true,"title":"","customDomain":{"showDomain":false}},"valueType":"compactNumber","theme":"light","step":"Top_Product_outside__1","compactDecimalDigits":-1,"dimensionAxis":{"showTitle":false,"customSize":"auto","showAxis":true,"title":"","icons":{"useIcons":false,"iconProps":{"fit":"cover","column":"","type":"round","parameters":{}}}},"applyConditionalFormatting":true},"type":"chart"},"text_2":{"parameters":{"content":{"richTextContent":[{"attributes":{"size":"12px","color":"{{cell(Revenue_Payout_Quant_1.result, 0, \"UnderReviewColor\").asObject()}}","align":"left"},"insert":"{{coalesce(cell(Revenue_Payout_Quant_1.result, 0, \"UnderReviewDelta\"),\"-\").asObject()}}%\r {{cell(Revenue_Payout_Quant_1.result, 0, \"UnderReviewArrow\").asObject()}}"}]},"interactions":[],"showActionMenu":true},"type":"text"},"text_5":{"parameters":{"content":{"richTextContent":[{"attributes":{"size":"12px","color":"{{cell(Revenue_Payout_Quant_1.result, 0, \"QuantityColor\").asObject()}}","align":"left"},"insert":"{{coalesce(cell(Revenue_Payout_Quant_1.result, 0, \"QuantityDelta\"),\"-\").asObject()}}%\r{{cell(Revenue_Payout_Quant_1.result, 0, \"QuantityArrow\").asObject()}}"}]},"interactions":[],"showActionMenu":true},"type":"text"},"chart_8":{"parameters":{"autoFitMode":"none","bins":{"breakpoints":{"high":100,"low":0},"bands":{"high":{"color":"#008000","label":""},"low":{"color":"#B22222","label":""},"medium":{"color":"#ffa500","label":""}}},"legend":{"descOrder":false,"showHeader":true,"show":false,"customSize":"auto","position":"right-top","inside":false},"axisMode":"multi","tooltip":{"content":{"legend":{"showBinLabel":true,"measures":[],"showNullValues":true,"customizeLegend":false,"showPercentage":true,"showDimensions":true,"showMeasures":true,"dimensions":[]}}},"visualizationType":"hbar","exploreLink":true,"title":{"fontSize":14,"subtitleFontSize":11,"label":"Benefits by Tier for {{cell(Consider_To_Enroll_1.result, 0, \"RebateProgram.Name\").asString()}}","align":"center","subtitleLabel":""},"binValues":false,"trellis":{"flipLabels":false,"showGridLines":true,"size":[100,100],"enable":false,"type":"x","parameters":{},"chartsPerLine":4},"showActionMenu":true,"measureAxis2":{"sqrtScale":false,"showTitle":true,"showAxis":true,"title":"","customDomain":{"showDomain":false}},"measureAxis1":{"sqrtScale":false,"showTitle":true,"showAxis":true,"title":"","customDomain":{"showDomain":false}},"valueType":"compactNumber","theme":"light","step":"lens_2","compactDecimalDigits":-1,"dimensionAxis":{"showTitle":true,"customSize":"auto","showAxis":true,"title":"","icons":{"useIcons":false,"iconProps":{"fit":"cover","column":"","type":"round","parameters":{}}}},"applyConditionalFormatting":true},"type":"chart"},"text_4":{"parameters":{"content":{"richTextContent":[{"attributes":{"size":"12px","color":"{{cell(Revenue_Payout_Quant_1.result, 0, \"TransactionColor\").asObject()}}","align":"left"},"insert":"{{coalesce(cell(Revenue_Payout_Quant_1.result, 0, \"TransactionDelta\"),\"-\").asObject()}}%\r {{cell(Revenue_Payout_Quant_1.result, 0, \"TransactionArrow\").asObject()}}"}]},"interactions":[],"showActionMenu":true},"type":"text"},"chart_7":{"parameters":{"autoFitMode":"none","bins":{"breakpoints":{"high":100,"low":0},"bands":{"high":{"color":"#008000","label":""},"low":{"color":"#B22222","label":""},"medium":{"color":"#ffa500","label":""}}},"legend":{"descOrder":false,"showHeader":false,"show":false,"customSize":"auto","position":"right-top","inside":false},"axisMode":"multi","tooltip":{"content":{"legend":{"showBinLabel":true,"measures":[],"showNullValues":true,"customizeLegend":false,"showPercentage":true,"showDimensions":true,"showMeasures":true,"dimensions":[]}}},"visualizationType":"hbar","exploreLink":true,"title":{"fontSize":14,"subtitleFontSize":11,"label":"Suggested Programs","align":"center","subtitleLabel":""},"binValues":false,"trellis":{"flipLabels":false,"showGridLines":true,"size":[100,100],"enable":false,"type":"x","parameters":{},"chartsPerLine":4},"showActionMenu":true,"measureAxis2":{"sqrtScale":false,"showTitle":true,"showAxis":true,"title":"","customDomain":{"showDomain":false}},"measureAxis1":{"sqrtScale":false,"showTitle":true,"showAxis":true,"title":"","customDomain":{"showDomain":false}},"valueType":"compactNumber","theme":"light","step":"Consider_To_Enroll_1","compactDecimalDigits":-1,"dimensionAxis":{"showTitle":false,"customSize":50,"showAxis":true,"title":"","icons":{"useIcons":false,"iconProps":{"fit":"cover","column":"","type":"round","parameters":{}}}},"applyConditionalFormatting":true},"type":"chart"},"chart_2":{"parameters":{"showPoints":false,"legend":{"descOrder":false,"showHeader":false,"show":true,"customSize":"auto","position":"right-top","inside":false},"axisMode":"multi","tooltip":{"content":{"legend":{"showBinLabel":true,"measures":[],"showNullValues":true,"customizeLegend":false,"showPercentage":true,"showDimensions":true,"showMeasures":true,"dimensions":[]}}},"visualizationType":"time","missingValue":"connect","dashLine":{"measures":"","showDashLine":false},"timeAxis":{"showTitle":false,"showAxis":true,"title":""},"exploreLink":true,"title":{"fontSize":14,"subtitleFontSize":11,"label":"","align":"center","subtitleLabel":""},"trellis":{"flipLabels":false,"showGridLines":true,"size":[100,100],"enable":false,"type":"x","parameters":{},"chartsPerLine":4},"fillArea":true,"showActionMenu":true,"showZero":true,"measureAxis2":{"sqrtScale":false,"showTitle":true,"showAxis":true,"title":"","customDomain":{"showDomain":false}},"measureAxis1":{"sqrtScale":false,"showTitle":false,"showAxis":true,"title":"","customDomain":{"showDomain":false}},"valueType":"none","theme":"wave","step":"lens_1","applyConditionalFormatting":true,"drawArea":{"measure":"","showDrawArea":false,"bounding1":"","bounding2":""}},"type":"chart"},"text_7":{"parameters":{"content":{"richTextContent":[{"attributes":{"size":"12px","color":"#091A3E","align":"left"},"insert":"Payouts"}]},"interactions":[],"showActionMenu":true},"type":"text"},"chart_1":{"parameters":{"autoFitMode":"keepLabels","centerText":"","legend":{"descOrder":false,"showHeader":true,"show":false,"customSize":"auto","position":"right-top","inside":false},"showMeasureTitle":false,"tooltip":{"content":{"legend":{"showBinLabel":true,"measures":[],"showNullValues":true,"customizeLegend":false,"showPercentage":true,"showDimensions":true,"showMeasures":true,"dimensions":[]}}},"visualizationType":"pie","exploreLink":true,"title":{"fontSize":14,"subtitleFontSize":11,"label":"","align":"center","subtitleLabel":""},"trellis":{"flipLabels":false,"showGridLines":true,"size":[100,100],"enable":false,"type":"x","parameters":{},"chartsPerLine":4},"inner":80,"showActionMenu":true,"centerValueType":"number","valueType":"none","theme":"light","step":"all_1","applyConditionalFormatting":true},"type":"chart"},"text_6":{"parameters":{"content":{"richTextContent":[{"attributes":{"size":"12px","color":"{{cell(Revenue_Payout_Quant_1.result, 0, \"Payout:RevenueColor\").asString()}}","align":"left"},"insert":"{{cell(Revenue_Payout_Quant_1.result, 0, \"Payout:RevenueDelta\").asObject()}}% \r{{cell(Revenue_Payout_Quant_1.result, 0, \"Payout:RevenueArrow\").asObject()}}"}]},"interactions":[],"showActionMenu":true},"type":"text"},"text_9":{"parameters":{"content":{"richTextContent":[{"attributes":{"size":"12px","color":"#091A3E","align":"left"},"insert":"Total Payouts"}]},"interactions":[],"showActionMenu":true},"type":"text"},"text_8":{"parameters":{"content":{"richTextContent":[{"attributes":{"size":"12px","color":"#091A3E","align":"left"},"insert":"Under Review"}]},"interactions":[],"showActionMenu":true},"type":"text"},"image_5":{"parameters":{"alignmentX":"center","alignmentY":"top","fit":"fitheight","image":{"name":"payoutspng","namespace":""},"interactions":[]},"type":"image"},"dateselector_1":{"parameters":{"absoluteModeEnabled":true,"calendarTypeSwitchingAllowed":true,"defaultFiscalMode":false,"displayMode":"filter","filterStyle":{"titleColor":"#54698D","valueColor":"#16325C"},"instant":false,"presetsEnabled":true,"relativeModeEnabled":true,"showActionMenu":true,"step":"Date_Selector_2","title":""},"type":"dateselector"},"image_4":{"parameters":{"alignmentX":"center","alignmentY":"center","fit":"original","image":{"name":"programspng","namespace":""},"interactions":[]},"type":"image"},"text_1":{"parameters":{"content":{"richTextContent":[{"attributes":{"size":"12px","color":"{{cell(Revenue_Payout_Quant_1.result, 0, \"RebateColor\").asObject()}}","align":"left"},"insert":"{{coalesce(cell(Revenue_Payout_Quant_1.result, 0, \"RebateDelta\"),\"-\").asObject()}}%\r{{cell(Revenue_Payout_Quant_1.result, 0, \"RebateArrow\").asObject()}}"}]},"interactions":[],"showActionMenu":true},"type":"text"},"image_7":{"parameters":{"alignmentX":"center","alignmentY":"center","fit":"original","image":{"name":"products_areapng","namespace":""},"interactions":[]},"type":"image"},"image_6":{"parameters":{"alignmentX":"center","alignmentY":"top","fit":"original","image":{"name":"txnpng","namespace":""},"interactions":[]},"type":"image"},"number_5":{"parameters":{"compact":false,"exploreLink":true,"interactions":[],"measureField":"Rank_Trans_Current","numberColor":"#FFFFFF","numberSize":24,"showActionMenu":true,"step":"Rank_Query","textAlignment":"right","title":"","titleColor":"#091A3E","titleSize":16,"tooltip":{"customizeTooltip":false}},"type":"number"},"number_4":{"parameters":{"compact":true,"exploreLink":true,"interactions":[],"measureField":"sum_Approved TD_Current","numberColor":"#091A3E","numberSize":18,"showActionMenu":true,"step":"Revenue_Payout_Quant_1","textAlignment":"left","title":"","titleColor":"#091A3E","titleSize":16,"tooltip":{"customizeTooltip":false}},"type":"number"},"number_3":{"parameters":{"compact":true,"exploreLink":true,"interactions":[],"measureField":"sum_Under Review_Current","numberColor":"#091A3E","numberSize":18,"showActionMenu":true,"step":"Revenue_Payout_Quant_1","textAlignment":"left","title":"","titleColor":"#091A3E","titleSize":16,"tooltip":{"customizeTooltip":false}},"type":"number"},"number_2":{"parameters":{"compact":true,"exploreLink":true,"interactions":[],"measureField":"sum_RebateAmount","numberColor":"#091A3E","numberSize":18,"showActionMenu":true,"step":"Revenue_Payout_Quant_1","textAlignment":"left","title":"","titleColor":"#091A3E","titleSize":16,"tooltip":{"customizeTooltip":false}},"type":"number"},"number_1":{"parameters":{"compact":false,"exploreLink":true,"interactions":[],"measureField":"Rank_Rebate_Current","numberColor":"#FFFFFF","numberSize":24,"showActionMenu":true,"step":"Rank_Query","textAlignment":"right","title":"","titleColor":"#091A3E","titleSize":16,"tooltip":{"customizeTooltip":false}},"type":"number"},"image_3":{"parameters":{"alignmentX":"center","alignmentY":"center","fit":"original","image":{"name":"rank_wordpng","namespace":""},"interactions":[]},"type":"image"},"image_2":{"parameters":{"alignmentX":"center","alignmentY":"center","fit":"original","image":{"name":"rank_wordpng","namespace":""},"interactions":[]},"type":"image"},"Date_Selector_1":{"parameters":{"absoluteModeEnabled":true,"calendarTypeSwitchingAllowed":true,"defaultFiscalMode":false,"displayMode":"filter","filterStyle":{"titleColor":"#54698D","valueColor":"#16325C"},"instant":false,"presetsEnabled":true,"relativeModeEnabled":true,"showActionMenu":true,"step":"Date_Selector_1","title":""},"type":"dateselector"},"number_8":{"parameters":{"compact":true,"exploreLink":true,"interactions":[],"measureField":"Payout:Revenue","numberColor":"#091A3E","numberSize":18,"showActionMenu":true,"step":"Revenue_Payout_Quant_1","textAlignment":"left","title":"","titleColor":"#091A3E","titleSize":16,"tooltip":{"customizeTooltip":false}},"type":"number"},"number_7":{"parameters":{"compact":true,"exploreLink":true,"interactions":[],"measureField":"sum_AggregateObject.TotalQuantity","numberColor":"#091A3E","numberSize":18,"showActionMenu":true,"step":"Revenue_Payout_Quant_1","textAlignment":"left","title":"","titleColor":"#091A3E","titleSize":16,"tooltip":{"customizeTooltip":false}},"type":"number"},"number_6":{"parameters":{"compact":true,"exploreLink":true,"interactions":[],"measureField":"sum_AggregateObject.TotalTransactionAmount","numberColor":"#091A3E","numberSize":18,"showActionMenu":true,"step":"Revenue_Payout_Quant_1","textAlignment":"left","title":"","titleColor":"#091A3E","titleSize":16,"tooltip":{"customizeTooltip":false}},"type":"number"},"link_3":{"parameters":{"destinationLink":{"name":"283bca5f-02b9-41c7-ac23-a58555662379"},"destinationType":"page","fontSize":20,"includeState":false,"text":">","textAlignment":"center","textColor":"#091A3E"},"type":"link"},"text_25":{"parameters":{"content":{"richTextContent":[{"attributes":{"size":"16px","color":"#091A3E","align":"left"},"insert":""}]},"interactions":[],"showActionMenu":true},"type":"text"},"link_4":{"parameters":{"destinationLink":{"name":"b0b8dedf-caa5-462f-81f5-16040891ac71"},"destinationType":"page","fontSize":20,"includeState":false,"text":"<","textAlignment":"center","textColor":"#091A3E"},"type":"link"},"text_24":{"parameters":{"content":{"richTextContent":[{"attributes":{"size":"16px","color":"#091A3E","align":"left"},"insert":""}]},"interactions":[],"showActionMenu":true},"type":"text"},"text_21":{"parameters":{"content":{"richTextContent":[{"attributes":{"size":"16px","color":"#091A3E","align":"left"},"insert":"Programs"}]},"interactions":[],"showActionMenu":true},"type":"text"},"text_20":{"parameters":{"content":{"richTextContent":[{"attributes":{"size":"12px","color":"#091A3E","align":"left"},"insert":"Duration"}]},"interactions":[],"showActionMenu":true},"type":"text"},"text_23":{"parameters":{"content":{"richTextContent":[{"attributes":{"size":"12px","color":"#091A3E","align":"left"},"insert":"Compare To"}]},"interactions":[],"showActionMenu":true},"type":"text"},"text_22":{"parameters":{"content":{"richTextContent":[{"attributes":{"size":"16px","color":"#091A3E","align":"left"},"insert":"Program Whitespace"}]},"interactions":[],"showActionMenu":true},"type":"text"},"pillbox_1":{"parameters":{"compact":false,"exploreLink":false,"fontSize":14,"selectedTab":{"backgroundColor":"#091A3E","borderColor":"#C6D3E1","borderEdges":["all"],"borderWidth":0,"textColor":"#FFFFFF"},"showActionMenu":true,"step":"static_1","textColor":"#0070D2"},"type":"pillbox"}}}