{"dataSourceLinksInfo":{"enableAutomaticLinking":false,"excludeRelationships":[],"links":[{"fields":[{"dataSourceName":"MFG_TargetActuals","dataSourceNamespace":"","dataSourceType":"dataset","fieldName":"Order.Account.UniqueAccountName"},{"dataSourceName":"MFG_AccountManagerPeriodicTargetDistribution","dataSourceNamespace":"","dataSourceType":"dataset","fieldName":"AcctMgrTargetDstr.Account.UniqueAccountName"},{"dataSourceName":"MFG_Account4","dataSourceNamespace":"","dataSourceType":"dataset","fieldName":"UniqueAccountName"}],"label":"Account Name - Targets-Actuals-Account","name":"Link_2148"},{"fields":[{"dataSourceName":"MFG_AccountManagerPeriodicTargetDistribution","dataSourceNamespace":"","dataSourceType":"dataset","fieldName":"AcctMgrTarget.Parent.AcctMgrTargetDstr.Product.Name"},{"dataSourceName":"MFG_TargetActuals","dataSourceNamespace":"","dataSourceType":"dataset","fieldName":"Product.Name"}],"label":"Product Name - Target-Actuals","name":"Link_2033"},{"fields":[{"dataSourceName":"MFG_Users","dataSourceNamespace":"","dataSourceType":"dataset","fieldName":"Id"},{"dataSourceName":"MFG_AccountManagerPeriodicTargetDistribution","dataSourceNamespace":"","dataSourceType":"dataset","fieldName":"AssignedTo.Id"},{"dataSourceName":"MFG_TargetActuals","dataSourceNamespace":"","dataSourceType":"dataset","fieldName":"TargetActualsOwner.Managers"}],"label":"Logged In User - Users-Targets-Actuals","name":"Link_1414"}]},"filters":[{"dataset":{"name":"MFG_AccountManagerPeriodicTargetDistribution"},"dependent":true,"fields":["AcctMgrTarget.MeasureType"],"locked":false,"operator":"in","value":"[\"Currency\"]"}],"gridLayouts":[{"maxWidth":1500,"name":"Default","numColumns":40,"pages":[{"label":"Overview","name":"96fb1d7e-ae0d-4b51-bd1b-46fee7880e63","navigationHidden":false,"widgets":[{"colspan":21,"column":1,"name":"chart_3","row":9,"rowspan":3,"widgetStyle":{"backgroundColor":"#FFFFFF","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":21,"column":1,"name":"chart_2","row":15,"rowspan":3,"widgetStyle":{"backgroundColor":"#FFFFFF","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":31,"column":4,"name":"text_1","row":1,"rowspan":3,"widgetStyle":{"borderEdges":[]}},{"colspan":3,"column":1,"name":"image_1","row":1,"rowspan":3,"widgetStyle":{"borderEdges":[]}},{"colspan":7,"column":29,"name":"number_1","row":8,"rowspan":6,"widgetStyle":{"borderEdges":[]}},{"colspan":1,"column":28,"name":"text_3","row":8,"rowspan":5,"widgetStyle":{"borderEdges":[]}},{"colspan":7,"column":29,"name":"number_4","row":14,"rowspan":6,"widgetStyle":{"borderEdges":[]}},{"colspan":1,"column":28,"name":"text_6","row":13,"rowspan":7,"widgetStyle":{"borderEdges":[]}},{"colspan":21,"column":1,"name":"text_4","row":13,"rowspan":2,"widgetStyle":{"borderEdges":[]}},{"colspan":21,"column":1,"name":"text_5","row":7,"rowspan":2,"widgetStyle":{"borderEdges":[]}},{"colspan":10,"column":25,"name":"image_2","row":20,"rowspan":2,"widgetStyle":{"borderEdges":[]}},{"colspan":9,"column":1,"name":"link_1","row":20,"rowspan":2,"widgetStyle":{"borderEdges":[]}},{"colspan":6,"column":22,"name":"number_2","row":8,"rowspan":6,"widgetStyle":{"borderEdges":[]}},{"colspan":6,"column":22,"name":"number_5","row":14,"rowspan":6,"widgetStyle":{"borderEdges":[]}}]}],"rowHeight":"fine","selectors":["minWidth(450)","maxWidth(520)"],"style":{"alignmentX":"left","alignmentY":"top","backgroundColor":"#FFFFFF","cellSpacingX":4,"cellSpacingY":0,"fit":"original","gutterColor":"#C5D3E0"},"version":1.0}],"layouts":[],"steps":{"Logged_In_User":{"broadcastFacet":false,"groups":[],"label":"Logged_In_User","numbers":[],"query":"q = load \"MFG_Users\";\nq = group q by 'Id';\nq = foreach q generate 'Id' as 'Id', first('Name') as 'Name', count() as 'count';\nq = order q by 'Id' asc;\nq = limit q 1;","receiveFacetSource":{"mode":"none","steps":[]},"selectMode":"singlerequired","strings":[],"type":"saql","useGlobal":false,"visualizationParameters":{"parameters":{"autoFitMode":"keepLabels","bins":{"breakpoints":{"high":100,"low":0},"bands":{"high":{"color":"#008000","label":""},"low":{"color":"#B22222","label":""},"medium":{"color":"#ffa500","label":""}}},"legend":{"descOrder":false,"showHeader":true,"show":true,"customSize":"auto","position":"right-top","inside":false},"axisMode":"multi","tooltip":{"content":{"legend":{"showBinLabel":true,"measures":[],"showNullValues":true,"customizeLegend":false,"showPercentage":true,"showDimensions":true,"showMeasures":true,"dimensions":[]}}},"visualizationType":"hbar","title":{"fontSize":14,"subtitleFontSize":11,"label":"","align":"center","subtitleLabel":""},"binValues":false,"trellis":{"flipLabels":false,"showGridLines":true,"size":[100,100],"enable":false,"type":"x","chartsPerLine":4},"showActionMenu":true,"measureAxis2":{"sqrtScale":false,"showTitle":true,"showAxis":true,"title":"","customDomain":{"showDomain":false}},"measureAxis1":{"sqrtScale":false,"showTitle":true,"showAxis":true,"title":"","customDomain":{"showDomain":false}},"valueType":"compactNumber","theme":"wave","compactDecimalDigits":-1,"dimensionAxis":{"showTitle":true,"customSize":"auto","showAxis":true,"title":"","icons":{"useIcons":false,"iconProps":{"fit":"cover","column":"","type":"round"}}},"applyConditionalFormatting":true},"type":"chart"}},"Target_Value_1":{"broadcastFacet":true,"groups":[],"label":"Target_Value","numbers":[],"query":"targets = load \"MFG_AccountManagerPeriodicTargetDistribution\";\ntargets = filter targets by 'AcctMgrTargetDstrId' is null;\ntargets = filter targets by {{cell(Logged_In_User.result, 0, \"Id\").asEquality('AssignedTo.Id')}};\n targets = filter targets by 'AcctMgrTarget.Period.StartDate_sec_epoch'>= {{coalesce(cell( selected_target_1.result,0, \"Period_min_sec_epoch\"),0).asObject()}};\n targets = filter targets by 'AcctMgrTarget.Period.EndDate_sec_epoch' <= {{coalesce(cell( selected_target_1.result,0, \"Period_max_sec_epoch\"),0).asObject()}};\n targets = group targets by all;\ntargets = foreach targets generate sum('PeriodTargetCurrencyValue') as 'sum_PeriodTargetCurrencyValue';","receiveFacetSource":{"mode":"all","steps":[]},"selectMode":"single","strings":[],"type":"saql","useGlobal":true,"visualizationParameters":{"parameters":{"autoFitMode":"keepLabels","bins":{"breakpoints":{"high":100,"low":0},"bands":{"high":{"color":"#008000","label":""},"low":{"color":"#B22222","label":""},"medium":{"color":"#ffa500","label":""}}},"legend":{"descOrder":false,"showHeader":true,"show":true,"customSize":"auto","position":"right-top","inside":false},"axisMode":"multi","tooltip":{"content":{"legend":{"showBinLabel":true,"measures":[],"showNullValues":true,"customizeLegend":false,"showPercentage":true,"showDimensions":true,"showMeasures":true,"dimensions":[]}}},"visualizationType":"hbar","title":{"fontSize":14,"subtitleFontSize":11,"label":"","align":"center","subtitleLabel":""},"binValues":false,"trellis":{"flipLabels":false,"showGridLines":true,"size":[100,100],"enable":false,"type":"x","chartsPerLine":4},"showActionMenu":true,"measureAxis2":{"sqrtScale":false,"showTitle":true,"showAxis":true,"title":"","customDomain":{"showDomain":false}},"measureAxis1":{"sqrtScale":false,"showTitle":true,"showAxis":true,"title":"","customDomain":{"showDomain":false}},"valueType":"compactNumber","theme":"wave","compactDecimalDigits":-1,"dimensionAxis":{"showTitle":true,"customSize":"auto","showAxis":true,"title":"","icons":{"useIcons":false,"iconProps":{"fit":"cover","column":"","type":"round"}}},"applyConditionalFormatting":true},"type":"chart"}},"selected_target_1":{"broadcastFacet":true,"groups":[],"label":"selected target","numbers":[],"query":"q = load \"MFG_AccountManagerPeriodicTargetDistribution\";\nq = filter q by 'AcctMgrTargetDstrId' is null;\nresult = group q by 'AcctMgrTargetId';\nresult = foreach result generate q.'AcctMgrTargetId' as 'AcctMgrTargetId', first(q.'AcctMgrTarget.Period.StartDate') as 'StartDate', first(q.'AcctMgrTarget.Period.EndDate') as 'EndDate', first(q.'AcctMgrTarget.Period.StartDate_sec_epoch') as 'Period_min_sec_epoch', first(q.'AcctMgrTarget.Period.EndDate_sec_epoch') as 'Period_max_sec_epoch';\nresult = order result by ('AcctMgrTargetId' asc);\nresult = limit result 1;","receiveFacetSource":{"mode":"all","steps":[]},"selectMode":"single","strings":[],"type":"saql","useGlobal":true,"visualizationParameters":{"parameters":{"borderColor":"#e0e5ee","borderWidth":1,"cell":{"backgroundColor":"#ffffff","fontColor":"#16325c","fontSize":12},"columnProperties":{},"columns":[],"customBulkActions":[],"header":{"backgroundColor":"#f4f6f9","fontColor":"#16325c","fontSize":12},"innerMajorBorderColor":"#a8b7c7","innerMinorBorderColor":"#e0e5ee","interactions":[],"mode":"fittocontainer","numberOfLines":1,"pivoted":false,"showActionMenu":true,"showRowIndexColumn":false,"totals":true,"verticalPadding":8},"type":"table"}},"Attainments_Guage_KP_1":{"broadcastFacet":false,"groups":[],"label":"Attainments_Guage_KPI","numbers":[],"query":"targets = load \"MFG_AccountManagerPeriodicTargetDistribution\";\ntargets = filter targets by 'AcctMgrTargetDstrId' is null;\ntargets = filter targets by {{cell(Logged_In_User.result, 0, \"Id\").asEquality('AssignedTo.Id')}};\n targets = filter targets by 'AcctMgrTarget.Period.StartDate_sec_epoch'>= {{coalesce(cell( selected_target_1.result,0, \"Period_min_sec_epoch\"),0).asObject()}};\n targets = filter targets by 'AcctMgrTarget.Period.EndDate_sec_epoch' <= {{coalesce(cell( selected_target_1.result,0, \"Period_max_sec_epoch\"),0).asObject()}};\n\n\n\ntarget_actuals = load \"MFG_TargetActuals\";\ntarget_actuals = filter target_actuals by {{cell(Logged_In_User.result, 0, \"Id\").asEquality('TargetActualsOwner.Managers')}};\n target_actuals = filter target_actuals by 'Order.EffectiveDate_sec_epoch' >= {{coalesce(cell( selected_target_1.result,0, \"Period_min_sec_epoch\"),0).asObject()}};\n target_actuals = filter target_actuals by 'Order.EffectiveDate_sec_epoch' <= {{coalesce(cell( selected_target_1.result,0, \"Period_max_sec_epoch\"),0).asObject()}};\n target_actuals = filter target_actuals by 'Order.Status' == \"Activated\";\n target_attainment = cogroup targets by all full, target_actuals by all;\n target_attainment = foreach target_attainment generate sum(target_actuals.'TotalPrice')*100/sum(targets.'PeriodTargetCurrencyValue') as 'Target_Attainment', sum(target_actuals.'TotalPrice') as 'Target_Actuals', sum(targets.'PeriodTargetCurrencyValue') as 'Target_Value';","receiveFacetSource":{"mode":"all","steps":[]},"selectMode":"single","strings":[],"type":"saql","useGlobal":true,"visualizationParameters":{"parameters":{"autoFitMode":"keepLabels","max":100,"legend":{"showHeader":true,"show":false,"position":"right-top","inside":false},"tooltip":{"content":{"legend":{"showBinLabel":true,"measures":[],"showNullValues":true,"customizeLegend":false,"showPercentage":true,"showDimensions":true,"showMeasures":true,"dimensions":[]}}},"visualizationType":"polargauge","medium":33,"title":{"fontSize":14,"subtitleFontSize":11,"label":"","align":"center","subtitleLabel":""},"trellis":{"flipLabels":false,"showGridLines":true,"size":[100,20],"enable":true,"type":"x","chartsPerLine":4},"icons":{"useIcons":false,"iconProps":{"fit":"cover","column":"Attainment Type"}},"inner":80,"colors":{"mediumColor2":"#F29946","mediumColor1":"#FED444","lowColor1":"#F71979","lowColor2":"#CC203D","highColor1":"#7BDE4E","highColor2":"#169913"},"high":66,"min":0,"showActionMenu":true,"valueType":"compactNumber","theme":"wave","compactDecimalDigits":-1,"applyConditionalFormatting":true},"type":"chart"}},"Attainments_Guage_KP_2":{"broadcastFacet":false,"groups":[],"label":"Attainments_Guage_KPI","numbers":[],"query":"targets = load \"MFG_AccountManagerPeriodicTargetDistribution\";\ntargets = filter targets by 'AcctMgrTargetDstrId' is null;\ntargets = filter targets by {{cell(Logged_In_User.result, 0, \"Id\").asEquality('AssignedTo.Id')}};\n targets = filter targets by 'AcctMgrTarget.Period.StartDate_sec_epoch'>= {{coalesce(cell( selected_target_1.result,0, \"Period_min_sec_epoch\"),0).asObject()}};\n targets = filter targets by 'AcctMgrTarget.Period.EndDate_sec_epoch' <= {{coalesce(cell( selected_target_1.result,0, \"Period_max_sec_epoch\"),0).asObject()}};\n targets_m1 = foreach targets generate 'Name', 'MonthlyTargetCurrencyValue', 'Period.StartDate' as 'Period' ;\ntargets_m2 = foreach targets generate 'Name', 'MonthlyTargetCurrencyValue', (case when 'Period.Type' == \"Month\" then null \nelse \nnumber_to_string(string_to_number(toString(toDate('Period.StartDate', \"yyyy-MM-dd\"), \"yyyy\")) + floor((string_to_number(toString(toDate('Period.StartDate', \"yyyy-MM-dd\"), \"MM\"))+1)/13), \"#\")+\"-\"\n+\nnumber_to_string((string_to_number(toString(toDate('Period.StartDate', \"yyyy-MM-dd\"), \"MM\"))+1)%13 + floor((string_to_number(toString(toDate('Period.StartDate', \"yyyy-MM-dd\"), \"MM\"))+1)/13), \"#,00\")\n+\ntoString(toDate('Period.StartDate', \"yyyy-MM-dd\"),\"-dd\") \nend) as 'Period';\ntargets_m3 = foreach targets generate 'Name', 'MonthlyTargetCurrencyValue', (case when 'Period.Type' == \"Month\" then null\nwhen 'Period.Type'==\"Quarter\" then toString(toDate('Period.EndDate', \"yyyy-MM-dd\"),\"yyyy-MM-\")+\"01\"\nelse \nnumber_to_string(string_to_number(toString(toDate('Period.StartDate', \"yyyy-MM-dd\"), \"yyyy\")) + floor((string_to_number(toString(toDate('Period.StartDate', \"yyyy-MM-dd\"), \"MM\"))+2)/13), \"#\")+\"-\"\n+\nnumber_to_string((string_to_number(toString(toDate('Period.StartDate', \"yyyy-MM-dd\"), \"MM\"))+2)%13 + floor((string_to_number(toString(toDate('Period.StartDate', \"yyyy-MM-dd\"), \"MM\"))+2)/13), \"#,00\")\n+\ntoString(toDate('Period.StartDate', \"yyyy-MM-dd\"),\"-dd\") \nend) as 'Period';\ntargets_m4 = foreach targets generate 'Name', 'MonthlyTargetCurrencyValue', (case when 'Period.Type' == \"Month\" then null\nwhen 'Period.Type'==\"Quarter\" then null\nelse \nnumber_to_string(string_to_number(toString(toDate('Period.StartDate', \"yyyy-MM-dd\"), \"yyyy\")) + floor((string_to_number(toString(toDate('Period.StartDate', \"yyyy-MM-dd\"), \"MM\"))+3)/13), \"#\")+\"-\"\n+\nnumber_to_string((string_to_number(toString(toDate('Period.StartDate', \"yyyy-MM-dd\"), \"MM\"))+3)%13 + floor((string_to_number(toString(toDate('Period.StartDate', \"yyyy-MM-dd\"), \"MM\"))+3)/13), \"#,00\")\n+\ntoString(toDate('Period.StartDate', \"yyyy-MM-dd\"),\"-dd\") \nend) as 'Period';\ntargets_m5 = foreach targets generate 'Name', 'MonthlyTargetCurrencyValue', (case when 'Period.Type' == \"Month\" then null\nwhen 'Period.Type'==\"Quarter\" then null\nelse \nnumber_to_string(string_to_number(toString(toDate('Period.StartDate', \"yyyy-MM-dd\"), \"yyyy\")) + floor((string_to_number(toString(toDate('Period.StartDate', \"yyyy-MM-dd\"), \"MM\"))+4)/13), \"#\")+\"-\"\n+\nnumber_to_string((string_to_number(toString(toDate('Period.StartDate', \"yyyy-MM-dd\"), \"MM\"))+4)%13 + floor((string_to_number(toString(toDate('Period.StartDate', \"yyyy-MM-dd\"), \"MM\"))+4)/13), \"#,00\")\n+\ntoString(toDate('Period.StartDate', \"yyyy-MM-dd\"),\"-dd\") \nend) as 'Period';\ntargets_m6 = foreach targets generate 'Name', 'MonthlyTargetCurrencyValue', (case when 'Period.Type' == \"Month\" then null\nwhen 'Period.Type'==\"Quarter\" then null\nelse \nnumber_to_string(string_to_number(toString(toDate('Period.StartDate', \"yyyy-MM-dd\"), \"yyyy\")) + floor((string_to_number(toString(toDate('Period.StartDate', \"yyyy-MM-dd\"), \"MM\"))+5)/13), \"#\")+\"-\"\n+\nnumber_to_string((string_to_number(toString(toDate('Period.StartDate', \"yyyy-MM-dd\"), \"MM\"))+5)%13 + floor((string_to_number(toString(toDate('Period.StartDate', \"yyyy-MM-dd\"), \"MM\"))+5)/13), \"#,00\")\n+\ntoString(toDate('Period.StartDate', \"yyyy-MM-dd\"),\"-dd\") \nend) as 'Period';\ntargets_m7 = foreach targets generate 'Name', 'MonthlyTargetCurrencyValue', (case when 'Period.Type' == \"Month\" then null\nwhen 'Period.Type'==\"Quarter\" then null\nelse \nnumber_to_string(string_to_number(toString(toDate('Period.StartDate', \"yyyy-MM-dd\"), \"yyyy\")) + floor((string_to_number(toString(toDate('Period.StartDate', \"yyyy-MM-dd\"), \"MM\"))+6)/13), \"#\")+\"-\"\n+\nnumber_to_string((string_to_number(toString(toDate('Period.StartDate', \"yyyy-MM-dd\"), \"MM\"))+6)%13 + floor((string_to_number(toString(toDate('Period.StartDate', \"yyyy-MM-dd\"), \"MM\"))+6)/13), \"#,00\")\n+\ntoString(toDate('Period.StartDate', \"yyyy-MM-dd\"),\"-dd\") \nend) as 'Period';\ntargets_m8 = foreach targets generate 'Name', 'MonthlyTargetCurrencyValue', (case when 'Period.Type' == \"Month\" then null\nwhen 'Period.Type'==\"Quarter\" then null\nelse \nnumber_to_string(string_to_number(toString(toDate('Period.StartDate', \"yyyy-MM-dd\"), \"yyyy\")) + floor((string_to_number(toString(toDate('Period.StartDate', \"yyyy-MM-dd\"), \"MM\"))+7)/13), \"#\")+\"-\"\n+\nnumber_to_string((string_to_number(toString(toDate('Period.StartDate', \"yyyy-MM-dd\"), \"MM\"))+7)%13 + floor((string_to_number(toString(toDate('Period.StartDate', \"yyyy-MM-dd\"), \"MM\"))+7)/13), \"#,00\")\n+\ntoString(toDate('Period.StartDate', \"yyyy-MM-dd\"),\"-dd\") \nend) as 'Period';\ntargets_m9 = foreach targets generate 'Name', 'MonthlyTargetCurrencyValue', (case when 'Period.Type' == \"Month\" then null\nwhen 'Period.Type'==\"Quarter\" then null\nelse \nnumber_to_string(string_to_number(toString(toDate('Period.StartDate', \"yyyy-MM-dd\"), \"yyyy\")) + floor((string_to_number(toString(toDate('Period.StartDate', \"yyyy-MM-dd\"), \"MM\"))+8)/13), \"#\")+\"-\"\n+\nnumber_to_string((string_to_number(toString(toDate('Period.StartDate', \"yyyy-MM-dd\"), \"MM\"))+8)%13 + floor((string_to_number(toString(toDate('Period.StartDate', \"yyyy-MM-dd\"), \"MM\"))+8)/13), \"#,00\")\n+\ntoString(toDate('Period.StartDate', \"yyyy-MM-dd\"),\"-dd\") \nend) as 'Period';\ntargets_m10 = foreach targets generate 'Name', 'MonthlyTargetCurrencyValue', (case when 'Period.Type' == \"Month\" then null\nwhen 'Period.Type'==\"Quarter\" then null\nelse \nnumber_to_string(string_to_number(toString(toDate('Period.StartDate', \"yyyy-MM-dd\"), \"yyyy\")) + floor((string_to_number(toString(toDate('Period.StartDate', \"yyyy-MM-dd\"), \"MM\"))+9)/13), \"#\")+\"-\"\n+\nnumber_to_string((string_to_number(toString(toDate('Period.StartDate', \"yyyy-MM-dd\"), \"MM\"))+9)%13 + floor((string_to_number(toString(toDate('Period.StartDate', \"yyyy-MM-dd\"), \"MM\"))+9)/13), \"#,00\")\n+\ntoString(toDate('Period.StartDate', \"yyyy-MM-dd\"),\"-dd\") \nend) as 'Period';\ntargets_m11 = foreach targets generate 'Name', 'MonthlyTargetCurrencyValue', (case when 'Period.Type' == \"Month\" then null\nwhen 'Period.Type'==\"Quarter\" then null\nelse \nnumber_to_string(string_to_number(toString(toDate('Period.StartDate', \"yyyy-MM-dd\"), \"yyyy\")) + floor((string_to_number(toString(toDate('Period.StartDate', \"yyyy-MM-dd\"), \"MM\"))+10)/13), \"#\")+\"-\"\n+\nnumber_to_string((string_to_number(toString(toDate('Period.StartDate', \"yyyy-MM-dd\"), \"MM\"))+10)%13 + floor((string_to_number(toString(toDate('Period.StartDate', \"yyyy-MM-dd\"), \"MM\"))+10)/13), \"#,00\")\n+\ntoString(toDate('Period.StartDate', \"yyyy-MM-dd\"),\"-dd\") \nend) as 'Period';\ntargets_m12 = foreach targets generate 'Name', 'MonthlyTargetCurrencyValue', (case when 'Period.Type' == \"Month\" then null\nwhen 'Period.Type'==\"Quarter\" then null\nelse toString(toDate('Period.EndDate', \"yyyy-MM-dd\"),\"yyyy-MM-\")+\"01\"\nend) as 'Period';\n\n\n\n\ntargets = union targets_m1, targets_m2, targets_m3, targets_m4, targets_m5, targets_m6, targets_m7, targets_m8, targets_m9, targets_m10, targets_m11, targets_m12;\ntargets = filter targets by 'Period' is not null;\n\n\n target_actuals = load \"MFG_TargetActuals\";\ntarget_actuals = filter target_actuals by {{cell(Logged_In_User.result, 0, \"Id\").asEquality('TargetActualsOwner.Managers')}};\n target_actuals = filter target_actuals by 'Order.Status' == \"Activated\";\n target_actuals_proj = group target_actuals by ('TargetActualsOwner.Managers', 'Order.EffectiveDate_Year', 'Order.EffectiveDate_Month') ;\ntarget_actuals_proj = foreach target_actuals_proj generate 'Order.EffectiveDate_Year' + \"-\" + 'Order.EffectiveDate_Month' + \"-01\" as 'Period', 'Order.EffectiveDate_Year' as 'Period.StartDate_Year', 'Order.EffectiveDate_Month' as 'Period.StartDate_Month', sum('TotalPrice') as 'sum_TotalPrice' ;\ntarget_actuals_proj = fill target_actuals_proj by (dateCols=('Period.StartDate_Year','Period.StartDate_Month', \"Y-M\")) ;\ntarget_actuals_proj = timeseries target_actuals_proj generate 'sum_TotalPrice' as Projected_sum_TotalPrice with (length=36, dateCols=('Period.StartDate_Year','Period.StartDate_Month', \"Y-M\"), seasonality = 0, ignoreLast = false) ;\ntarget_actuals_proj = foreach target_actuals_proj generate 'Period.StartDate_Year' + \"-\" + 'Period.StartDate_Month' + \"-01\" as 'Period', 'Period.StartDate_Year' + \"~~~\" + 'Period.StartDate_Month' as 'Period.StartDate_Year~~~Period.StartDate_Month', 'Period.StartDate_Year' as 'Period.StartDate_Year', 'Period.StartDate_Month' as 'Period.StartDate_Month', \"01\" as 'Period.StartDate_Day', case when 'sum_TotalPrice' > coalesce('Projected_sum_TotalPrice',0) then 'sum_TotalPrice' when coalesce('Projected_sum_TotalPrice',0) >= 0 then 'Projected_sum_TotalPrice' else 0 end as 'sum_TotalPrice', month_last_day(toDate('Period.StartDate_Year'+\"-\"+'Period.StartDate_Month'+\"-27 00:00:00\",\"yyyy-MM-dd HH:mm:ss\")) as 'Month Last Day';\n target_actuals_proj = filter target_actuals_proj by 'Month Last Day' > now();\n target_actuals = foreach target_actuals generate 'Order.EffectiveDate_Year' + \"-\" + 'Order.EffectiveDate_Month' + \"-01\" as 'Period', 'Order.EffectiveDate_Year' as 'Period.StartDate_Year', 'Order.EffectiveDate_Month' as 'Period.StartDate_Month', sum('TotalPrice') as 'sum_TotalPrice' ;\n\n target_attainment_1 = cogroup targets by 'Period' left, target_actuals by 'Period' left, target_actuals_proj by 'Period' ;\ntarget_attainment_1 = foreach target_attainment_1 generate toDate(coalesce(targets.'Period', target_actuals.'Period'), \"yyyy-MM-dd\") as 'Period', (case when sum(target_actuals.'sum_TotalPrice')<0 then 0 else sum(target_actuals.'sum_TotalPrice') end) as 'Target_Actuals', sum(targets.'MonthlyTargetCurrencyValue') as 'Target_Value', sum(target_actuals_proj.'sum_TotalPrice') as 'Projections_only', coalesce(sum(target_actuals_proj.'sum_TotalPrice'),sum(target_actuals.'sum_TotalPrice')) as 'Projections' ;\n target_attainment_1 = group target_attainment_1 by all;\n target_attainment_1 = foreach target_attainment_1 generate coalesce(sum('Projections'),0)*100/sum('Target_Value') as 'Target_Attainment', sum('Projections') as 'Projected_Target_Actuals' , sum('Target_Value') as 'Target_Value';\n","receiveFacetSource":{"mode":"all","steps":[]},"selectMode":"single","strings":[],"type":"saql","useGlobal":true,"visualizationParameters":{"parameters":{"autoFitMode":"keepLabels","max":100,"legend":{"showHeader":true,"show":false,"position":"right-top","inside":false},"tooltip":{"content":{"legend":{"showBinLabel":true,"measures":[],"showNullValues":true,"customizeLegend":false,"showPercentage":true,"showDimensions":true,"showMeasures":true,"dimensions":[]}}},"visualizationType":"polargauge","medium":33,"title":{"fontSize":14,"subtitleFontSize":11,"label":"","align":"center","subtitleLabel":""},"trellis":{"flipLabels":false,"showGridLines":true,"size":[100,20],"enable":true,"type":"x","chartsPerLine":4},"icons":{"useIcons":false,"iconProps":{"fit":"cover","column":"Attainment Type"}},"inner":80,"colors":{"mediumColor2":"#F29946","mediumColor1":"#FED444","lowColor1":"#F71979","lowColor2":"#CC203D","highColor1":"#7BDE4E","highColor2":"#169913"},"high":66,"min":0,"showActionMenu":true,"valueType":"compactNumber","theme":"wave","compactDecimalDigits":-1,"applyConditionalFormatting":true},"type":"chart"}}},"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1},"widgets":{"text_18":{"parameters":{"content":{"richTextContent":[{"attributes":{"size":"12px","color":"#FFFFFF","align":"center"},"insert":"Choose KPI:"}]},"interactions":[],"showActionMenu":true},"type":"text"},"text_1":{"parameters":{"content":{"richTextContent":[{"attributes":{"size":"18px","color":"#091A3E","align":"left"},"insert":"Target Attainment"}]},"interactions":[],"showActionMenu":false},"type":"text"},"text_19":{"parameters":{"content":{"richTextContent":[{"attributes":{"size":"12px","color":"#FFFFFF","align":"center"},"insert":"Group by:"}]},"interactions":[],"showActionMenu":true},"type":"text"},"link_1":{"parameters":{"destinationLink":{"name":"Targets_Performance","namespace":""},"destinationType":"dashboard","fontSize":10,"includeState":false,"text":"VIEW DASHBOARD","textAlignment":"left","textColor":"rgb(0, 109, 204)"},"type":"link"},"number_5":{"parameters":{"compact":true,"exploreLink":true,"interactions":[],"measureField":"Projected_Target_Actuals","numberColor":"#091A3E","numberSize":24,"showActionMenu":true,"step":"Attainments_Guage_KP_2","textAlignment":"right","title":"","titleColor":"#091A3E","titleSize":16,"tooltip":{"customizeTooltip":false}},"type":"number"},"number_4":{"parameters":{"compact":true,"exploreLink":true,"interactions":[],"measureField":"sum_PeriodTargetCurrencyValue","noResultsLabel":" - ","numberColor":"#091A3E","numberSize":24,"showActionMenu":true,"step":"Target_Value_1","textAlignment":"right","title":"","titleColor":"#091A3E","titleSize":16,"tooltip":{"customizeTooltip":false}},"type":"number"},"number_2":{"parameters":{"compact":true,"exploreLink":true,"interactions":[],"measureField":"Target_Actuals","numberColor":"#091A3E","numberSize":24,"showActionMenu":true,"step":"Attainments_Guage_KP_1","textAlignment":"right","title":"","titleColor":"#091A3E","titleSize":16,"tooltip":{"customizeTooltip":false}},"type":"number"},"number_1":{"parameters":{"compact":true,"exploreLink":true,"interactions":[],"measureField":"sum_PeriodTargetCurrencyValue","noResultsLabel":" - ","numberColor":"#091A3E","numberSize":24,"showActionMenu":true,"step":"Target_Value_1","textAlignment":"right","title":"","titleColor":"#091A3E","titleSize":16,"tooltip":{"customizeTooltip":false}},"type":"number"},"image_1":{"parameters":{"alignmentX":"left","alignmentY":"top","fit":"fitwidth","image":{"name":"graph2xpng","namespace":""},"interactions":[]},"type":"image"},"text_3":{"parameters":{"content":{"richTextContent":[{"attributes":{"size":"24px","color":"#091A3E","align":"left"},"insert":"|"}]},"interactions":[],"showActionMenu":false},"type":"text"},"text_5":{"parameters":{"content":{"richTextContent":[{"attributes":{"size":"14px","color":"#091A3E","align":"left"},"insert":"Target Attainment"}]},"interactions":[],"showActionMenu":false},"type":"text"},"text_4":{"parameters":{"content":{"richTextContent":[{"attributes":{"size":"14px","color":"#091A3E","align":"left"},"insert":"Projected Attainment"}]},"interactions":[],"showActionMenu":false},"type":"text"},"image_2":{"parameters":{"alignmentX":"center","alignmentY":"center","fit":"fitwidth","image":{"name":"Powered_by_analytics_bannerpng7","namespace":""},"interactions":[]},"type":"image"},"chart_2":{"parameters":{"max":100,"legend":{"showHeader":true,"show":false,"position":"right-top","inside":false},"tooltip":{"content":{"legend":{"showBinLabel":true,"measures":["Target_Attainment","Projected_Target_Actuals","Target_Value"],"showNullValues":true,"customizeLegend":true,"showPercentage":true,"showDimensions":true,"showMeasures":false,"dimensions":[]},"description":"Projected Target Attainment : [Target_Attainment]%\nTarget Revenue :  [Target_Value]\nProjected Revenue :  [Projected_Target_Actuals]"}},"visualizationType":"flatgauge","exploreLink":true,"medium":33,"title":{"fontSize":14,"subtitleFontSize":11,"label":"","align":"left","subtitleLabel":""},"trellis":{"flipLabels":false,"showGridLines":true,"size":[100,20],"enable":false,"type":"x","parameters":{},"chartsPerLine":4},"colors":{"mediumColor2":"#F29946","mediumColor1":"#FED444","lowColor1":"#F71979","lowColor2":"#CC203D","highColor1":"#7BDE4E","highColor2":"#169913"},"high":66,"columnMap":{"trellis":[],"plots":["Target_Attainment"]},"showActionMenu":true,"min":0,"valueType":"percent","theme":"light","step":"Attainments_Guage_KP_2","applyConditionalFormatting":true},"type":"chart"},"text_6":{"parameters":{"content":{"richTextContent":[{"attributes":{"size":"24px","color":"#091A3E","align":"left"},"insert":"|"}]},"interactions":[],"showActionMenu":false},"type":"text"},"chart_3":{"parameters":{"max":100,"legend":{"showHeader":true,"show":false,"position":"right-top","inside":false},"tooltip":{"content":{"legend":{"showBinLabel":true,"measures":["Target_Attainment","Target_Value","Target_Actuals"],"showNullValues":true,"customizeLegend":true,"showPercentage":true,"showDimensions":true,"showMeasures":false,"dimensions":[]},"description":"Target Attainment : [Target_Attainment]%\nTarget Revenue : [Target_Value]\nActual Revenue :  [Target_Actuals]"}},"visualizationType":"flatgauge","exploreLink":true,"medium":33,"title":{"fontSize":14,"subtitleFontSize":11,"label":"","align":"left","subtitleLabel":""},"trellis":{"flipLabels":false,"showGridLines":true,"size":[100,20],"enable":false,"type":"x","parameters":{},"chartsPerLine":4},"colors":{"mediumColor2":"#F29946","mediumColor1":"#FED444","lowColor1":"#F71979","lowColor2":"#CC203D","highColor1":"#7BDE4E","highColor2":"#169913"},"high":66,"columnMap":{"trellis":[],"plots":["Target_Attainment"]},"showActionMenu":true,"min":0,"valueType":"percent","theme":"light","step":"Attainments_Guage_KP_1","applyConditionalFormatting":true},"type":"chart"}}}