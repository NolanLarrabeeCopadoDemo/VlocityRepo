{"dataSourceLinksInfo":{"enableAutomaticLinking":false,"excludeRelationships":[],"links":[{"fields":[{"dataSourceName":"RebateProgramMemberMaster","dataSourceNamespace":"","dataSourceType":"dataset","fieldName":"RebateProgram.Name"},{"dataSourceName":"ProgramRebateTypeMaster","dataSourceNamespace":"","dataSourceType":"dataset","fieldName":"RebateProgram.Name"},{"dataSourceName":"ProgramRebateTypePayoutSourceMaster","dataSourceNamespace":"","dataSourceType":"dataset","fieldName":"MemberPayout.PayoutPeriods.RebateProgram.Name"}],"label":"RebateType_Faceting","name":"Link_881"},{"fields":[{"dataSourceName":"RebateProgramMemberMaster","dataSourceNamespace":"","dataSourceType":"dataset","fieldName":"Account.Name"},{"dataSourceName":"ProgramRebateTypePayoutSourceMaster","dataSourceNamespace":"","dataSourceType":"dataset","fieldName":"MemberPayout.Member.Account.Name"}],"label":"Account Name Connection","name":"Link_471"},{"fields":[{"dataSourceName":"ProductMaster","dataSourceNamespace":"","dataSourceType":"dataset","fieldName":"Name"},{"dataSourceName":"ProgramRebateTypePayoutSourceMaster","dataSourceNamespace":"","dataSourceType":"dataset","fieldName":"Product.Name"}],"label":"Product Connection","name":"Link_594"},{"fields":[{"dataSourceName":"ProgramRebateTypePayoutSourceMaster","dataSourceNamespace":"","dataSourceType":"dataset","fieldName":"RebateType.IsIntegratable"},{"dataSourceName":"ProgramRebateTypeMaster","dataSourceNamespace":"","dataSourceType":"dataset","fieldName":"IsIntegratable"}],"label":"Is Integratable Connection","name":"Link_9621"},{"fields":[{"dataSourceName":"ProgramRebateTypePayoutSourceMaster","dataSourceNamespace":"","dataSourceType":"dataset","fieldName":"RebateType.CalculationBasis"},{"dataSourceName":"ProgramRebateTypeMaster","dataSourceNamespace":"","dataSourceType":"dataset","fieldName":"CalculationBasis"}],"label":"Calculation Basis Connection","name":"Link_5421"}]},"filters":[],"gridLayouts":[{"maxWidth":1100,"name":"Default","numColumns":50,"pages":[{"label":"Revenue Timeline","name":"2717d8ab-4a3a-4651-a539-9fcd21e6fcf9","navigationHidden":false,"widgets":[{"colspan":48,"column":1,"name":"container_1","row":1,"rowspan":9,"widgetStyle":{"backgroundColor":"rgb(8, 36, 75)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":34,"column":15,"name":"container_2","row":10,"rowspan":28,"widgetStyle":{"backgroundColor":"rgb(8, 36, 75)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":14,"column":1,"name":"container_3","row":10,"rowspan":7,"widgetStyle":{"backgroundColor":"#091A3E","borderColor":"rgb(0, 112, 210)","borderEdges":["left"],"borderRadius":0,"borderWidth":8}},{"colspan":22,"column":1,"name":"text_4","row":7,"rowspan":3,"widgetStyle":{"backgroundColor":"rgb(8, 36, 75)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":7,"column":33,"name":"dateselector_2","row":2,"rowspan":3,"widgetStyle":{"backgroundColor":"rgb(8, 36, 75)","borderColor":"#E6ECF2","borderEdges":["left","right","top"],"borderRadius":0,"borderWidth":1}},{"colspan":7,"column":41,"name":"dateselector_4","row":2,"rowspan":3,"widgetStyle":{"backgroundColor":"rgb(8, 36, 75)","borderColor":"#E6ECF2","borderEdges":["top","right","left"],"borderRadius":0,"borderWidth":1}},{"colspan":32,"column":16,"name":"chart_3","row":10,"rowspan":27,"widgetStyle":{"backgroundColor":"rgb(8, 36, 75)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":6,"column":2,"name":"number_1","row":13,"rowspan":3,"widgetStyle":{"backgroundColor":"#091A3E","borderColor":"#FFFFFF","borderEdges":[],"borderRadius":0,"borderWidth":8}},{"colspan":6,"column":2,"name":"number_2","row":20,"rowspan":3,"widgetStyle":{"backgroundColor":"#091A3E","borderColor":"rgba(230, 236, 242, 0)","borderEdges":["left"],"borderRadius":0,"borderWidth":8}},{"colspan":7,"column":10,"name":"listselector_1","row":2,"rowspan":4,"widgetStyle":{"backgroundColor":"rgb(8, 36, 75)","borderColor":"#E6ECF2","borderEdges":["all"],"borderRadius":0,"borderWidth":1}},{"colspan":7,"column":2,"name":"listselector_2","row":2,"rowspan":4,"widgetStyle":{"backgroundColor":"rgb(8, 36, 75)","borderColor":"#E6ECF2","borderEdges":["all"],"borderRadius":0,"borderWidth":1}},{"colspan":6,"column":2,"name":"number_3","row":34,"rowspan":3,"widgetStyle":{"backgroundColor":"#091A3E","borderColor":"rgba(230, 236, 242, 0)","borderEdges":["left"],"borderRadius":0,"borderWidth":8}},{"colspan":4,"column":8,"name":"text_5","row":14,"rowspan":2,"widgetStyle":{"backgroundColor":"#091A3E","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":4,"column":8,"name":"text_6","row":21,"rowspan":2,"widgetStyle":{"backgroundColor":"#091A3E","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":4,"column":8,"name":"text_7","row":35,"rowspan":2,"widgetStyle":{"backgroundColor":"#091A3E","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":48,"column":1,"name":"container_4","row":40,"rowspan":5,"widgetStyle":{"backgroundColor":"rgb(239, 243, 248)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":18,"column":2,"name":"text_8","row":41,"rowspan":3,"widgetStyle":{"backgroundColor":"rgba(230, 236, 242, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":5,"column":32,"name":"text_9","row":41,"rowspan":3,"widgetStyle":{"backgroundColor":"rgba(230, 236, 242, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":11,"column":37,"name":"listselector_5","row":41,"rowspan":3,"widgetStyle":{"backgroundColor":"#FFFFFF","borderColor":"#E6ECF2","borderEdges":["all"],"borderRadius":4,"borderWidth":1}},{"colspan":7,"column":1,"name":"text_10","row":46,"rowspan":3,"widgetStyle":{"borderEdges":[]}},{"colspan":23,"column":1,"name":"chart_4","row":50,"rowspan":22,"widgetStyle":{"borderEdges":[]}},{"colspan":7,"column":26,"name":"text_11","row":46,"rowspan":3,"widgetStyle":{"borderEdges":[]}},{"colspan":12,"column":33,"name":"listselector_7","row":46,"rowspan":3,"widgetStyle":{"backgroundColor":"#FFFFFF","borderColor":"#E6ECF2","borderEdges":["all"],"borderRadius":4,"borderWidth":1}},{"colspan":23,"column":26,"name":"chart_1","row":50,"rowspan":22,"widgetStyle":{"borderEdges":[]}},{"colspan":7,"column":33,"name":"text_12","row":5,"rowspan":1,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":["left","right","bottom"],"borderRadius":0,"borderWidth":1}},{"colspan":7,"column":41,"name":"text_13","row":5,"rowspan":1,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":["left","right","bottom"],"borderRadius":0,"borderWidth":1}},{"colspan":13,"column":2,"name":"link_1","row":11,"rowspan":2,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":13,"column":2,"name":"link_2","row":18,"rowspan":2,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"rgba(230, 236, 242, 0)","borderEdges":["left"],"borderRadius":0,"borderWidth":8}},{"colspan":14,"column":1,"name":"container_5","row":17,"rowspan":7,"widgetStyle":{"backgroundColor":"#091A3E","borderColor":"rgb(8, 36, 75)","borderEdges":["top"],"borderRadius":0,"borderWidth":4}},{"colspan":14,"column":1,"name":"container_6","row":31,"rowspan":7,"widgetStyle":{"backgroundColor":"#091A3E","borderColor":"rgb(8, 36, 75)","borderEdges":["top"],"borderRadius":0,"borderWidth":4}},{"colspan":13,"column":2,"name":"link_3","row":32,"rowspan":2,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"rgba(255, 255, 255, 0)","borderEdges":["left"],"borderRadius":0,"borderWidth":8}},{"colspan":12,"column":8,"name":"rangeselector_1","row":46,"rowspan":3,"widgetStyle":{"backgroundColor":"#FFFFFF","borderColor":"#E6ECF2","borderEdges":["all"],"borderRadius":4,"borderWidth":1}},{"colspan":6,"column":26,"name":"listselector_3","row":2,"rowspan":4,"widgetStyle":{"backgroundColor":"rgb(8, 36, 75)","borderColor":"#E6ECF2","borderEdges":["all"],"borderRadius":0,"borderWidth":1}},{"colspan":14,"column":1,"name":"container_12","row":24,"rowspan":7,"widgetStyle":{"backgroundColor":"#091A3E","borderColor":"rgb(8, 36, 75)","borderEdges":["top"],"borderRadius":0,"borderWidth":4}},{"colspan":6,"column":2,"name":"number_5","row":27,"rowspan":3,"widgetStyle":{"backgroundColor":"#091A3E","borderColor":"rgba(230, 236, 242, 0)","borderEdges":["left"],"borderRadius":0,"borderWidth":8}},{"colspan":4,"column":8,"name":"text_1","row":28,"rowspan":2,"widgetStyle":{"backgroundColor":"#091A3E","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":13,"column":2,"name":"link_7","row":25,"rowspan":2,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"rgba(230, 236, 242, 0)","borderEdges":["left"],"borderRadius":0,"borderWidth":8}},{"colspan":7,"column":18,"name":"listselector_9","row":2,"rowspan":4,"widgetStyle":{"backgroundColor":"rgb(8, 36, 75)","borderColor":"#E6ECF2","borderEdges":["all"],"borderRadius":0,"borderWidth":1}}]},{"label":"Rebates Timeline","name":"8f6832eb-1b22-4e18-8c44-05d7bfb94bd9","navigationHidden":true,"widgets":[{"colspan":48,"column":1,"name":"container_1","row":1,"rowspan":9,"widgetStyle":{"backgroundColor":"rgb(8, 36, 75)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":34,"column":15,"name":"container_2","row":10,"rowspan":28,"widgetStyle":{"backgroundColor":"rgb(8, 36, 75)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":22,"column":1,"name":"text_4","row":7,"rowspan":3,"widgetStyle":{"backgroundColor":"rgb(8, 36, 75)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":7,"column":33,"name":"dateselector_2","row":2,"rowspan":3,"widgetStyle":{"backgroundColor":"rgb(8, 36, 75)","borderColor":"#E6ECF2","borderEdges":["left","right","top"],"borderRadius":0,"borderWidth":1}},{"colspan":7,"column":41,"name":"dateselector_4","row":2,"rowspan":3,"widgetStyle":{"backgroundColor":"rgb(8, 36, 75)","borderColor":"#E6ECF2","borderEdges":["top","right","left"],"borderRadius":0,"borderWidth":1}},{"colspan":7,"column":10,"name":"listselector_1","row":2,"rowspan":4,"widgetStyle":{"backgroundColor":"rgb(8, 36, 75)","borderColor":"#E6ECF2","borderEdges":["all"],"borderRadius":0,"borderWidth":1}},{"colspan":7,"column":2,"name":"listselector_2","row":2,"rowspan":4,"widgetStyle":{"backgroundColor":"rgb(8, 36, 75)","borderColor":"#E6ECF2","borderEdges":["all"],"borderRadius":0,"borderWidth":1}},{"colspan":4,"column":8,"name":"text_5","row":14,"rowspan":2,"widgetStyle":{"backgroundColor":"#091A3E","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":48,"column":1,"name":"container_4","row":40,"rowspan":5,"widgetStyle":{"backgroundColor":"rgb(239, 243, 248)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":18,"column":2,"name":"text_8","row":41,"rowspan":3,"widgetStyle":{"backgroundColor":"rgba(230, 236, 242, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":5,"column":32,"name":"text_9","row":41,"rowspan":3,"widgetStyle":{"backgroundColor":"rgba(230, 236, 242, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":11,"column":37,"name":"listselector_5","row":41,"rowspan":3,"widgetStyle":{"backgroundColor":"#FFFFFF","borderColor":"#E6ECF2","borderEdges":["all"],"borderRadius":4,"borderWidth":1}},{"colspan":12,"column":8,"name":"rangeselector_1","row":46,"rowspan":3,"widgetStyle":{"backgroundColor":"#FFFFFF","borderColor":"#E6ECF2","borderEdges":["all"],"borderRadius":4,"borderWidth":1}},{"colspan":7,"column":1,"name":"text_10","row":46,"rowspan":3,"widgetStyle":{"borderEdges":[]}},{"colspan":23,"column":1,"name":"chart_4","row":50,"rowspan":22,"widgetStyle":{"borderEdges":[]}},{"colspan":7,"column":26,"name":"text_11","row":46,"rowspan":3,"widgetStyle":{"borderEdges":[]}},{"colspan":12,"column":33,"name":"listselector_7","row":46,"rowspan":3,"widgetStyle":{"backgroundColor":"#FFFFFF","borderColor":"#E6ECF2","borderEdges":["all"],"borderRadius":4,"borderWidth":1}},{"colspan":23,"column":26,"name":"chart_1","row":50,"rowspan":22,"widgetStyle":{"borderEdges":[]}},{"colspan":7,"column":33,"name":"text_12","row":5,"rowspan":1,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":["left","right","bottom"],"borderRadius":0,"borderWidth":1}},{"colspan":7,"column":41,"name":"text_13","row":5,"rowspan":1,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":["left","right","bottom"],"borderRadius":0,"borderWidth":1}},{"colspan":32,"column":16,"name":"chart_2","row":10,"rowspan":27,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":14,"column":1,"name":"container_6","row":31,"rowspan":7,"widgetStyle":{"backgroundColor":"#091A3E","borderColor":"rgb(8, 36, 75)","borderEdges":["top"],"borderRadius":0,"borderWidth":4}},{"colspan":6,"column":2,"name":"number_3","row":34,"rowspan":3,"widgetStyle":{"backgroundColor":"#091A3E","borderColor":"rgba(230, 236, 242, 0)","borderEdges":["left"],"borderRadius":0,"borderWidth":8}},{"colspan":4,"column":8,"name":"text_7","row":35,"rowspan":2,"widgetStyle":{"backgroundColor":"#091A3E","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":13,"column":2,"name":"link_3","row":32,"rowspan":2,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"rgba(255, 255, 255, 0)","borderEdges":["left"],"borderRadius":0,"borderWidth":8}},{"colspan":4,"column":8,"name":"text_6","row":21,"rowspan":2,"widgetStyle":{"backgroundColor":"#091A3E","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":14,"column":1,"name":"container_7","row":10,"rowspan":7,"widgetStyle":{"backgroundColor":"#091A3E","borderColor":"rgb(8, 36, 75)","borderEdges":["bottom"],"borderRadius":0,"borderWidth":4}},{"colspan":14,"column":1,"name":"container_8","row":17,"rowspan":7,"widgetStyle":{"backgroundColor":"#091A3E","borderColor":"rgb(0, 112, 210)","borderEdges":["left"],"borderRadius":0,"borderWidth":8}},{"colspan":13,"column":2,"name":"link_4","row":11,"rowspan":2,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"rgba(230, 236, 242, 0)","borderEdges":["left"],"borderRadius":0,"borderWidth":8}},{"colspan":6,"column":2,"name":"number_4","row":13,"rowspan":3,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"rgba(230, 236, 242, 0)","borderEdges":["left"],"borderRadius":0,"borderWidth":8}},{"colspan":6,"column":2,"name":"number_6","row":20,"rowspan":3,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"rgb(230, 236, 242)","borderEdges":[],"borderRadius":0,"borderWidth":8}},{"colspan":13,"column":2,"name":"link_5","row":18,"rowspan":2,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"rgba(230, 236, 242, 0)","borderEdges":[],"borderRadius":0,"borderWidth":8}},{"colspan":6,"column":26,"name":"listselector_3","row":2,"rowspan":4,"widgetStyle":{"backgroundColor":"rgb(8, 36, 75)","borderColor":"#E6ECF2","borderEdges":["all"],"borderRadius":0,"borderWidth":1}},{"colspan":14,"column":1,"name":"container_12","row":24,"rowspan":7,"widgetStyle":{"backgroundColor":"#091A3E","borderColor":"rgb(8, 36, 75)","borderEdges":["top"],"borderRadius":0,"borderWidth":4}},{"colspan":6,"column":2,"name":"number_5","row":27,"rowspan":3,"widgetStyle":{"backgroundColor":"#091A3E","borderColor":"rgba(230, 236, 242, 0)","borderEdges":["left"],"borderRadius":0,"borderWidth":8}},{"colspan":4,"column":8,"name":"text_1","row":28,"rowspan":2,"widgetStyle":{"backgroundColor":"#091A3E","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":13,"column":2,"name":"link_7","row":25,"rowspan":2,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"rgba(230, 236, 242, 0)","borderEdges":["left"],"borderRadius":0,"borderWidth":8}},{"colspan":7,"column":18,"name":"listselector_9","row":2,"rowspan":4,"widgetStyle":{"backgroundColor":"rgb(8, 36, 75)","borderColor":"#E6ECF2","borderEdges":["all"],"borderRadius":0,"borderWidth":1}}]},{"label":"Accruals Timeline","name":"e4dc066c-7a33-474e-85cc-f3583b124765","navigationHidden":true,"widgets":[{"colspan":48,"column":1,"name":"container_1","row":1,"rowspan":9,"widgetStyle":{"backgroundColor":"rgb(8, 36, 75)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":34,"column":15,"name":"container_2","row":10,"rowspan":28,"widgetStyle":{"backgroundColor":"rgb(8, 36, 75)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":22,"column":1,"name":"text_4","row":7,"rowspan":3,"widgetStyle":{"backgroundColor":"rgb(8, 36, 75)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":7,"column":33,"name":"dateselector_2","row":2,"rowspan":3,"widgetStyle":{"backgroundColor":"rgb(8, 36, 75)","borderColor":"#E6ECF2","borderEdges":["left","right","top"],"borderRadius":0,"borderWidth":1}},{"colspan":7,"column":41,"name":"dateselector_4","row":2,"rowspan":3,"widgetStyle":{"backgroundColor":"rgb(8, 36, 75)","borderColor":"#E6ECF2","borderEdges":["top","right","left"],"borderRadius":0,"borderWidth":1}},{"colspan":7,"column":10,"name":"listselector_1","row":2,"rowspan":4,"widgetStyle":{"backgroundColor":"rgb(8, 36, 75)","borderColor":"#E6ECF2","borderEdges":["all"],"borderRadius":0,"borderWidth":1}},{"colspan":7,"column":2,"name":"listselector_2","row":2,"rowspan":4,"widgetStyle":{"backgroundColor":"rgb(8, 36, 75)","borderColor":"#E6ECF2","borderEdges":["all"],"borderRadius":0,"borderWidth":1}},{"colspan":4,"column":8,"name":"text_5","row":14,"rowspan":2,"widgetStyle":{"backgroundColor":"#091A3E","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":48,"column":1,"name":"container_4","row":40,"rowspan":5,"widgetStyle":{"backgroundColor":"rgb(239, 243, 248)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":18,"column":2,"name":"text_8","row":41,"rowspan":3,"widgetStyle":{"backgroundColor":"rgba(230, 236, 242, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":5,"column":32,"name":"text_9","row":41,"rowspan":3,"widgetStyle":{"backgroundColor":"rgba(230, 236, 242, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":11,"column":37,"name":"listselector_5","row":41,"rowspan":3,"widgetStyle":{"backgroundColor":"#FFFFFF","borderColor":"#E6ECF2","borderEdges":["all"],"borderRadius":4,"borderWidth":1}},{"colspan":12,"column":8,"name":"rangeselector_1","row":46,"rowspan":3,"widgetStyle":{"backgroundColor":"#FFFFFF","borderColor":"#E6ECF2","borderEdges":["all"],"borderRadius":4,"borderWidth":1}},{"colspan":7,"column":1,"name":"text_10","row":46,"rowspan":3,"widgetStyle":{"borderEdges":[]}},{"colspan":23,"column":1,"name":"chart_4","row":50,"rowspan":22,"widgetStyle":{"borderEdges":[]}},{"colspan":7,"column":26,"name":"text_11","row":46,"rowspan":3,"widgetStyle":{"borderEdges":[]}},{"colspan":12,"column":33,"name":"listselector_7","row":46,"rowspan":3,"widgetStyle":{"backgroundColor":"#FFFFFF","borderColor":"#E6ECF2","borderEdges":["all"],"borderRadius":4,"borderWidth":1}},{"colspan":23,"column":26,"name":"chart_1","row":50,"rowspan":22,"widgetStyle":{"borderEdges":[]}},{"colspan":7,"column":33,"name":"text_12","row":5,"rowspan":1,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":["left","right","bottom"],"borderRadius":0,"borderWidth":1}},{"colspan":7,"column":41,"name":"text_13","row":5,"rowspan":1,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":["left","right","bottom"],"borderRadius":0,"borderWidth":1}},{"colspan":14,"column":1,"name":"container_6","row":31,"rowspan":7,"widgetStyle":{"backgroundColor":"#091A3E","borderColor":"rgb(8, 36, 75)","borderEdges":["top"],"borderRadius":0,"borderWidth":4}},{"colspan":6,"column":2,"name":"number_3","row":34,"rowspan":3,"widgetStyle":{"backgroundColor":"#091A3E","borderColor":"rgba(230, 236, 242, 0)","borderEdges":["left"],"borderRadius":0,"borderWidth":8}},{"colspan":4,"column":8,"name":"text_7","row":35,"rowspan":2,"widgetStyle":{"backgroundColor":"#091A3E","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":13,"column":2,"name":"link_3","row":32,"rowspan":2,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"rgba(255, 255, 255, 0)","borderEdges":["left"],"borderRadius":0,"borderWidth":8}},{"colspan":14,"column":1,"name":"container_7","row":10,"rowspan":7,"widgetStyle":{"backgroundColor":"#091A3E","borderColor":"rgb(8, 36, 75)","borderEdges":["bottom"],"borderRadius":0,"borderWidth":4}},{"colspan":13,"column":2,"name":"link_4","row":11,"rowspan":2,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"rgba(230, 236, 242, 0)","borderEdges":["left"],"borderRadius":0,"borderWidth":8}},{"colspan":6,"column":2,"name":"number_4","row":13,"rowspan":3,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"rgba(230, 236, 242, 0)","borderEdges":["left"],"borderRadius":0,"borderWidth":8}},{"colspan":6,"column":26,"name":"listselector_3","row":2,"rowspan":4,"widgetStyle":{"backgroundColor":"rgb(8, 36, 75)","borderColor":"#E6ECF2","borderEdges":["all"],"borderRadius":0,"borderWidth":1}},{"colspan":14,"column":1,"name":"container_13","row":24,"rowspan":7,"widgetStyle":{"backgroundColor":"#091A3E","borderColor":"rgb(0, 112, 210)","borderEdges":["left"],"borderRadius":0,"borderWidth":8}},{"colspan":13,"column":2,"name":"link_8","row":25,"rowspan":2,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"rgba(230, 236, 242, 0)","borderEdges":["left"],"borderRadius":0,"borderWidth":8}},{"colspan":14,"column":1,"name":"container_14","row":17,"rowspan":7,"widgetStyle":{"backgroundColor":"#091A3E","borderColor":"rgb(8, 36, 75)","borderEdges":["bottom"],"borderRadius":0,"borderWidth":4}},{"colspan":4,"column":8,"name":"text_3","row":21,"rowspan":2,"widgetStyle":{"backgroundColor":"#091A3E","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":6,"column":2,"name":"number_9","row":20,"rowspan":3,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"rgb(230, 236, 242)","borderEdges":[],"borderRadius":0,"borderWidth":8}},{"colspan":13,"column":2,"name":"link_9","row":18,"rowspan":2,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"rgba(230, 236, 242, 0)","borderEdges":[],"borderRadius":0,"borderWidth":8}},{"colspan":32,"column":16,"name":"chart_5","row":10,"rowspan":27,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":6,"column":2,"name":"number_5","row":27,"rowspan":3,"widgetStyle":{"backgroundColor":"#091A3E","borderColor":"rgba(230, 236, 242, 0)","borderEdges":["left"],"borderRadius":0,"borderWidth":8}},{"colspan":4,"column":8,"name":"text_1","row":28,"rowspan":2,"widgetStyle":{"backgroundColor":"#091A3E","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":7,"column":18,"name":"listselector_9","row":2,"rowspan":4,"widgetStyle":{"backgroundColor":"rgb(8, 36, 75)","borderColor":"#E6ECF2","borderEdges":["all"],"borderRadius":0,"borderWidth":1}}]},{"label":"Members Timeline","name":"ec72b992-fd64-410e-97c4-90b5dd7573c1","navigationHidden":true,"widgets":[{"colspan":48,"column":1,"name":"container_1","row":1,"rowspan":9,"widgetStyle":{"backgroundColor":"rgb(8, 36, 75)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":34,"column":15,"name":"container_2","row":10,"rowspan":28,"widgetStyle":{"backgroundColor":"rgb(8, 36, 75)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":22,"column":1,"name":"text_4","row":7,"rowspan":3,"widgetStyle":{"backgroundColor":"rgb(8, 36, 75)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":7,"column":33,"name":"dateselector_2","row":2,"rowspan":3,"widgetStyle":{"backgroundColor":"rgb(8, 36, 75)","borderColor":"#E6ECF2","borderEdges":["left","right","top"],"borderRadius":0,"borderWidth":1}},{"colspan":7,"column":41,"name":"dateselector_4","row":2,"rowspan":3,"widgetStyle":{"backgroundColor":"rgb(8, 36, 75)","borderColor":"#E6ECF2","borderEdges":["top","right","left"],"borderRadius":0,"borderWidth":1}},{"colspan":7,"column":10,"name":"listselector_1","row":2,"rowspan":4,"widgetStyle":{"backgroundColor":"rgb(8, 36, 75)","borderColor":"#E6ECF2","borderEdges":["all"],"borderRadius":0,"borderWidth":1}},{"colspan":7,"column":2,"name":"listselector_2","row":2,"rowspan":4,"widgetStyle":{"backgroundColor":"rgb(8, 36, 75)","borderColor":"#E6ECF2","borderEdges":["all"],"borderRadius":0,"borderWidth":1}},{"colspan":4,"column":8,"name":"text_7","row":35,"rowspan":2,"widgetStyle":{"backgroundColor":"#091A3E","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":48,"column":1,"name":"container_4","row":40,"rowspan":5,"widgetStyle":{"backgroundColor":"rgb(239, 243, 248)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":18,"column":2,"name":"text_8","row":41,"rowspan":3,"widgetStyle":{"backgroundColor":"rgba(230, 236, 242, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":5,"column":32,"name":"text_9","row":41,"rowspan":3,"widgetStyle":{"backgroundColor":"rgba(230, 236, 242, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":11,"column":37,"name":"listselector_5","row":41,"rowspan":3,"widgetStyle":{"backgroundColor":"#FFFFFF","borderColor":"#E6ECF2","borderEdges":["all"],"borderRadius":4,"borderWidth":1}},{"colspan":12,"column":8,"name":"rangeselector_1","row":46,"rowspan":3,"widgetStyle":{"backgroundColor":"#FFFFFF","borderColor":"#E6ECF2","borderEdges":["all"],"borderRadius":4,"borderWidth":1}},{"colspan":7,"column":1,"name":"text_10","row":46,"rowspan":3,"widgetStyle":{"borderEdges":[]}},{"colspan":23,"column":1,"name":"chart_4","row":50,"rowspan":22,"widgetStyle":{"borderEdges":[]}},{"colspan":7,"column":26,"name":"text_11","row":46,"rowspan":3,"widgetStyle":{"borderEdges":[]}},{"colspan":12,"column":33,"name":"listselector_7","row":46,"rowspan":3,"widgetStyle":{"backgroundColor":"#FFFFFF","borderColor":"#E6ECF2","borderEdges":["all"],"borderRadius":4,"borderWidth":1}},{"colspan":23,"column":26,"name":"chart_1","row":50,"rowspan":22,"widgetStyle":{"borderEdges":[]}},{"colspan":7,"column":33,"name":"text_12","row":5,"rowspan":1,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":["left","right","bottom"],"borderRadius":0,"borderWidth":1}},{"colspan":7,"column":41,"name":"text_13","row":5,"rowspan":1,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":["left","right","bottom"],"borderRadius":0,"borderWidth":1}},{"colspan":32,"column":16,"name":"chart_6","row":10,"rowspan":27,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":4,"column":8,"name":"text_5","row":14,"rowspan":2,"widgetStyle":{"backgroundColor":"#091A3E","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":13,"column":2,"name":"link_4","row":11,"rowspan":2,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"rgba(230, 236, 242, 0)","borderEdges":["left"],"borderRadius":0,"borderWidth":8}},{"colspan":6,"column":2,"name":"number_4","row":13,"rowspan":3,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"rgba(230, 236, 242, 0)","borderEdges":["left"],"borderRadius":0,"borderWidth":8}},{"colspan":6,"column":2,"name":"number_2","row":20,"rowspan":3,"widgetStyle":{"backgroundColor":"#091A3E","borderColor":"rgba(230, 236, 242, 0)","borderEdges":["left"],"borderRadius":0,"borderWidth":8}},{"colspan":4,"column":8,"name":"text_6","row":21,"rowspan":2,"widgetStyle":{"backgroundColor":"#091A3E","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":13,"column":2,"name":"link_2","row":18,"rowspan":2,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"rgba(230, 236, 242, 0)","borderEdges":["left"],"borderRadius":0,"borderWidth":8}},{"colspan":14,"column":1,"name":"container_9","row":10,"rowspan":7,"widgetStyle":{"backgroundColor":"#091A3E","borderColor":"rgb(8, 36, 75)","borderEdges":[],"borderRadius":0,"borderWidth":4}},{"colspan":14,"column":1,"name":"container_10","row":31,"rowspan":7,"widgetStyle":{"backgroundColor":"#091A3E","borderColor":"rgb(0, 112, 210)","borderEdges":["left"],"borderRadius":0,"borderWidth":8}},{"colspan":14,"column":1,"name":"container_11","row":17,"rowspan":7,"widgetStyle":{"backgroundColor":"#091A3E","borderColor":"rgb(8, 36, 75)","borderEdges":["top","bottom"],"borderRadius":0,"borderWidth":4}},{"colspan":6,"column":2,"name":"number_7","row":34,"rowspan":3,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":13,"column":2,"name":"link_6","row":32,"rowspan":2,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"rgba(255, 255, 255, 0)","borderEdges":[],"borderRadius":0,"borderWidth":8}},{"colspan":6,"column":26,"name":"listselector_3","row":2,"rowspan":4,"widgetStyle":{"backgroundColor":"rgb(8, 36, 75)","borderColor":"#E6ECF2","borderEdges":["all"],"borderRadius":0,"borderWidth":1}},{"colspan":14,"column":1,"name":"container_15","row":24,"rowspan":7,"widgetStyle":{"backgroundColor":"#091A3E","borderColor":"rgb(8, 36, 75)","borderEdges":["bottom"],"borderRadius":0,"borderWidth":4}},{"colspan":13,"column":2,"name":"link_10","row":25,"rowspan":2,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"rgba(230, 236, 242, 0)","borderEdges":["left"],"borderRadius":0,"borderWidth":8}},{"colspan":6,"column":2,"name":"number_5","row":27,"rowspan":3,"widgetStyle":{"backgroundColor":"#091A3E","borderColor":"rgba(230, 236, 242, 0)","borderEdges":["left"],"borderRadius":0,"borderWidth":8}},{"colspan":4,"column":8,"name":"text_1","row":28,"rowspan":2,"widgetStyle":{"backgroundColor":"#091A3E","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":7,"column":18,"name":"listselector_9","row":2,"rowspan":4,"widgetStyle":{"backgroundColor":"rgb(8, 36, 75)","borderColor":"#E6ECF2","borderEdges":["all"],"borderRadius":0,"borderWidth":1}}]}],"rowHeight":"fine","selectors":[],"style":{"alignmentX":"left","alignmentY":"top","backgroundColor":"#FFFFFF","cellSpacingX":0,"cellSpacingY":0,"fit":"original","gutterColor":"#C5D3E0"},"version":1.0}],"layouts":[],"steps":{"Date_Filter_1":{"broadcastFacet":true,"groups":[],"numbers":[],"query":"q = load \"RebatePayoutPeriodMaster\";\r\nq = foreach q generate \"1970\" as 'Date_Year', \"01\" as 'Date_Month', \"01\" as 'Date_Day';\r\nq = group q by ('Date_Year', 'Date_Month', 'Date_Day');\r\nq = foreach q generate 'Date_Year', 'Date_Month', 'Date_Day', count() as 'sum';\r\nq = fill q by (dateCols=('Date_Year','Date_Month','Date_Day', \"Y-M-D\"));\r\nq = timeseries q generate 'sum' as 'cnt' with (length=60000,  dateCols=('Date_Year','Date_Month','Date_Day', \"Y-M-D\"));\r\nq = foreach q generate 'Date_Year' + \"-\" + 'Date_Month' + \"-\" + 'Date_Day'+ \" 00:00:00\" as 'Date','Date_Year', 'Date_Month', 'Date_Day';\r\n\r\nqa = filter q by {{row(Date_Selector_1.selection, [0], [\"min\", \"max\"]).asDateRange(\"date('Date_Year', 'Date_Month', 'Date_Day')\")}};\r\nqa = foreach qa generate toDate('Date') as 'Date', date_to_epoch(toDate('Date')) as 'Date_sec_epoch';\r\n\r\n\r\nqb = filter q by {{row(Date_Selector_2.selection, [0], [\"min\", \"max\"]).asDateRange(\"date('Date_Year', 'Date_Month', 'Date_Day')\")}};\r\nqb = foreach qb generate toDate('Date') as 'Date1', date_to_epoch(toDate('Date')) as 'Date_sec_epoch1';\r\n\r\n\r\n\r\nqc = cogroup qa by all full, qb by all;\r\n\r\nqc = foreach qc generate min(qa.'Date') as 'Min Date', toDate(max(qa.'Date_sec_epoch')+86399) as 'Max Date', min(qa.'Date_sec_epoch')*1000 as 'Min',\r\n   (max(qa.'Date_sec_epoch')+86399)*1000 as 'Max',min(qb.'Date1') as 'Prev Min Date', toDate(max(qb.'Date_sec_epoch1')+86399) as 'Prev Max Date', min(qb.'Date_sec_epoch1')*1000 as 'Prev_Min',\r\n     (max(qb.'Date_sec_epoch1')+86399)*1000 as 'Prev_Max';\r\n","receiveFacetSource":{"mode":"none","steps":[]},"selectMode":"single","strings":[],"type":"saql","useGlobal":true,"visualizationParameters":{"parameters":{"autoFitMode":"keepLabels","bins":{"breakpoints":{"high":100,"low":0},"bands":{"high":{"color":"#008000","label":""},"low":{"color":"#B22222","label":""},"medium":{"color":"#ffa500","label":""}}},"legend":{"descOrder":false,"showHeader":true,"show":true,"customSize":"auto","position":"right-top","inside":false},"axisMode":"multi","tooltip":{"content":{"legend":{"showBinLabel":true,"measures":[],"showNullValues":true,"customizeLegend":false,"showPercentage":true,"showDimensions":true,"showMeasures":true,"dimensions":[]}}},"visualizationType":"hbar","title":{"fontSize":14,"subtitleFontSize":11,"label":"","align":"center","subtitleLabel":""},"binValues":false,"trellis":{"flipLabels":false,"showGridLines":true,"size":[100,100],"enable":false,"type":"x","chartsPerLine":4},"showActionMenu":true,"measureAxis2":{"sqrtScale":false,"showTitle":true,"showAxis":true,"title":"","customDomain":{"showDomain":false}},"measureAxis1":{"sqrtScale":false,"showTitle":true,"showAxis":true,"title":"","customDomain":{"showDomain":false}},"valueType":"compactNumber","theme":"wave","compactDecimalDigits":-1,"dimensionAxis":{"showTitle":true,"customSize":"auto","showAxis":true,"title":"","icons":{"useIcons":false,"iconProps":{"fit":"cover","column":"","type":"round"}}},"applyConditionalFormatting":true},"type":"chart"}},"RebateAmount_1":{"broadcastFacet":true,"groups":[],"label":"RebateAmount_1","numbers":[],"query":"all_payout_sources = load \"ProgramRebateTypePayoutSourceMaster\";\r\ncurrent_valid_payout_sources = filter all_payout_sources by 'MemberPayout.PayoutPeriods.StartDate_sec_epoch' <= {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000;\r\ncurrent_valid_payout_sources = filter current_valid_payout_sources by 'MemberPayout.PayoutPeriods.EndDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000;\r\nStart_Current = foreach current_valid_payout_sources generate {{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000 as 'Start', {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000 as 'End', 'Id'+\"<#>\"+coalesce('MemberPayout.Member.Account.Name',\"-\") as 'Id', 'MemberPayout.PayoutPeriods.StartDate_sec_epoch' as 'Start Date', 'MemberPayout.PayoutPeriods.EndDate_sec_epoch' as 'End Date', case when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000) then date_to_string(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch'),\"yyyy\") else date_to_string(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000),\"yyyy\") end as 'Date_Year', case when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000) then date_to_string(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch'),\"MM\") else date_to_string(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000),\"MM\") end as 'Date_Month', case when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' >= date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch')))) && {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000 >= date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch'))) then (daysBetween(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch'),month_last_day(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch')))) * 'DailyTotalTransactionAmount' when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000) && {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000 <= date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch'))) then (daysBetween(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch'),toDate({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000))) * 'DailyTotalTransactionAmount' when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < {{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' >= date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000)))) && {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000 >= date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000))) then (daysBetween(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000),month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000)))) * 'DailyTotalTransactionAmount' when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < {{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' <= date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000)))) && {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000 >= 'MemberPayout.PayoutPeriods.EndDate_sec_epoch' then (daysBetween(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000),toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) * 'DailyTotalTransactionAmount' when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < {{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000) && ({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000 <= date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000)))) && {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000 <= 'MemberPayout.PayoutPeriods.EndDate_sec_epoch' then (daysBetween(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000),toDate({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000))) * 'DailyTotalTransactionAmount' else 'AggregateObject.TotalTransactionAmount' end as 'TotalTransactionAmount', case when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' >= date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch')))) && {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000 >= date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch'))) then (daysBetween(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch'),month_last_day(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch')))) * 'DailyFinalRebateAmount' when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000) && {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000 <= date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch'))) then (daysBetween(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch'),toDate({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000))) * 'DailyFinalRebateAmount' when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < {{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' >= date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000)))) && {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000 >= date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000))) then (daysBetween(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000),month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000)))) * 'DailyFinalRebateAmount' when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < {{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' <= date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000)))) && {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000 >= 'MemberPayout.PayoutPeriods.EndDate_sec_epoch' then (daysBetween(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000),toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) * 'DailyFinalRebateAmount' when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < {{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000) && ({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000 <= date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000)))) && {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000 <= 'MemberPayout.PayoutPeriods.EndDate_sec_epoch' then (daysBetween(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000),toDate({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000))) * 'DailyFinalRebateAmount' else 'FinalRebateAmount' end as 'RebateAmount', case when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' >= date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch')))) && {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000 >= date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch'))) then (daysBetween(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch'),month_last_day(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch')))) * 'DailyQuantity' when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000) && {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000 <= date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch'))) then (daysBetween(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch'),toDate({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000))) * 'DailyQuantity' when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < {{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' >= date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000)))) && {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000 >= date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000))) then (daysBetween(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000),month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000)))) * 'DailyQuantity' when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < {{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' <= date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000)))) && {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000 >= 'MemberPayout.PayoutPeriods.EndDate_sec_epoch' then (daysBetween(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000),toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) * 'DailyQuantity' when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < {{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000) && ({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000 <= date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000)))) && {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000 <= 'MemberPayout.PayoutPeriods.EndDate_sec_epoch' then (daysBetween(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000),toDate({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000))) * 'DailyQuantity' else 'AggregateObject.TotalQuantity' end as 'TotalQuantity', 'DailyTotalTransactionAmount' as 'DailyTotalTransactionAmount', 'DailyFinalRebateAmount' as 'DailyFinalRebateAmount', 'DailyQuantity' as 'DailyQuantity';\r\nEnd_Current = foreach current_valid_payout_sources generate {{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000 as 'Start', {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000 as 'End', 'Id'+\"<#>\"+coalesce('MemberPayout.Member.Account.Name',\"-\") as 'Id', 'MemberPayout.PayoutPeriods.StartDate_sec_epoch' as 'Start Date', 'MemberPayout.PayoutPeriods.EndDate_sec_epoch' as 'End Date', case when ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' < {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000) then date_to_string(toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'),\"yyyy\") else  date_to_string(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000),\"yyyy\") end as 'Date_Year', case when ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' < {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000) then date_to_string(toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'),\"MM\") else  date_to_string(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000),\"MM\") end as 'Date_Month', case when (('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < (date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) - 2764800)))) + 86400)) && ({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000 < (date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) - 2764800)))) + 86400)) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' <= {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000))  then (daysBetween(toDate((date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) - 2764800)))))),toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) * 'DailyTotalTransactionAmount' when (('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < (date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000))) - 2764800)))) + 86400)) && ({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000 < (date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000))) - 2764800)))) + 86400)) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000)) then (daysBetween(toDate((date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000))) - 2764800)))))),toDate({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000))) * 'DailyTotalTransactionAmount' else 0 end as 'TotalTransactionAmount', case when (('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < (date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) - 2764800)))) + 86400)) && ({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000 < (date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) - 2764800)))) + 86400)) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' <= {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000))  then (daysBetween(toDate((date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) - 2764800)))))),toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) * 'DailyFinalRebateAmount' when (('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < (date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000))) - 2764800)))) + 86400)) && ({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000 < (date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000))) - 2764800)))) + 86400)) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000)) then (daysBetween(toDate((date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000))) - 2764800)))))),toDate({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000))) * 'DailyFinalRebateAmount' else 0 end as 'RebateAmount', case when (('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < (date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) - 2764800)))) + 86400)) && ({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000 < (date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) - 2764800)))) + 86400)) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' <= {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000))  then (daysBetween(toDate((date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) - 2764800)))))),toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) * 'DailyQuantity' when (('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < (date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000))) - 2764800)))) + 86400)) && ({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000 < (date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000))) - 2764800)))) + 86400)) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000)) then (daysBetween(toDate((date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000))) - 2764800)))))),toDate({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000))) * 'DailyQuantity' else 0 end as 'TotalQuantity', 'DailyTotalTransactionAmount' as 'DailyTotalTransactionAmount', 'DailyFinalRebateAmount' as 'DailyFinalRebateAmount', 'DailyQuantity' as 'DailyQuantity';\r\nDataForFill_Current = union Start_Current, End_Current;\r\nDataForFill_Current = foreach DataForFill_Current generate 'Id' as 'Id', 'Date_Year' as 'Date_Year', 'Date_Month' as 'Date_Month','Start' as 'Start', 'End' as 'End', 'Start Date' as 'Start Date', 'End Date' as 'End Date', 'TotalTransactionAmount' as 'TotalTransactionAmount', 'RebateAmount' as 'RebateAmount', 'TotalQuantity' as 'TotalQuantity', 'DailyTotalTransactionAmount' as 'DailyTotalTransactionAmount', 'DailyFinalRebateAmount' as 'DailyFinalRebateAmount', 'DailyQuantity' as 'DailyQuantity';\r\nFilledData_Current = fill DataForFill_Current by (dateCols=('Date_Year', 'Date_Month', \"Y-M\"), partition='Id');\r\nFilledData_Current = group FilledData_Current by ('Id', 'Date_Year', 'Date_Month');\r\nFilledData_Current = foreach FilledData_Current generate 'Id', 'Date_Year', 'Date_Month', date_to_epoch(toDate('Date_Year'+\"-\"+'Date_Month'+\"-01\",\"yyyy-MM-dd\")) as 'Date', first('Start') as 'Start', min(first('Start')) over ([..0] partition by 'Id' order by ('Date_Year','Date_Month')) as 'StartFilter', first('End') as 'End', min(first('End')) over ([..0] partition by 'Id' order by ('Date_Year','Date_Month')) as 'EndFilter',  min(first('Start Date')) over ([..0] partition by 'Id' order by ('Date_Year','Date_Month')) as 'Start Date', max(first('End Date')) over ([..] partition by 'Id' ) as 'End Date',  sum('TotalTransactionAmount') as 'TotalTransactionAmount', min(first('DailyTotalTransactionAmount'))over ([..0] partition by 'Id' order by ('Date_Year','Date_Month')) as 'DailyTotalTransactionAmount', sum('RebateAmount') as 'RebateAmount', min(first('DailyFinalRebateAmount'))over ([..0] partition by 'Id' order by ('Date_Year','Date_Month')) as 'DailyFinalRebateAmount', sum('TotalQuantity') as 'TotalQuantity', min(first('DailyQuantity'))over ([..0] partition by 'Id' order by ('Date_Year','Date_Month')) as 'DailyQuantity';\r\nFilledData_Current = filter FilledData_Current by coalesce('Start',0) != 0 || ('Date' > 'StartFilter' && 'Date' > 'Start Date' && 'Date' < 'End Date' && 'Date' < 'EndFilter');\r\nFilledData_Current = foreach FilledData_Current generate substr('Id',index_of('Id',\"<#>\")+3) as 'MemberPayout.Member.Account.Name', 'Date_Year', 'Date_Month', (case when 'TotalTransactionAmount' is null then month_days(toDate('Date'))*'DailyTotalTransactionAmount' else 'TotalTransactionAmount' end) as 'TotalTransactionAmount', (case when 'RebateAmount' is null then month_days(toDate('Date'))*'DailyFinalRebateAmount' else 'RebateAmount' end) as 'RebateAmount', (case when 'TotalQuantity' is null then month_days(toDate('Date'))*'DailyQuantity' else 'TotalQuantity' end) as 'TotalQuantity';\r\n\r\nRebateProgramMemberMaster4 = load \"RebateProgramMemberMaster\";\r\nRebateProgramMemberMaster4 = group RebateProgramMemberMaster4 by 'Account.Name';\r\n\r\nresult1 = cogroup RebateProgramMemberMaster4 by 'Account.Name' left, FilledData_Current by 'MemberPayout.Member.Account.Name';\r\nresult1 = foreach result1 generate RebateProgramMemberMaster4.'Account.Name'  as 'Account.Name', coalesce(sum(FilledData_Current.'TotalTransactionAmount'),0) as 'AggregateObject.TotalTransactionAmount', sum(FilledData_Current.'RebateAmount') as 'RebateAmount';\r\n\r\nresult1 = group result1 by all;\r\nresult1 = foreach result1 generate min('RebateAmount') as 'min', max('RebateAmount') as 'max';","receiveFacetSource":{"mode":"all","steps":[]},"selectMode":"single","strings":[],"type":"saql","useGlobal":true,"visualizationParameters":{"parameters":{"autoFitMode":"keepLabels","bins":{"breakpoints":{"high":100,"low":0},"bands":{"high":{"color":"#008000","label":""},"low":{"color":"#B22222","label":""},"medium":{"color":"#ffa500","label":""}}},"legend":{"descOrder":false,"showHeader":true,"show":true,"customSize":"auto","position":"right-top","inside":false},"axisMode":"multi","tooltip":{"content":{"legend":{"showBinLabel":true,"measures":[],"showNullValues":true,"customizeLegend":false,"showPercentage":true,"showDimensions":true,"showMeasures":true,"dimensions":[]}}},"visualizationType":"hbar","title":{"fontSize":14,"subtitleFontSize":11,"label":"","align":"center","subtitleLabel":""},"binValues":false,"trellis":{"flipLabels":false,"showGridLines":true,"size":[100,100],"enable":false,"type":"x","chartsPerLine":4},"showActionMenu":true,"measureAxis2":{"sqrtScale":false,"showTitle":true,"showAxis":true,"title":"","customDomain":{"showDomain":false}},"measureAxis1":{"sqrtScale":false,"showTitle":true,"showAxis":true,"title":"","customDomain":{"showDomain":false}},"valueType":"compactNumber","theme":"wave","compactDecimalDigits":-1,"dimensionAxis":{"showTitle":true,"customSize":"auto","showAxis":true,"title":"","icons":{"useIcons":false,"iconProps":{"fit":"cover","column":"","type":"round"}}},"applyConditionalFormatting":true},"type":"chart"}},"Account_Name_1":{"broadcastFacet":true,"datasets":[{"name":"RebateProgramMemberMaster"}],"isGlobal":false,"query":{"query":"{\"measures\":[[\"count\",\"*\"]],\"groups\":[\"Account.Name\"]}","version":-1.0},"receiveFacetSource":{"mode":"all","steps":[]},"selectMode":"single","start":"[]","type":"aggregateflex","useGlobal":true,"visualizationParameters":{}},"Accruals_Amount":{"broadcastFacet":true,"groups":[],"numbers":[],"query":"all_payout_sources = load \"ProgramRebateTypePayoutSourceMaster\";\r\nall_payout_sources = filter all_payout_sources by {{cell(RebateProgram_Name_1.selection, 0, \"RebateProgram.Name\").asEquality(\"MemberPayout.PayoutPeriods.RebateProgram.Name\")}};\r\nall_payout_sources = filter all_payout_sources by {{cell(Name_2.selection, 0, \"Name\").asEquality(\"RebateType.Name\")}};\r\nall_payout_sources = filter all_payout_sources by {{cell(Account_Name_1.selection, 0, \"Account.Name\").asEquality(\"MemberPayout.Member.Account.Name\")}};\r\ncurrent_valid_payout_sources = filter all_payout_sources by 'MemberPayout.PayoutPeriods.StartDate_sec_epoch' <= {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000;\r\ncurrent_valid_payout_sources = filter current_valid_payout_sources by 'MemberPayout.PayoutPeriods.EndDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000;\r\nStart_Current = foreach current_valid_payout_sources generate {{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000 as 'Start', {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000 as 'End', 'Id' as 'Id', 'MemberPayout.PayoutPeriods.StartDate_sec_epoch' as 'Start Date', 'MemberPayout.PayoutPeriods.EndDate_sec_epoch' as 'End Date', case when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000) then date_to_string(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch'),\"yyyy\") else date_to_string(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000),\"yyyy\") end as 'Date_Year', case when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000) then date_to_string(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch'),\"MM\") else date_to_string(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000),\"MM\") end as 'Date_Month', case when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' >= date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch')))) && {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000 >= date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch'))) then (daysBetween(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch'),month_last_day(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch')))) * 'DailyAccruedAmount' when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000) && {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000 <= date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch'))) then (daysBetween(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch'),toDate({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000))) * 'DailyAccruedAmount' when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < {{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' >= date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000)))) && {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000 >= date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000))) then (daysBetween(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000),month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000)))) * 'DailyAccruedAmount' when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < {{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' <= date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000)))) && {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000 >= 'MemberPayout.PayoutPeriods.EndDate_sec_epoch' then (daysBetween(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000),toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) * 'DailyAccruedAmount' when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < {{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000) && ({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000 <= date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000)))) && {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000 <= 'MemberPayout.PayoutPeriods.EndDate_sec_epoch' then (daysBetween(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000),toDate({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000))) * 'DailyAccruedAmount' else 'AccruedAmount' end as 'AccruedAmount',\r\n\r\n  'DailyAccruedAmount' as 'DailyAccruedAmount';\r\nEnd_Current = foreach current_valid_payout_sources generate {{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000 as 'Start', {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000 as 'End', 'Id' as 'Id', 'MemberPayout.PayoutPeriods.StartDate_sec_epoch' as 'Start Date', 'MemberPayout.PayoutPeriods.EndDate_sec_epoch' as 'End Date', case when ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' < {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000) then date_to_string(toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'),\"yyyy\") else  date_to_string(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000),\"yyyy\") end as 'Date_Year', case when ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' < {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000) then date_to_string(toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'),\"MM\") else  date_to_string(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000),\"MM\") end as 'Date_Month', case when (('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < (date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) - 2764800)))) + 86400)) && ({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000 < (date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) - 2764800)))) + 86400)) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' <= {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000))  then (daysBetween(toDate((date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) - 2764800)))))),toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) * 'DailyAccruedAmount' when (('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < (date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000))) - 2764800)))) + 86400)) && ({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000 < (date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000))) - 2764800)))) + 86400)) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000)) then (daysBetween(toDate((date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000))) - 2764800)))))),toDate({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000))) * 'DailyAccruedAmount' else 0 end as 'AccruedAmount',\r\n\r\n\r\n\r\n'DailyAccruedAmount' as 'DailyAccruedAmount';\r\nDataForFill_Current = union Start_Current, End_Current;\r\nDataForFill_Current = foreach DataForFill_Current generate 'Id' as 'Id', 'Date_Year' as 'Date_Year', 'Date_Month' as 'Date_Month','Start' as 'Start', 'End' as 'End', 'Start Date' as 'Start Date', 'End Date' as 'End Date','AccruedAmount' as 'AccruedAmount', 'DailyAccruedAmount' as 'DailyAccruedAmount';\r\nFilledData_Current = fill DataForFill_Current by (dateCols=('Date_Year', 'Date_Month', \"Y-M\"), partition='Id');\r\nFilledData_Current = group FilledData_Current by ('Id', 'Date_Year', 'Date_Month');\r\nFilledData_Current = foreach FilledData_Current generate 'Id', 'Date_Year', 'Date_Month', date_to_epoch(toDate('Date_Year'+\"-\"+'Date_Month'+\"-01\",\"yyyy-MM-dd\")) as 'Date', first('Start') as 'Start', min(first('Start')) over ([..0] partition by 'Id' order by ('Date_Year','Date_Month')) as 'StartFilter', first('End') as 'End', min(first('End')) over ([..0] partition by 'Id' order by ('Date_Year','Date_Month')) as 'EndFilter',  min(first('Start Date')) over ([..0] partition by 'Id' order by ('Date_Year','Date_Month')) as 'Start Date', max(first('End Date')) over ([..] partition by 'Id' ) as 'End Date', sum('AccruedAmount') as 'AccruedAmount', min(first('DailyAccruedAmount'))over ([..0] partition by 'Id' order by ('Date_Year','Date_Month')) as 'DailyAccruedAmount';\r\nFilledData_Current = filter FilledData_Current by coalesce('Start',0) != 0 || ('Date' > 'StartFilter' && 'Date' > 'Start Date' && 'Date' < 'End Date' && 'Date' < 'EndFilter');\r\nFilledData_Current = foreach FilledData_Current generate 'Id', 'Date_Year', 'Date_Month',\r\n(case when 'AccruedAmount' is null then month_days(toDate('Date'))*'DailyAccruedAmount' else 'AccruedAmount' end) as 'AccruedAmount';\r\nprevious_valid_payout_sources= filter all_payout_sources by 'MemberPayout.PayoutPeriods.StartDate_sec_epoch' <= {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000;\r\nprevious_valid_payout_sources= filter previous_valid_payout_sources by 'MemberPayout.PayoutPeriods.EndDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000;\r\nStart_Previous = foreach previous_valid_payout_sources generate {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000 as 'Start', {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000 as 'End', 'Id' as 'Id', 'MemberPayout.PayoutPeriods.StartDate_sec_epoch' as 'Start Date', 'MemberPayout.PayoutPeriods.EndDate_sec_epoch' as 'End Date', case when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000) then date_to_string(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch'),\"yyyy\") else date_to_string(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000),\"yyyy\") end as 'Date_Year', case when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000) then date_to_string(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch'),\"MM\") else date_to_string(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000),\"MM\") end as 'Date_Month', \r\n\r\ncase when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' >= date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch')))) && {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000 >= date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch'))) then (daysBetween(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch'),month_last_day(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch')))) * 'DailyAccruedAmount' when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000) && {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000 <= date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch'))) then (daysBetween(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch'),toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000))) * 'DailyAccruedAmount' when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' >= date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000)))) && {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000 >= date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000))) then (daysBetween(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000),month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000)))) * 'DailyAccruedAmount' when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' <= date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000)))) && {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000 >= 'MemberPayout.PayoutPeriods.EndDate_sec_epoch' then (daysBetween(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000),toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) * 'DailyAccruedAmount' when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000) && ({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000 <= date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000)))) && {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000 <= 'MemberPayout.PayoutPeriods.EndDate_sec_epoch' then (daysBetween(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000),toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000))) * 'DailyAccruedAmount' else 'AccruedAmount' end as 'AccruedAmount',\r\n\r\n 'DailyAccruedAmount' as 'DailyAccruedAmount';\r\nEnd_Previous = foreach previous_valid_payout_sources generate {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000 as 'Start', {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000 as 'End', 'Id' as 'Id', 'MemberPayout.PayoutPeriods.StartDate_sec_epoch' as 'Start Date', 'MemberPayout.PayoutPeriods.EndDate_sec_epoch' as 'End Date', case when ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' < {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000) then date_to_string(toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'),\"yyyy\") else  date_to_string(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000),\"yyyy\") end as 'Date_Year', case when ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' < {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000) then date_to_string(toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'),\"MM\") else  date_to_string(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000),\"MM\") end as 'Date_Month', case when (('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < (date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) - 2764800)))) + 86400)) && ({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000 < (date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) - 2764800)))) + 86400)) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' <= {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000))  then (daysBetween(toDate((date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) - 2764800)))))),toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) * 'DailyAccruedAmount' when (('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < (date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000))) - 2764800)))) + 86400)) && ({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000 < (date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000))) - 2764800)))) + 86400)) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000)) then (daysBetween(toDate((date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000))) - 2764800)))))),toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000))) * 'DailyAccruedAmount' else 0 end as 'AccruedAmount',\r\n\r\n\r\n\r\n'DailyAccruedAmount' as 'DailyAccruedAmount';\r\nDataForFill_Previous = union Start_Previous, End_Previous;\r\nDataForFill_Previous = foreach DataForFill_Previous generate 'Id' as 'Id', 'Date_Year' as 'Date_Year', 'Date_Month' as 'Date_Month','Start' as 'Start', 'End' as 'End', 'Start Date' as 'Start Date', 'End Date' as 'End Date','AccruedAmount' as 'AccruedAmount','DailyAccruedAmount' as 'DailyAccruedAmount';\r\nFilledData_Previous = fill DataForFill_Previous by (dateCols=('Date_Year', 'Date_Month', \"Y-M\"), partition='Id');\r\nFilledData_Previous = group FilledData_Previous by ('Id', 'Date_Year', 'Date_Month');\r\nFilledData_Previous = foreach FilledData_Previous generate 'Id', 'Date_Year', 'Date_Month', date_to_epoch(toDate('Date_Year'+\"-\"+'Date_Month'+\"-01\",\"yyyy-MM-dd\")) as 'Date', first('Start') as 'Start', min(first('Start')) over ([..0] partition by 'Id' order by ('Date_Year','Date_Month')) as 'StartFilter', first('End') as 'End', min(first('End')) over ([..0] partition by 'Id' order by ('Date_Year','Date_Month')) as 'EndFilter',  min(first('Start Date')) over ([..0] partition by 'Id' order by ('Date_Year','Date_Month')) as 'Start Date', max(first('End Date')) over ([..] partition by 'Id' ) as 'End Date', sum('AccruedAmount') as 'AccruedAmount', min(first('DailyAccruedAmount'))over ([..0] partition by 'Id' order by ('Date_Year','Date_Month')) as 'DailyAccruedAmount';\r\nFilledData_Previous = filter FilledData_Previous by coalesce('Start',0) != 0 || ('Date' > 'StartFilter' && 'Date' > 'Start Date' && 'Date' < 'End Date' && 'Date' < 'EndFilter');\r\nFilledData_Previous = foreach FilledData_Previous generate 'Id', 'Date_Year', 'Date_Month',\r\n(case when 'AccruedAmount' is null then month_days(toDate('Date'))*'DailyAccruedAmount' else 'AccruedAmount' end) as 'AccruedAmount';\r\nresult = group FilledData_Current by all full, FilledData_Previous by all;\r\nresult = foreach result generate sum(FilledData_Current.'AccruedAmount') as 'sum_AccruedAmount', case when coalesce(sum(FilledData_Previous.'AccruedAmount'),0) == 0 then \"-\" else number_to_string(round((coalesce(sum(FilledData_Current.'AccruedAmount'),0) - coalesce(sum(FilledData_Previous.'AccruedAmount'),0)) * 100 / coalesce(sum(FilledData_Previous.'AccruedAmount'),0),0),\"0\") end as 'AccrualDelta', case when (coalesce(sum(FilledData_Current.'AccruedAmount'),0) - coalesce(sum(FilledData_Previous.'AccruedAmount'),0)) > 0 then \"rgb(0, 181, 49)\" else \"rgb(230, 29, 25)\" end as 'AccrualColor', case when (coalesce(sum(FilledData_Current.'AccruedAmount'),0) - coalesce(sum(FilledData_Previous.'AccruedAmount'),0)) > 0 then \"↑\"  when (coalesce(sum(FilledData_Current.'AccruedAmount'),0) - coalesce(sum(FilledData_Previous.'AccruedAmount'),0)) == 0 then \"-\" else \"↓\" end as 'AccrualArrow';","receiveFacetSource":{"mode":"all","steps":[]},"selectMode":"single","start":"[]","strings":[],"type":"saql","useGlobal":true,"visualizationParameters":{"parameters":{"autoFitMode":"keepLabels","bins":{"breakpoints":{"high":100,"low":0},"bands":{"high":{"color":"#008000","label":""},"low":{"color":"#B22222","label":""},"medium":{"color":"#ffa500","label":""}}},"legend":{"descOrder":false,"showHeader":true,"show":true,"customSize":"auto","position":"right-top","inside":false},"axisMode":"multi","tooltip":{"content":{"legend":{"showBinLabel":true,"measures":[],"showNullValues":true,"customizeLegend":false,"showPercentage":true,"showDimensions":true,"showMeasures":true,"dimensions":[]}}},"visualizationType":"hbar","title":{"fontSize":14,"subtitleFontSize":11,"label":"","align":"center","subtitleLabel":""},"binValues":false,"trellis":{"flipLabels":false,"showGridLines":true,"size":[100,100],"enable":false,"type":"x","chartsPerLine":4},"showActionMenu":true,"measureAxis2":{"sqrtScale":false,"showTitle":true,"showAxis":true,"title":"","customDomain":{"showDomain":false}},"measureAxis1":{"sqrtScale":false,"showTitle":true,"showAxis":true,"title":"","customDomain":{"showDomain":false}},"valueType":"compactNumber","theme":"wave","compactDecimalDigits":-1,"dimensionAxis":{"showTitle":true,"customSize":"auto","showAxis":true,"title":"","icons":{"useIcons":false,"iconProps":{"fit":"cover","column":"","type":"round"}}},"applyConditionalFormatting":true},"type":"chart"}},"RebateType_Calculati_1":{"broadcastFacet":true,"datasets":[{"name":"ProgramRebateTypePayoutSourceMaster"}],"isGlobal":false,"query":{"query":"{\"measures\":[[\"count\",\"*\"]],\"groups\":[\"RebateType.CalculationBasis\"]}","version":-1.0},"receiveFacetSource":{"mode":"none","steps":[]},"selectMode":"multi","start":"[\"Payout\",\"PayoutAndAccrual\"]","type":"aggregateflex","useGlobal":true,"visualizationParameters":{}},"RebateType_IsIntegra_1":{"broadcastFacet":true,"datasets":[{"name":"ProgramRebateTypePayoutSourceMaster"}],"isGlobal":false,"label":"RebateType_IsIntegra_1","query":{"query":"{\"measures\":[[\"count\",\"*\"]],\"groups\":[\"RebateType.IsIntegratable\"]}","version":-1.0},"receiveFacetSource":{"mode":"all","steps":[]},"selectMode":"single","start":"[]","type":"aggregateflex","useGlobal":true,"visualizationParameters":{"parameters":{"autoFitMode":"keepLabels","bins":{"breakpoints":{"high":100,"low":0},"bands":{"high":{"color":"#008000","label":""},"low":{"color":"#B22222","label":""},"medium":{"color":"#ffa500","label":""}}},"legend":{"descOrder":false,"showHeader":true,"show":true,"customSize":"auto","position":"right-top","inside":false},"axisMode":"multi","tooltip":{"content":{"legend":{"showBinLabel":true,"measures":[],"showNullValues":true,"customizeLegend":false,"showPercentage":true,"showDimensions":true,"showMeasures":true,"dimensions":[]}}},"visualizationType":"hbar","title":{"fontSize":14,"subtitleFontSize":11,"label":"","align":"center","subtitleLabel":""},"binValues":false,"trellis":{"flipLabels":false,"showGridLines":true,"size":[100,100],"enable":false,"type":"x","chartsPerLine":4},"columnMap":{"trellis":[],"dimensionAxis":["RebateType.IsIntegratable"],"plots":["count"]},"showActionMenu":true,"measureAxis2":{"sqrtScale":false,"showTitle":true,"showAxis":true,"title":"","customDomain":{"showDomain":false}},"measureAxis1":{"sqrtScale":false,"showTitle":true,"showAxis":true,"title":"","customDomain":{"showDomain":false}},"valueType":"compactNumber","theme":"wave","compactDecimalDigits":-1,"dimensionAxis":{"showTitle":true,"customSize":"auto","showAxis":true,"title":"","icons":{"useIcons":false,"iconProps":{"fit":"cover","column":"","type":"round"}}},"applyConditionalFormatting":true},"type":"chart"}},"Time_Line":{"broadcastFacet":true,"groups":[],"numbers":[],"query":"all_payout_sources = load \"ProgramRebateTypePayoutSourceMaster\";\r\ncurrent_valid_payout_sources = filter all_payout_sources by 'MemberPayout.PayoutPeriods.StartDate_sec_epoch' <= {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000;\r\ncurrent_valid_payout_sources = filter current_valid_payout_sources by 'MemberPayout.PayoutPeriods.EndDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000;\r\nStart_Current = foreach current_valid_payout_sources generate {{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000 as 'Start', {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000 as 'End', 'Id' as 'Id', 'MemberPayout.PayoutPeriods.StartDate_sec_epoch' as 'Start Date', 'MemberPayout.PayoutPeriods.EndDate_sec_epoch' as 'End Date', case when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000) then date_to_string(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch'),\"yyyy\") else date_to_string(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000),\"yyyy\") end as 'Date_Year', case when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000) then date_to_string(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch'),\"MM\") else date_to_string(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000),\"MM\") end as 'Date_Month', case when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' >= date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch')))) && {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000 >= date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch'))) then (daysBetween(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch'),month_last_day(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch')))) * 'DailyTotalTransactionAmount' when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000) && {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000 <= date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch'))) then (daysBetween(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch'),toDate({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000))) * 'DailyTotalTransactionAmount' when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < {{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' >= date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000)))) && {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000 >= date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000))) then (daysBetween(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000),month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000)))) * 'DailyTotalTransactionAmount' when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < {{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' <= date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000)))) && {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000 >= 'MemberPayout.PayoutPeriods.EndDate_sec_epoch' then (daysBetween(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000),toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) * 'DailyTotalTransactionAmount' when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < {{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000) && ({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000 <= date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000)))) && {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000 <= 'MemberPayout.PayoutPeriods.EndDate_sec_epoch' then (daysBetween(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000),toDate({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000))) * 'DailyTotalTransactionAmount' else 'AggregateObject.TotalTransactionAmount' end as 'TotalTransactionAmount', case when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' >= date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch')))) && {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000 >= date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch'))) then (daysBetween(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch'),month_last_day(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch')))) * 'DailyFinalRebateAmount' when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000) && {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000 <= date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch'))) then (daysBetween(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch'),toDate({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000))) * 'DailyFinalRebateAmount' when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < {{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' >= date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000)))) && {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000 >= date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000))) then (daysBetween(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000),month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000)))) * 'DailyFinalRebateAmount' when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < {{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' <= date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000)))) && {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000 >= 'MemberPayout.PayoutPeriods.EndDate_sec_epoch' then (daysBetween(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000),toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) * 'DailyFinalRebateAmount' when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < {{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000) && ({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000 <= date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000)))) && {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000 <= 'MemberPayout.PayoutPeriods.EndDate_sec_epoch' then (daysBetween(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000),toDate({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000))) * 'DailyFinalRebateAmount' else 'FinalRebateAmount' end as 'RebateAmount', case when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' >= date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch')))) && {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000 >= date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch'))) then (daysBetween(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch'),month_last_day(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch')))) * 'DailyQuantity' when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000) && {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000 <= date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch'))) then (daysBetween(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch'),toDate({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000))) * 'DailyQuantity' when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < {{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' >= date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000)))) && {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000 >= date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000))) then (daysBetween(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000),month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000)))) * 'DailyQuantity' when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < {{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' <= date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000)))) && {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000 >= 'MemberPayout.PayoutPeriods.EndDate_sec_epoch' then (daysBetween(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000),toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) * 'DailyQuantity' when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < {{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000) && ({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000 <= date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000)))) && {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000 <= 'MemberPayout.PayoutPeriods.EndDate_sec_epoch' then (daysBetween(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000),toDate({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000))) * 'DailyQuantity' else 'AggregateObject.TotalQuantity' end as 'TotalQuantity', 'DailyTotalTransactionAmount' as 'DailyTotalTransactionAmount', 'DailyFinalRebateAmount' as 'DailyFinalRebateAmount', 'DailyQuantity' as 'DailyQuantity';\r\nEnd_Current = foreach current_valid_payout_sources generate {{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000 as 'Start', {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000 as 'End', 'Id' as 'Id', 'MemberPayout.PayoutPeriods.StartDate_sec_epoch' as 'Start Date', 'MemberPayout.PayoutPeriods.EndDate_sec_epoch' as 'End Date', case when ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' < {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000) then date_to_string(toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'),\"yyyy\") else  date_to_string(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000),\"yyyy\") end as 'Date_Year', case when ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' < {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000) then date_to_string(toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'),\"MM\") else  date_to_string(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000),\"MM\") end as 'Date_Month', case when (('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < (date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) - 2764800)))) + 86400)) && ({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000 < (date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) - 2764800)))) + 86400)) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' <= {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000))  then (daysBetween(toDate((date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) - 2764800)))))),toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) * 'DailyTotalTransactionAmount' when (('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < (date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000))) - 2764800)))) + 86400)) && ({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000 < (date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000))) - 2764800)))) + 86400)) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000)) then (daysBetween(toDate((date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000))) - 2764800)))))),toDate({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000))) * 'DailyTotalTransactionAmount' else 0 end as 'TotalTransactionAmount', case when (('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < (date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) - 2764800)))) + 86400)) && ({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000 < (date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) - 2764800)))) + 86400)) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' <= {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000))  then (daysBetween(toDate((date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) - 2764800)))))),toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) * 'DailyFinalRebateAmount' when (('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < (date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000))) - 2764800)))) + 86400)) && ({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000 < (date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000))) - 2764800)))) + 86400)) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000)) then (daysBetween(toDate((date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000))) - 2764800)))))),toDate({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000))) * 'DailyFinalRebateAmount' else 0 end as 'RebateAmount', case when (('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < (date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) - 2764800)))) + 86400)) && ({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000 < (date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) - 2764800)))) + 86400)) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' <= {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000))  then (daysBetween(toDate((date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) - 2764800)))))),toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) * 'DailyQuantity' when (('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < (date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000))) - 2764800)))) + 86400)) && ({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000 < (date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000))) - 2764800)))) + 86400)) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000)) then (daysBetween(toDate((date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000))) - 2764800)))))),toDate({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000))) * 'DailyQuantity' else 0 end as 'TotalQuantity', 'DailyTotalTransactionAmount' as 'DailyTotalTransactionAmount', 'DailyFinalRebateAmount' as 'DailyFinalRebateAmount', 'DailyQuantity' as 'DailyQuantity';\r\nDataForFill_Current = union Start_Current, End_Current;\r\nDataForFill_Current = foreach DataForFill_Current generate 'Id' as 'Id', 'Date_Year' as 'Date_Year', 'Date_Month' as 'Date_Month','Start' as 'Start', 'End' as 'End', 'Start Date' as 'Start Date', 'End Date' as 'End Date', 'TotalTransactionAmount' as 'TotalTransactionAmount', 'RebateAmount' as 'RebateAmount', 'TotalQuantity' as 'TotalQuantity', 'DailyTotalTransactionAmount' as 'DailyTotalTransactionAmount', 'DailyFinalRebateAmount' as 'DailyFinalRebateAmount', 'DailyQuantity' as 'DailyQuantity';\r\nFilledData_Current = fill DataForFill_Current by (dateCols=('Date_Year', 'Date_Month', \"Y-M\"), partition='Id');\r\nFilledData_Current = group FilledData_Current by ('Id', 'Date_Year', 'Date_Month');\r\nFilledData_Current = foreach FilledData_Current generate 'Id', 'Date_Year', 'Date_Month', date_to_epoch(toDate('Date_Year'+\"-\"+'Date_Month'+\"-01\",\"yyyy-MM-dd\")) as 'Date', first('Start') as 'Start', min(first('Start')) over ([..0] partition by 'Id' order by ('Date_Year','Date_Month')) as 'StartFilter', first('End') as 'End', min(first('End')) over ([..0] partition by 'Id' order by ('Date_Year','Date_Month')) as 'EndFilter',  min(first('Start Date')) over ([..0] partition by 'Id' order by ('Date_Year','Date_Month')) as 'Start Date', max(first('End Date')) over ([..] partition by 'Id' ) as 'End Date',  sum('TotalTransactionAmount') as 'TotalTransactionAmount', min(first('DailyTotalTransactionAmount'))over ([..0] partition by 'Id' order by ('Date_Year','Date_Month')) as 'DailyTotalTransactionAmount', sum('RebateAmount') as 'RebateAmount', min(first('DailyFinalRebateAmount'))over ([..0] partition by 'Id' order by ('Date_Year','Date_Month')) as 'DailyFinalRebateAmount', sum('TotalQuantity') as 'TotalQuantity', min(first('DailyQuantity'))over ([..0] partition by 'Id' order by ('Date_Year','Date_Month')) as 'DailyQuantity';\r\nFilledData_Current = filter FilledData_Current by coalesce('Start',0) != 0 || ('Date' > 'StartFilter' && 'Date' > 'Start Date' && 'Date' < 'End Date' && 'Date' < 'EndFilter');\r\nFilledData_Current = foreach FilledData_Current generate 'Id' as 'Id', 'Date_Year', 'Date_Month', (case when 'TotalTransactionAmount' is null then month_days(toDate('Date'))*'DailyTotalTransactionAmount' else 'TotalTransactionAmount' end) as 'TotalTransactionAmount', (case when 'RebateAmount' is null then month_days(toDate('Date'))*'DailyFinalRebateAmount' else 'RebateAmount' end) as 'RebateAmount', (case when 'TotalQuantity' is null then month_days(toDate('Date'))*'DailyQuantity' else 'TotalQuantity' end) as 'TotalQuantity';\r\nmeasure_result = group FilledData_Current by ('Date_Year', 'Date_Month');\r\nmeasure_result = foreach measure_result generate FilledData_Current.'Date_Year'+\"~~~\"+FilledData_Current.'Date_Month' as 'CreatedDate_Year~~~CreatedDate_Month',  sum(FilledData_Current.'TotalTransactionAmount') as 'Total Revenue', sum(FilledData_Current.'RebateAmount') as 'RebateAmount';\r\n\r\nq = load \"RebateProgramMemberMaster\";\r\nq = filter q by 'MemberStatus' == \"Active\";\r\ncurrent = filter q by 'CreatedDate_sec_epoch' <= {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000;\r\ncurrent = filter current by 'CreatedDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000;\r\n\r\nmember_result = group current by ('CreatedDate_Year', 'CreatedDate_Month');\r\nmember_result = foreach member_result generate 'CreatedDate_Year'+\"~~~\"+'CreatedDate_Month' as 'CreatedDate_Year~~~CreatedDate_Month', unique(q.'AccountId') as 'unique_AccountId';\r\n\r\nresult = group measure_result by 'CreatedDate_Year~~~CreatedDate_Month' full, member_result by 'CreatedDate_Year~~~CreatedDate_Month';\r\nresult = foreach result generate coalesce(measure_result.'CreatedDate_Year~~~CreatedDate_Month', member_result.'CreatedDate_Year~~~CreatedDate_Month') as 'CreatedDate_Year~~~CreatedDate_Month', coalesce(sum(measure_result.'Total Revenue'),0) as 'Total Revenue', coalesce(sum(measure_result.'RebateAmount'),0) as 'RebateAmount', coalesce(sum(member_result.'unique_AccountId'),0) as 'Number of Members';\r\nresult = order result by 'CreatedDate_Year~~~CreatedDate_Month' asc;","receiveFacetSource":{"mode":"all","steps":[]},"selectMode":"single","start":"[]","strings":[],"type":"saql","useGlobal":true,"visualizationParameters":{"parameters":{"autoFitMode":"keepLabels","bins":{"breakpoints":{"high":100,"low":0},"bands":{"high":{"color":"#008000","label":""},"low":{"color":"#B22222","label":""},"medium":{"color":"#ffa500","label":""}}},"legend":{"descOrder":false,"showHeader":true,"show":true,"customSize":"auto","position":"right-top","inside":false},"axisMode":"multi","tooltip":{"content":{"legend":{"showBinLabel":true,"measures":[],"showNullValues":true,"customizeLegend":false,"showPercentage":true,"showDimensions":true,"showMeasures":true,"dimensions":[]}}},"visualizationType":"hbar","title":{"fontSize":14,"subtitleFontSize":11,"label":"","align":"center","subtitleLabel":""},"binValues":false,"trellis":{"flipLabels":false,"showGridLines":true,"size":[100,100],"enable":false,"type":"x","chartsPerLine":4},"showActionMenu":true,"measureAxis2":{"sqrtScale":false,"showTitle":true,"showAxis":true,"title":"","customDomain":{"showDomain":false}},"measureAxis1":{"sqrtScale":false,"showTitle":true,"showAxis":true,"title":"","customDomain":{"showDomain":false}},"valueType":"compactNumber","theme":"wave","compactDecimalDigits":-1,"dimensionAxis":{"showTitle":true,"customSize":"auto","showAxis":true,"title":"","icons":{"useIcons":false,"iconProps":{"fit":"cover","column":"","type":"round"}}},"applyConditionalFormatting":true},"type":"chart"}},"RebateProgram_Name_1":{"broadcastFacet":true,"datasets":[{"name":"RebateProgramMemberMaster"}],"isGlobal":false,"query":{"query":"{\"measures\":[[\"count\",\"*\"]],\"groups\":[\"RebateProgram.Name\"]}","version":-1.0},"receiveFacetSource":{"mode":"all","steps":[]},"selectMode":"singlerequired","start":"[]","type":"aggregateflex","useGlobal":true,"visualizationParameters":{"parameters":{"autoFitMode":"keepLabels","bins":{"breakpoints":{"high":100,"low":0},"bands":{"high":{"color":"#008000","label":""},"low":{"color":"#B22222","label":""},"medium":{"color":"#ffa500","label":""}}},"legend":{"descOrder":false,"showHeader":true,"show":true,"customSize":"auto","position":"right-top","inside":false},"axisMode":"multi","tooltip":{"content":{"legend":{"showBinLabel":true,"measures":[],"showNullValues":true,"customizeLegend":false,"showPercentage":true,"showDimensions":true,"showMeasures":true,"dimensions":[]}}},"visualizationType":"hbar","title":{"fontSize":14,"subtitleFontSize":11,"label":"","align":"center","subtitleLabel":""},"binValues":false,"trellis":{"flipLabels":false,"showGridLines":true,"size":[100,100],"enable":false,"type":"x","chartsPerLine":4},"columnMap":{"trellis":[],"dimensionAxis":["RebateProgram.Name"],"plots":["count"]},"showActionMenu":true,"measureAxis2":{"sqrtScale":false,"showTitle":true,"showAxis":true,"title":"","customDomain":{"showDomain":false}},"measureAxis1":{"sqrtScale":false,"showTitle":true,"showAxis":true,"title":"","customDomain":{"showDomain":false}},"valueType":"compactNumber","theme":"wave","compactDecimalDigits":-1,"dimensionAxis":{"showTitle":true,"customSize":"auto","showAxis":true,"title":"","icons":{"useIcons":false,"iconProps":{"fit":"cover","column":"","type":"round"}}},"applyConditionalFormatting":true},"type":"chart"}},"Date_Selector_2":{"broadcastFacet":true,"datasets":[{"name":"RebatePayoutPeriodMaster"}],"isGlobal":false,"query":{"query":"{\"measures\":[[\"count\",\"*\"]],\"groups\":[\"StartDate\"]}","version":-1.0},"receiveFacetSource":{"mode":"none","steps":[]},"selectMode":"single","start":"[[[\"year\",-1],[\"year\",-1]]]","type":"aggregateflex","useGlobal":true,"visualizationParameters":{}},"Date_Selector_1":{"broadcastFacet":true,"datasets":[{"name":"RebatePayoutPeriodMaster"}],"isGlobal":false,"query":{"query":"{\"measures\":[[\"count\",\"*\"]],\"groups\":[\"StartDate\"]}","version":-1.0},"receiveFacetSource":{"mode":"none","steps":[]},"selectMode":"single","start":"[[[\"year\",0],[\"year\",0]]]","type":"aggregateflex","useGlobal":true,"visualizationParameters":{}},"Accruals_Time_Line":{"broadcastFacet":true,"groups":[],"numbers":[],"query":"all_payout_sources = load \"ProgramRebateTypePayoutSourceMaster\";\r\ncurrent_valid_payout_sources = filter all_payout_sources by 'MemberPayout.PayoutPeriods.StartDate_sec_epoch' <= {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000;\r\ncurrent_valid_payout_sources = filter current_valid_payout_sources by 'MemberPayout.PayoutPeriods.EndDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000;\r\nStart_Current = foreach current_valid_payout_sources generate {{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000 as 'Start', {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000 as 'End', 'Id' as 'Id', 'MemberPayout.PayoutPeriods.StartDate_sec_epoch' as 'Start Date', 'MemberPayout.PayoutPeriods.EndDate_sec_epoch' as 'End Date', case when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000) then date_to_string(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch'),\"yyyy\") else date_to_string(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000),\"yyyy\") end as 'Date_Year', case when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000) then date_to_string(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch'),\"MM\") else date_to_string(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000),\"MM\") end as 'Date_Month', case when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' >= date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch')))) && {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000 >= date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch'))) then (daysBetween(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch'),month_last_day(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch')))) * 'DailyAccruedAmount' when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000) && {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000 <= date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch'))) then (daysBetween(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch'),toDate({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000))) * 'DailyAccruedAmount' when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < {{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' >= date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000)))) && {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000 >= date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000))) then (daysBetween(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000),month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000)))) * 'DailyAccruedAmount' when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < {{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' <= date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000)))) && {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000 >= 'MemberPayout.PayoutPeriods.EndDate_sec_epoch' then (daysBetween(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000),toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) * 'DailyAccruedAmount' when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < {{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000) && ({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000 <= date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000)))) && {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000 <= 'MemberPayout.PayoutPeriods.EndDate_sec_epoch' then (daysBetween(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000),toDate({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000))) * 'DailyAccruedAmount' else 'AccruedAmount' end as 'AccruedAmount','DailyAccruedAmount' as 'DailyAccruedAmount';\r\nEnd_Current = foreach current_valid_payout_sources generate {{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000 as 'Start', {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000 as 'End', 'Id' as 'Id', 'MemberPayout.PayoutPeriods.StartDate_sec_epoch' as 'Start Date', 'MemberPayout.PayoutPeriods.EndDate_sec_epoch' as 'End Date', case when ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' < {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000) then date_to_string(toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'),\"yyyy\") else  date_to_string(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000),\"yyyy\") end as 'Date_Year', case when ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' < {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000) then date_to_string(toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'),\"MM\") else  date_to_string(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000),\"MM\") end as 'Date_Month', case when (('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < (date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) - 2764800)))) + 86400)) && ({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000 < (date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) - 2764800)))) + 86400)) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' <= {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000))  then (daysBetween(toDate((date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) - 2764800)))))),toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) * 'DailyAccruedAmount' when (('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < (date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000))) - 2764800)))) + 86400)) && ({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000 < (date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000))) - 2764800)))) + 86400)) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000)) then (daysBetween(toDate((date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000))) - 2764800)))))),toDate({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000))) * 'DailyAccruedAmount' else 0 end as 'AccruedAmount', 'DailyAccruedAmount' as 'DailyAccruedAmount';\r\nDataForFill_Current = union Start_Current, End_Current;\r\nDataForFill_Current = foreach DataForFill_Current generate 'Id' as 'Id', 'Date_Year' as 'Date_Year', 'Date_Month' as 'Date_Month','Start' as 'Start', 'End' as 'End', 'Start Date' as 'Start Date', 'End Date' as 'End Date', 'AccruedAmount' as 'AccruedAmount', 'DailyAccruedAmount' as 'DailyAccruedAmount';\r\nFilledData_Current = fill DataForFill_Current by (dateCols=('Date_Year', 'Date_Month', \"Y-M\"), partition='Id');\r\nFilledData_Current = group FilledData_Current by ('Id', 'Date_Year', 'Date_Month');\r\nFilledData_Current = foreach FilledData_Current generate 'Id', 'Date_Year', 'Date_Month', date_to_epoch(toDate('Date_Year'+\"-\"+'Date_Month'+\"-01\",\"yyyy-MM-dd\")) as 'Date', first('Start') as 'Start', min(first('Start')) over ([..0] partition by 'Id' order by ('Date_Year','Date_Month')) as 'StartFilter', first('End') as 'End', min(first('End')) over ([..0] partition by 'Id' order by ('Date_Year','Date_Month')) as 'EndFilter',  min(first('Start Date')) over ([..0] partition by 'Id' order by ('Date_Year','Date_Month')) as 'Start Date', max(first('End Date')) over ([..] partition by 'Id' ) as 'End Date', sum('AccruedAmount') as 'AccruedAmount', min(first('DailyAccruedAmount'))over ([..0] partition by 'Id' order by ('Date_Year','Date_Month')) as 'DailyAccruedAmount';\r\nFilledData_Current = filter FilledData_Current by coalesce('Start',0) != 0 || ('Date' > 'StartFilter' && 'Date' > 'Start Date' && 'Date' < 'End Date' && 'Date' < 'EndFilter');\r\nFilledData_Current = foreach FilledData_Current generate 'Id' as 'Id', 'Date_Year', 'Date_Month', (case when 'AccruedAmount' is null then month_days(toDate('Date'))*'DailyAccruedAmount' else 'AccruedAmount' end) as 'AccruedAmount';\r\nmeasure_result = group FilledData_Current by ('Date_Year', 'Date_Month');\r\nmeasure_result = foreach measure_result generate FilledData_Current.'Date_Year'+\"~~~\"+FilledData_Current.'Date_Month' as 'CreatedDate_Year~~~CreatedDate_Month', sum(FilledData_Current.'AccruedAmount') as 'Accruals';\r\n\r\nresult = group measure_result by 'CreatedDate_Year~~~CreatedDate_Month';\r\nresult = foreach result generate 'CreatedDate_Year~~~CreatedDate_Month' as 'CreatedDate_Year~~~CreatedDate_Month', coalesce(sum(measure_result.'Accruals'),0) as 'Accrued Amount';\r\nresult = order result by 'CreatedDate_Year~~~CreatedDate_Month' asc;","receiveFacetSource":{"mode":"all","steps":[]},"selectMode":"single","start":"[]","strings":[],"type":"saql","useGlobal":true,"visualizationParameters":{"parameters":{"autoFitMode":"keepLabels","bins":{"breakpoints":{"high":100,"low":0},"bands":{"high":{"color":"#008000","label":""},"low":{"color":"#B22222","label":""},"medium":{"color":"#ffa500","label":""}}},"legend":{"descOrder":false,"showHeader":true,"show":true,"customSize":"auto","position":"right-top","inside":false},"axisMode":"multi","tooltip":{"content":{"legend":{"showBinLabel":true,"measures":[],"showNullValues":true,"customizeLegend":false,"showPercentage":true,"showDimensions":true,"showMeasures":true,"dimensions":[]}}},"visualizationType":"hbar","title":{"fontSize":14,"subtitleFontSize":11,"label":"","align":"center","subtitleLabel":""},"binValues":false,"trellis":{"flipLabels":false,"showGridLines":true,"size":[100,100],"enable":false,"type":"x","chartsPerLine":4},"showActionMenu":true,"measureAxis2":{"sqrtScale":false,"showTitle":true,"showAxis":true,"title":"","customDomain":{"showDomain":false}},"measureAxis1":{"sqrtScale":false,"showTitle":true,"showAxis":true,"title":"","customDomain":{"showDomain":false}},"valueType":"compactNumber","theme":"wave","compactDecimalDigits":-1,"dimensionAxis":{"showTitle":true,"customSize":"auto","showAxis":true,"title":"","icons":{"useIcons":false,"iconProps":{"fit":"cover","column":"","type":"round"}}},"applyConditionalFormatting":true},"type":"chart"}},"static_2":{"broadcastFacet":true,"columns":{"Groupby":{"type":"string"},"value1":{"type":"string"},"Generate":{"type":"string"},"Grouping":{"type":"string"},"value":{"type":"string"},"Display":{"type":"string"}},"label":"","selectMode":"singlerequired","type":"staticflex","values":["{\"Display\":\"Products\",\"Groupby\":\"Product.Name\",\"value\":\"Product.Name\",\"value1\":\"Product.Name\",\"Generate\":\"result1.\",\"Grouping\":\"cogroup result1 by 'Product.Name' left, \"}","{\"Display\":\"Members\",\"Groupby\":\"Account.Name\",\"value\":\"Account.Name\",\"value1\":\"MemberPayout.Member.Account.Name\",\"Generate\":\"result1.\",\"Grouping\":\"cogroup result1 by 'Account.Name' left, \"}","{\"Display\":\"JournalRegion__c\",\"Groupby\":\"Product.Name\",\"value\":\"CustomFields.JournalRegion__c\",\"value1\":\"CustomFields.JournalRegion__c\",\"Generate\":\" \",\"Grouping\":\"group \"}","{\"Display\":\"JournalRegion__c\",\"Groupby\":\"Product.Name\",\"value\":\"CustomFields.JournalRegion__c\",\"value1\":\"CustomFields.JournalRegion__c\",\"Generate\":\" \",\"Grouping\":\"group \"}"]},"static_1":{"broadcastFacet":true,"columns":{"Display":{"type":"string"}},"label":"","selectMode":"singlerequired","type":"staticflex","values":["{\"Display\":\"Revenue\",\"value\":\"AggregateObject.TotalTransactionAmount\"}","{\"Display\":\"Rebates\",\"value\":\"RebateAmount\"}","{\"Display\":\"Quantity\",\"value\":\"TotalQuantity\"}","{\"Display\":\"Payout:Revenue\",\"value\":\"Payout:Revenue\"}","{\"Display\":\"Payout:Quantity\",\"value\":\"Payout:Quantity\"}"]},"KPI_by_Accounts":{"broadcastFacet":true,"groups":[],"numbers":[],"query":"RebateProgramMemberMaster4 = load \"RebateProgramMemberMaster\";\r\nRebateProgramMemberMaster4 = group RebateProgramMemberMaster4 by 'Account.Name';\r\nall_payout_sources = load \"ProgramRebateTypePayoutSourceMaster\";\r\n\r\ncurrent_valid_payout_sources = filter all_payout_sources by 'MemberPayout.PayoutPeriods.StartDate_sec_epoch' <= {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000;\r\ncurrent_valid_payout_sources = filter current_valid_payout_sources by 'MemberPayout.PayoutPeriods.EndDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000;\r\nStart_Current = foreach current_valid_payout_sources generate {{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000 as 'Start', {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000 as 'End', 'Id'+\"<#>\"+coalesce('MemberPayout.Member.Account.Name',\"-\") as 'Id', 'MemberPayout.PayoutPeriods.StartDate_sec_epoch' as 'Start Date', 'MemberPayout.PayoutPeriods.EndDate_sec_epoch' as 'End Date', case when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000) then date_to_string(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch'),\"yyyy\") else date_to_string(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000),\"yyyy\") end as 'Date_Year', case when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000) then date_to_string(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch'),\"MM\") else date_to_string(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000),\"MM\") end as 'Date_Month', case when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' >= date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch')))) && {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000 >= date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch'))) then (daysBetween(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch'),month_last_day(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch')))) * 'DailyTotalTransactionAmount' when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000) && {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000 <= date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch'))) then (daysBetween(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch'),toDate({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000))) * 'DailyTotalTransactionAmount' when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < {{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' >= date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000)))) && {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000 >= date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000))) then (daysBetween(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000),month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000)))) * 'DailyTotalTransactionAmount' when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < {{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' <= date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000)))) && {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000 >= 'MemberPayout.PayoutPeriods.EndDate_sec_epoch' then (daysBetween(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000),toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) * 'DailyTotalTransactionAmount' when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < {{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000) && ({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000 <= date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000)))) && {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000 <= 'MemberPayout.PayoutPeriods.EndDate_sec_epoch' then (daysBetween(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000),toDate({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000))) * 'DailyTotalTransactionAmount' else 'AggregateObject.TotalTransactionAmount' end as 'TotalTransactionAmount', case when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' >= date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch')))) && {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000 >= date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch'))) then (daysBetween(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch'),month_last_day(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch')))) * 'DailyFinalRebateAmount' when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000) && {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000 <= date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch'))) then (daysBetween(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch'),toDate({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000))) * 'DailyFinalRebateAmount' when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < {{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' >= date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000)))) && {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000 >= date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000))) then (daysBetween(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000),month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000)))) * 'DailyFinalRebateAmount' when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < {{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' <= date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000)))) && {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000 >= 'MemberPayout.PayoutPeriods.EndDate_sec_epoch' then (daysBetween(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000),toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) * 'DailyFinalRebateAmount' when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < {{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000) && ({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000 <= date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000)))) && {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000 <= 'MemberPayout.PayoutPeriods.EndDate_sec_epoch' then (daysBetween(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000),toDate({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000))) * 'DailyFinalRebateAmount' else 'FinalRebateAmount' end as 'RebateAmount', case when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' >= date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch')))) && {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000 >= date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch'))) then (daysBetween(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch'),month_last_day(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch')))) * 'DailyQuantity' when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000) && {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000 <= date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch'))) then (daysBetween(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch'),toDate({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000))) * 'DailyQuantity' when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < {{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' >= date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000)))) && {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000 >= date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000))) then (daysBetween(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000),month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000)))) * 'DailyQuantity' when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < {{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' <= date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000)))) && {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000 >= 'MemberPayout.PayoutPeriods.EndDate_sec_epoch' then (daysBetween(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000),toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) * 'DailyQuantity' when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < {{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000) && ({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000 <= date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000)))) && {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000 <= 'MemberPayout.PayoutPeriods.EndDate_sec_epoch' then (daysBetween(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000),toDate({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000))) * 'DailyQuantity' else 'AggregateObject.TotalQuantity' end as 'TotalQuantity', 'DailyTotalTransactionAmount' as 'DailyTotalTransactionAmount', 'DailyFinalRebateAmount' as 'DailyFinalRebateAmount', 'DailyQuantity' as 'DailyQuantity';\r\nEnd_Current = foreach current_valid_payout_sources generate {{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000 as 'Start', {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000 as 'End', 'Id'+\"<#>\"+coalesce('MemberPayout.Member.Account.Name',\"-\") as 'Id', 'MemberPayout.PayoutPeriods.StartDate_sec_epoch' as 'Start Date', 'MemberPayout.PayoutPeriods.EndDate_sec_epoch' as 'End Date', case when ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' < {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000) then date_to_string(toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'),\"yyyy\") else  date_to_string(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000),\"yyyy\") end as 'Date_Year', case when ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' < {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000) then date_to_string(toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'),\"MM\") else  date_to_string(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000),\"MM\") end as 'Date_Month', case when (('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < (date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) - 2764800)))) + 86400)) && ({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000 < (date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) - 2764800)))) + 86400)) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' <= {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000))  then (daysBetween(toDate((date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) - 2764800)))))),toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) * 'DailyTotalTransactionAmount' when (('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < (date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000))) - 2764800)))) + 86400)) && ({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000 < (date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000))) - 2764800)))) + 86400)) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000)) then (daysBetween(toDate((date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000))) - 2764800)))))),toDate({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000))) * 'DailyTotalTransactionAmount' else 0 end as 'TotalTransactionAmount', case when (('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < (date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) - 2764800)))) + 86400)) && ({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000 < (date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) - 2764800)))) + 86400)) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' <= {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000))  then (daysBetween(toDate((date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) - 2764800)))))),toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) * 'DailyFinalRebateAmount' when (('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < (date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000))) - 2764800)))) + 86400)) && ({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000 < (date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000))) - 2764800)))) + 86400)) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000)) then (daysBetween(toDate((date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000))) - 2764800)))))),toDate({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000))) * 'DailyFinalRebateAmount' else 0 end as 'RebateAmount', case when (('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < (date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) - 2764800)))) + 86400)) && ({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000 < (date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) - 2764800)))) + 86400)) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' <= {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000))  then (daysBetween(toDate((date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) - 2764800)))))),toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) * 'DailyQuantity' when (('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < (date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000))) - 2764800)))) + 86400)) && ({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000 < (date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000))) - 2764800)))) + 86400)) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000)) then (daysBetween(toDate((date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000))) - 2764800)))))),toDate({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000))) * 'DailyQuantity' else 0 end as 'TotalQuantity', 'DailyTotalTransactionAmount' as 'DailyTotalTransactionAmount', 'DailyFinalRebateAmount' as 'DailyFinalRebateAmount', 'DailyQuantity' as 'DailyQuantity';\r\nDataForFill_Current = union Start_Current, End_Current;\r\nDataForFill_Current = foreach DataForFill_Current generate 'Id' as 'Id', 'Date_Year' as 'Date_Year', 'Date_Month' as 'Date_Month','Start' as 'Start', 'End' as 'End', 'Start Date' as 'Start Date', 'End Date' as 'End Date', 'TotalTransactionAmount' as 'TotalTransactionAmount', 'RebateAmount' as 'RebateAmount', 'TotalQuantity' as 'TotalQuantity', 'DailyTotalTransactionAmount' as 'DailyTotalTransactionAmount', 'DailyFinalRebateAmount' as 'DailyFinalRebateAmount', 'DailyQuantity' as 'DailyQuantity';\r\nFilledData_Current = fill DataForFill_Current by (dateCols=('Date_Year', 'Date_Month', \"Y-M\"), partition='Id');\r\nFilledData_Current = group FilledData_Current by ('Id', 'Date_Year', 'Date_Month');\r\nFilledData_Current = foreach FilledData_Current generate 'Id', 'Date_Year', 'Date_Month', date_to_epoch(toDate('Date_Year'+\"-\"+'Date_Month'+\"-01\",\"yyyy-MM-dd\")) as 'Date', first('Start') as 'Start', min(first('Start')) over ([..0] partition by 'Id' order by ('Date_Year','Date_Month')) as 'StartFilter', first('End') as 'End', min(first('End')) over ([..0] partition by 'Id' order by ('Date_Year','Date_Month')) as 'EndFilter',  min(first('Start Date')) over ([..0] partition by 'Id' order by ('Date_Year','Date_Month')) as 'Start Date', max(first('End Date')) over ([..] partition by 'Id' ) as 'End Date',  sum('TotalTransactionAmount') as 'TotalTransactionAmount', min(first('DailyTotalTransactionAmount'))over ([..0] partition by 'Id' order by ('Date_Year','Date_Month')) as 'DailyTotalTransactionAmount', sum('RebateAmount') as 'RebateAmount', min(first('DailyFinalRebateAmount'))over ([..0] partition by 'Id' order by ('Date_Year','Date_Month')) as 'DailyFinalRebateAmount', sum('TotalQuantity') as 'TotalQuantity', min(first('DailyQuantity'))over ([..0] partition by 'Id' order by ('Date_Year','Date_Month')) as 'DailyQuantity';\r\nFilledData_Current = filter FilledData_Current by coalesce('Start',0) != 0 || ('Date' > 'StartFilter' && 'Date' > 'Start Date' && 'Date' < 'End Date' && 'Date' < 'EndFilter');\r\nFilledData_Current = foreach FilledData_Current generate substr('Id',index_of('Id',\"<#>\")+3) as 'MemberPayout.Member.Account.Name', 'Date_Year', 'Date_Month', (case when 'TotalTransactionAmount' is null then month_days(toDate('Date'))*'DailyTotalTransactionAmount' else 'TotalTransactionAmount' end) as 'TotalTransactionAmount', (case when 'RebateAmount' is null then month_days(toDate('Date'))*'DailyFinalRebateAmount' else 'RebateAmount' end) as 'RebateAmount', (case when 'TotalQuantity' is null then month_days(toDate('Date'))*'DailyQuantity' else 'TotalQuantity' end) as 'TotalQuantity';\r\nresult = group FilledData_Current by ('MemberPayout.Member.Account.Name');\r\nresult1 = cogroup RebateProgramMemberMaster4 by 'Account.Name' left,result by 'MemberPayout.Member.Account.Name';\r\nresult1 = foreach result1 generate RebateProgramMemberMaster4.'Account.Name'  as 'Account.Name',coalesce(sum(result.'TotalTransactionAmount'),0) as 'AggregateObject.TotalTransactionAmount',coalesce(sum(result.'RebateAmount'),0) as 'RebateAmount', coalesce(sum(result.'TotalQuantity'),0) as 'TotalQuantity', coalesce(sum(result.'RebateAmount')/sum(result.'TotalTransactionAmount'),0) as 'Payout:Revenue',coalesce(sum(result.'RebateAmount')/sum(result.'TotalQuantity'),0) as 'Payout:Quantity',(case when {{coalesce(cell(RebateAmount_1.selection, 0, \"min\"),0).asString()}} == 0 then {{coalesce(cell(RebateAmount_1.result, 0, \"min\"),0).asObject()}} else {{coalesce(cell(RebateAmount_1.selection, 0, \"min\"),0).asString()}} end) as 'min_payout',(case when {{coalesce(cell(RebateAmount_1.selection, 0, \"max\"),0).asString()}} == 0 then {{coalesce(cell(RebateAmount_1.result, 0, \"max\"),0).asObject()}} else {{coalesce(cell(RebateAmount_1.selection, 0, \"max\"),0).asString()}} end) as 'max_payout';\r\n\r\nresult1 = filter result1 by round('RebateAmount',2) >= 'min_payout' and round('RebateAmount',2) <= 'max_payout';\r\n\r\nresult1 = foreach result1 generate 'Account.Name'  as 'Account.Name', '{{cell(static_1.selection, 0, \"value\").asObject()}}' as '{{cell(static_1.selection, 0, \"Display\").asString()}}';\r\nresult1 = order result1 by '{{cell(static_1.selection, 0, \"Display\").asString()}}' desc;","receiveFacetSource":{"mode":"all","steps":[]},"selectMode":"single","start":"[]","strings":[],"type":"saql","useGlobal":true,"visualizationParameters":{"parameters":{"autoFitMode":"keepLabels","bins":{"breakpoints":{"high":100,"low":0},"bands":{"high":{"color":"#008000","label":""},"low":{"color":"#B22222","label":""},"medium":{"color":"#ffa500","label":""}}},"legend":{"descOrder":false,"showHeader":true,"show":true,"customSize":"auto","position":"right-top","inside":false},"axisMode":"multi","tooltip":{"content":{"legend":{"showBinLabel":true,"measures":[],"showNullValues":true,"customizeLegend":false,"showPercentage":true,"showDimensions":true,"showMeasures":true,"dimensions":[]}}},"visualizationType":"hbar","title":{"fontSize":14,"subtitleFontSize":11,"label":"","align":"center","subtitleLabel":""},"binValues":false,"trellis":{"flipLabels":false,"showGridLines":true,"size":[100,100],"enable":false,"type":"x","chartsPerLine":4},"showActionMenu":true,"measureAxis2":{"sqrtScale":false,"showTitle":true,"showAxis":true,"title":"","customDomain":{"showDomain":false}},"measureAxis1":{"sqrtScale":false,"showTitle":true,"showAxis":true,"title":"","customDomain":{"showDomain":false}},"valueType":"compactNumber","theme":"wave","compactDecimalDigits":-1,"dimensionAxis":{"showTitle":true,"customSize":"auto","showAxis":true,"title":"","icons":{"useIcons":false,"iconProps":{"fit":"cover","column":"","type":"round"}}},"applyConditionalFormatting":true},"type":"chart"}},"Name_2":{"broadcastFacet":true,"datasets":[{"name":"ProgramRebateTypeMaster"}],"isGlobal":false,"label":"Name_2","query":{"query":"{\"measures\":[[\"count\",\"*\"]],\"groups\":[\"Name\"]}","version":-1.0},"receiveFacetSource":{"mode":"all","steps":[]},"selectMode":"single","start":"[]","type":"aggregateflex","useGlobal":true,"visualizationParameters":{"parameters":{"autoFitMode":"keepLabels","bins":{"breakpoints":{"high":100,"low":0},"bands":{"high":{"color":"#008000","label":""},"low":{"color":"#B22222","label":""},"medium":{"color":"#ffa500","label":""}}},"legend":{"descOrder":false,"showHeader":true,"show":true,"customSize":"auto","position":"right-top","inside":false},"axisMode":"multi","tooltip":{"content":{"legend":{"showBinLabel":true,"measures":[],"showNullValues":true,"customizeLegend":false,"showPercentage":true,"showDimensions":true,"showMeasures":true,"dimensions":[]}}},"visualizationType":"hbar","title":{"fontSize":14,"subtitleFontSize":11,"label":"","align":"center","subtitleLabel":""},"binValues":false,"trellis":{"flipLabels":false,"showGridLines":true,"size":[100,100],"enable":false,"type":"x","chartsPerLine":4},"columnMap":{"trellis":[],"dimensionAxis":["Name"],"plots":["count"]},"showActionMenu":true,"measureAxis2":{"sqrtScale":false,"showTitle":true,"showAxis":true,"title":"","customDomain":{"showDomain":false}},"measureAxis1":{"sqrtScale":false,"showTitle":true,"showAxis":true,"title":"","customDomain":{"showDomain":false}},"valueType":"compactNumber","theme":"wave","compactDecimalDigits":-1,"dimensionAxis":{"showTitle":true,"customSize":"auto","showAxis":true,"title":"","icons":{"useIcons":false,"iconProps":{"fit":"cover","column":"","type":"round"}}},"applyConditionalFormatting":true},"type":"chart"}},"Members":{"broadcastFacet":true,"groups":[],"numbers":[],"query":"q = load \"RebateProgramMemberMaster\";  q = filter q by 'MemberStatus' == \"Active\"; current = filter q by 'CreatedDate_sec_epoch' <= {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000; current = filter current by 'CreatedDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000; previous = filter q by 'CreatedDate_sec_epoch' <= {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000;  previous = filter previous by 'CreatedDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000; result = group q by all full, current by all full, previous by all;\nresult = foreach result generate unique(current.'AccountId') as 'unique_AccountId', case when coalesce(unique(previous.'AccountId'),0) == 0 then \"-\" else number_to_string(round((coalesce(unique(current.'AccountId'),0) - coalesce(unique(previous.'AccountId'),0)) * 100 / coalesce(unique(previous.'AccountId'),0),0),\"0\") end as 'Delta%', case when (coalesce(unique(current.'AccountId'),0) - coalesce(unique(previous.'AccountId'),0)) > 0 then \"rgb(0, 181, 49)\" else \"rgb(255, 152, 151)\" end as 'Color', case when (coalesce(unique(current.'AccountId'),0) - coalesce(unique(previous.'AccountId'),0)) > 0 then \"↑\"  when (coalesce(unique(current.'AccountId'),0) - coalesce(unique(previous.'AccountId'),0)) == 0 then \"-\" else \"↓\" end as 'Arrow';\nresult = limit result 200;","receiveFacetSource":{"mode":"all","steps":[]},"selectMode":"single","strings":[],"type":"saql","useGlobal":true,"visualizationParameters":{"parameters":{"autoFitMode":"keepLabels","bins":{"breakpoints":{"high":100,"low":0},"bands":{"high":{"color":"#008000","label":""},"low":{"color":"#B22222","label":""},"medium":{"color":"#ffa500","label":""}}},"legend":{"descOrder":false,"showHeader":true,"show":true,"customSize":"auto","position":"right-top","inside":false},"axisMode":"multi","tooltip":{"content":{"legend":{"showBinLabel":true,"measures":[],"showNullValues":true,"customizeLegend":false,"showPercentage":true,"showDimensions":true,"showMeasures":true,"dimensions":[]}}},"visualizationType":"hbar","title":{"fontSize":14,"subtitleFontSize":11,"label":"","align":"center","subtitleLabel":""},"binValues":false,"trellis":{"flipLabels":false,"showGridLines":true,"size":[100,100],"enable":false,"type":"x","chartsPerLine":4},"showActionMenu":true,"measureAxis2":{"sqrtScale":false,"showTitle":true,"showAxis":true,"title":"","customDomain":{"showDomain":false}},"measureAxis1":{"sqrtScale":false,"showTitle":true,"showAxis":true,"title":"","customDomain":{"showDomain":false}},"valueType":"compactNumber","theme":"wave","compactDecimalDigits":-1,"dimensionAxis":{"showTitle":true,"customSize":"auto","showAxis":true,"title":"","icons":{"useIcons":false,"iconProps":{"fit":"cover","column":"","type":"round"}}},"applyConditionalFormatting":true},"type":"chart"}},"KPI_by_Products":{"broadcastFacet":true,"groups":[],"numbers":[],"query":"all_payout_sources = load \"ProgramRebateTypePayoutSourceMaster\";\n ProductMaster4 = load \"ProductMaster\";\r\nRebateProgramMemberMaster4 = load \"RebateProgramMemberMaster\";\r\nRebateProgramMemberMaster4 = group RebateProgramMemberMaster4 by ('RebateProgram.Name','Account.Name');\r\nProductMaster4 = group ProductMaster4 by ('Id','Name');\r\nProgramRebateTypeMaster4 = load \"ProgramRebateTypeMaster\";\r\nProgramRebateTypeMaster4 = group ProgramRebateTypeMaster4 by ( 'InclusionFilters.ValuesMultiValue','RebateProgram.Name');\r\nresult = cogroup  ProgramRebateTypeMaster4 by 'InclusionFilters.ValuesMultiValue' left , ProductMaster4 by 'Id';\r\nresult = foreach result generate ProgramRebateTypeMaster4.'InclusionFilters.ValuesMultiValue' as 'ProductId', ProgramRebateTypeMaster4.'RebateProgram.Name' as 'RebateProgram.Name', ProductMaster4.'Name' as 'Product.Name';\r\nresult = group result by ('RebateProgram.Name', 'ProductId');\r\nresult1 = cogroup RebateProgramMemberMaster4 by 'RebateProgram.Name' left, result by 'RebateProgram.Name';\r\nresult1 = foreach result1 generate  RebateProgramMemberMaster4.'Account.Name' as 'Account.Name',result.'ProductId' as 'ProductId', first(result.'Product.Name') as 'Product.Name';\r\nresult1 = group result1 by ('{{cell(static_2.selection, 0, \"Groupby\").asString()}}');\r\ncurrent_valid_payout_sources = filter all_payout_sources by 'MemberPayout.PayoutPeriods.StartDate_sec_epoch' <= {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000;\r\ncurrent_valid_payout_sources = filter current_valid_payout_sources by 'MemberPayout.PayoutPeriods.EndDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000;\r\nStart_Current = foreach current_valid_payout_sources generate {{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000 as 'Start',\r\n {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000 as 'End','Id'+\"@#%\"+coalesce('{{cell(static_2.selection, 0, \"value1\").asString()}}',\"-\")+\"!#%\" as 'Id', 'MemberPayout.PayoutPeriods.StartDate_sec_epoch' as 'Start Date', 'MemberPayout.PayoutPeriods.EndDate_sec_epoch' as 'End Date', case when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000) then date_to_string(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch'),\"yyyy\") else date_to_string(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000),\"yyyy\") end as 'Date_Year', case when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000) then date_to_string(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch'),\"MM\") else date_to_string(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000),\"MM\") end as 'Date_Month', case when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' >= date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch')))) && {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000 >= date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch'))) then (daysBetween(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch'),month_last_day(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch')))) * 'DailyTotalTransactionAmount' when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000) && {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000 <= date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch'))) then (daysBetween(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch'),toDate({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000))) * 'DailyTotalTransactionAmount' when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < {{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' >= date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000)))) && {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000 >= date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000))) then (daysBetween(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000),month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000)))) * 'DailyTotalTransactionAmount' when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < {{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' <= date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000)))) && {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000 >= 'MemberPayout.PayoutPeriods.EndDate_sec_epoch' then (daysBetween(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000),toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) * 'DailyTotalTransactionAmount' when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < {{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000) && ({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000 <= date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000)))) && {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000 <= 'MemberPayout.PayoutPeriods.EndDate_sec_epoch' then (daysBetween(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000),toDate({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000))) * 'DailyTotalTransactionAmount' else 'AggregateObject.TotalTransactionAmount' end as 'TotalTransactionAmount', case when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' >= date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch')))) && {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000 >= date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch'))) then (daysBetween(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch'),month_last_day(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch')))) * 'DailyFinalRebateAmount' when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000) && {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000 <= date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch'))) then (daysBetween(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch'),toDate({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000))) * 'DailyFinalRebateAmount' when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < {{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' >= date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000)))) && {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000 >= date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000))) then (daysBetween(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000),month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000)))) * 'DailyFinalRebateAmount' when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < {{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' <= date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000)))) && {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000 >= 'MemberPayout.PayoutPeriods.EndDate_sec_epoch' then (daysBetween(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000),toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) * 'DailyFinalRebateAmount' when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < {{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000) && ({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000 <= date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000)))) && {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000 <= 'MemberPayout.PayoutPeriods.EndDate_sec_epoch' then (daysBetween(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000),toDate({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000))) * 'DailyFinalRebateAmount' else 'FinalRebateAmount' end as 'RebateAmount', case when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' >= date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch')))) && {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000 >= date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch'))) then (daysBetween(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch'),month_last_day(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch')))) * 'DailyQuantity' when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000) && {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000 <= date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch'))) then (daysBetween(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch'),toDate({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000))) * 'DailyQuantity' when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < {{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' >= date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000)))) && {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000 >= date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000))) then (daysBetween(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000),month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000)))) * 'DailyQuantity' when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < {{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' <= date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000)))) && {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000 >= 'MemberPayout.PayoutPeriods.EndDate_sec_epoch' then (daysBetween(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000),toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) * 'DailyQuantity' when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < {{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000) && ({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000 <= date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000)))) && {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000 <= 'MemberPayout.PayoutPeriods.EndDate_sec_epoch' then (daysBetween(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000),toDate({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000))) * 'DailyQuantity' else 'AggregateObject.TotalQuantity' end as 'TotalQuantity', 'DailyTotalTransactionAmount' as 'DailyTotalTransactionAmount', 'DailyFinalRebateAmount' as 'DailyFinalRebateAmount', 'DailyQuantity' as 'DailyQuantity';\r\nEnd_Current = foreach current_valid_payout_sources generate {{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000 as 'Start',\r\n {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000 as 'End', 'Id'+\"@#%\"+coalesce('{{cell(static_2.selection, 0, \"value1\").asString()}}',\"-\")+\"!#%\" as 'Id', 'MemberPayout.PayoutPeriods.StartDate_sec_epoch' as 'Start Date', 'MemberPayout.PayoutPeriods.EndDate_sec_epoch' as 'End Date', case when ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' < {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000) then date_to_string(toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'),\"yyyy\") else  date_to_string(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000),\"yyyy\") end as 'Date_Year', case when ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' < {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000) then date_to_string(toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'),\"MM\") else  date_to_string(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000),\"MM\") end as 'Date_Month', case when (('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < (date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) - 2764800)))) + 86400)) && ({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000 < (date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) - 2764800)))) + 86400)) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' <= {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000))  then (daysBetween(toDate((date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) - 2764800)))))),toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) * 'DailyTotalTransactionAmount' when (('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < (date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000))) - 2764800)))) + 86400)) && ({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000 < (date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000))) - 2764800)))) + 86400)) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000)) then (daysBetween(toDate((date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000))) - 2764800)))))),toDate({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000))) * 'DailyTotalTransactionAmount' else 0 end as 'TotalTransactionAmount', case when (('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < (date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) - 2764800)))) + 86400)) && ({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000 < (date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) - 2764800)))) + 86400)) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' <= {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000))  then (daysBetween(toDate((date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) - 2764800)))))),toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) * 'DailyFinalRebateAmount' when (('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < (date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000))) - 2764800)))) + 86400)) && ({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000 < (date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000))) - 2764800)))) + 86400)) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000)) then (daysBetween(toDate((date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000))) - 2764800)))))),toDate({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000))) * 'DailyFinalRebateAmount' else 0 end as 'RebateAmount', case when (('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < (date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) - 2764800)))) + 86400)) && ({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000 < (date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) - 2764800)))) + 86400)) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' <= {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000))  then (daysBetween(toDate((date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) - 2764800)))))),toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) * 'DailyQuantity' when (('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < (date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000))) - 2764800)))) + 86400)) && ({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000 < (date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000))) - 2764800)))) + 86400)) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000)) then (daysBetween(toDate((date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000))) - 2764800)))))),toDate({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000))) * 'DailyQuantity' else 0 end as 'TotalQuantity', 'DailyTotalTransactionAmount' as 'DailyTotalTransactionAmount', 'DailyFinalRebateAmount' as 'DailyFinalRebateAmount', 'DailyQuantity' as 'DailyQuantity';\r\nDataForFill_Current = union Start_Current, End_Current;\r\nDataForFill_Current = foreach DataForFill_Current generate 'Id' as 'Id', 'Date_Year' as 'Date_Year', 'Date_Month' as 'Date_Month','Start' as 'Start', 'End' as 'End', 'Start Date' as 'Start Date', 'End Date' as 'End Date', 'TotalTransactionAmount' as 'TotalTransactionAmount', 'RebateAmount' as 'RebateAmount', 'TotalQuantity' as 'TotalQuantity', 'DailyTotalTransactionAmount' as 'DailyTotalTransactionAmount', 'DailyFinalRebateAmount' as 'DailyFinalRebateAmount', 'DailyQuantity' as 'DailyQuantity';\r\nFilledData_Current = fill DataForFill_Current by (dateCols=('Date_Year', 'Date_Month', \"Y-M\"), partition='Id');\r\nFilledData_Current = group FilledData_Current by ('Id', 'Date_Year', 'Date_Month');\r\nFilledData_Current = foreach FilledData_Current generate 'Id', 'Date_Year', 'Date_Month', date_to_epoch(toDate('Date_Year'+\"-\"+'Date_Month'+\"-01\",\"yyyy-MM-dd\")) as 'Date', first('Start') as 'Start', min(first('Start')) over ([..0] partition by 'Id' order by ('Date_Year','Date_Month')) as 'StartFilter', first('End') as 'End', min(first('End')) over ([..0] partition by 'Id' order by ('Date_Year','Date_Month')) as 'EndFilter',  min(first('Start Date')) over ([..0] partition by 'Id' order by ('Date_Year','Date_Month')) as 'Start Date', max(first('End Date')) over ([..] partition by 'Id' ) as 'End Date',  sum('TotalTransactionAmount') as 'TotalTransactionAmount', min(first('DailyTotalTransactionAmount'))over ([..0] partition by 'Id' order by ('Date_Year','Date_Month')) as 'DailyTotalTransactionAmount', sum('RebateAmount') as 'RebateAmount', min(first('DailyFinalRebateAmount'))over ([..0] partition by 'Id' order by ('Date_Year','Date_Month')) as 'DailyFinalRebateAmount', sum('TotalQuantity') as 'TotalQuantity', min(first('DailyQuantity'))over ([..0] partition by 'Id' order by ('Date_Year','Date_Month')) as 'DailyQuantity';\r\nFilledData_Current = filter FilledData_Current by coalesce('Start',0) != 0 || ('Date' > 'StartFilter' && 'Date' > 'Start Date' && 'Date' < 'End Date' && 'Date' < 'EndFilter');\r\nFilledData_Current = foreach FilledData_Current generate substr('Id', index_of('Id',\"@#%\",1,1)+3, index_of('Id',\"!#%\") - (index_of('Id',\"@#%\",1,1)+3)) as '{{cell(static_2.selection, 0, \"value\").asString()}}', 'Date_Year', 'Date_Month', (case when 'TotalTransactionAmount' is null then month_days(toDate('Date'))*'DailyTotalTransactionAmount' else 'TotalTransactionAmount' end) as 'TotalTransactionAmount', (case when 'RebateAmount' is null then month_days(toDate('Date'))*'DailyFinalRebateAmount' else 'RebateAmount' end) as 'RebateAmount', (case when 'TotalQuantity' is null then month_days(toDate('Date'))*'DailyQuantity' else 'TotalQuantity' end) as 'TotalQuantity';\r\nresult2 = group FilledData_Current by '{{cell(static_2.selection, 0, \"value\").asString()}}';\r\nfinal_result = {{cell(static_2.selection, 0, \"Grouping\").asObject()}} result2 by '{{cell(static_2.selection, 0, \"value\").asString()}}';\r\nfinal_result = foreach final_result generate {{cell(static_2.selection, 0, \"Generate\").asObject()}}'{{cell(static_2.selection, 0, \"value\").asString()}}' as '{{cell(static_2.selection, 0, \"value\").asString()}}',coalesce(sum(result2.'TotalTransactionAmount'),0) as 'AggregateObject.TotalTransactionAmount',coalesce(sum(result2.'RebateAmount'),0) as 'RebateAmount', coalesce(sum(result2.'TotalQuantity'),0) as 'TotalQuantity', coalesce(sum(result2.'RebateAmount')/sum(result2.'TotalTransactionAmount'),0) as 'Payout:Revenue',coalesce(sum(result2.'RebateAmount')/sum(result2.'TotalQuantity'),0) as 'Payout:Quantity';\r\nfinal_result = foreach final_result generate '{{cell(static_2.selection, 0, \"value\").asString()}}' as '{{cell(static_2.selection, 0, \"value1\").asString()}}', '{{cell(static_1.selection, 0, \"value\").asString()}}' as  '{{cell(static_1.selection, 0, \"Display\").asString()}}';\r\nfinal_result = order final_result by '{{cell(static_1.selection, 0, \"Display\").asString()}}' desc; ","receiveFacetSource":{"mode":"all","steps":[]},"selectMode":"single","start":"[]","strings":[],"type":"saql","useGlobal":true,"visualizationParameters":{"parameters":{"autoFitMode":"keepLabels","bins":{"breakpoints":{"high":100,"low":0},"bands":{"high":{"color":"#008000","label":""},"low":{"color":"#B22222","label":""},"medium":{"color":"#ffa500","label":""}}},"legend":{"descOrder":false,"showHeader":true,"show":true,"customSize":"auto","position":"right-top","inside":false},"axisMode":"multi","tooltip":{"content":{"legend":{"showBinLabel":true,"measures":[],"showNullValues":true,"customizeLegend":false,"showPercentage":true,"showDimensions":true,"showMeasures":true,"dimensions":[]}}},"visualizationType":"hbar","title":{"fontSize":14,"subtitleFontSize":11,"label":"","align":"center","subtitleLabel":""},"binValues":false,"trellis":{"flipLabels":false,"showGridLines":true,"size":[100,100],"enable":false,"type":"x","chartsPerLine":4},"showActionMenu":true,"measureAxis2":{"sqrtScale":false,"showTitle":true,"showAxis":true,"title":"","customDomain":{"showDomain":false}},"measureAxis1":{"sqrtScale":false,"showTitle":true,"showAxis":true,"title":"","customDomain":{"showDomain":false}},"valueType":"compactNumber","theme":"wave","compactDecimalDigits":-1,"dimensionAxis":{"showTitle":true,"customSize":"auto","showAxis":true,"title":"","icons":{"useIcons":false,"iconProps":{"fit":"cover","column":"","type":"round"}}},"applyConditionalFormatting":true},"type":"chart"}},"Transaction_Amount":{"broadcastFacet":true,"groups":[],"numbers":[],"query":"all_payout_sources = load \"ProgramRebateTypePayoutSourceMaster\";\r\nall_payout_sources = filter all_payout_sources by {{cell(RebateProgram_Name_1.selection, 0, \"RebateProgram.Name\").asEquality(\"MemberPayout.PayoutPeriods.RebateProgram.Name\")}};\r\nall_payout_sources = filter all_payout_sources by {{cell(Name_2.selection, 0, \"Name\").asEquality(\"RebateType.Name\")}};\r\nall_payout_sources = filter all_payout_sources by {{cell(Account_Name_1.selection, 0, \"Account.Name\").asEquality(\"MemberPayout.Member.Account.Name\")}};\r\ncurrent_valid_payout_sources = filter all_payout_sources by 'MemberPayout.PayoutPeriods.StartDate_sec_epoch' <= {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000;\r\ncurrent_valid_payout_sources = filter current_valid_payout_sources by 'MemberPayout.PayoutPeriods.EndDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000;\r\nStart_Current = foreach current_valid_payout_sources generate {{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000 as 'Start',\r\n'MemberPayout.Status' as 'MemberPayout.Status' ,(case when 'MemberPayout.Status' == \"Approved\" then 'DailyFinalRebateAmount' else 0 end) as 'DailyFinalRebateAmount_Approved', (case when 'MemberPayout.Status' == \"Interim\" || 'MemberPayout.Status' == \"Pending\" || 'MemberPayout.Status' == \"SystemCalculated\"  then 'DailyFinalRebateAmount' else 0 end ) as 'DailyFinalRebateAmount_UnderReview',\r\n {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000 as 'End', 'Id' as 'Id', 'MemberPayout.PayoutPeriods.StartDate_sec_epoch' as 'Start Date', 'MemberPayout.PayoutPeriods.EndDate_sec_epoch' as 'End Date', case when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000) then date_to_string(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch'),\"yyyy\") else date_to_string(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000),\"yyyy\") end as 'Date_Year', case when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000) then date_to_string(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch'),\"MM\") else date_to_string(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000),\"MM\") end as 'Date_Month', case when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' >= date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch')))) && {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000 >= date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch'))) then (daysBetween(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch'),month_last_day(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch')))) * 'DailyTotalTransactionAmount' when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000) && {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000 <= date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch'))) then (daysBetween(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch'),toDate({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000))) * 'DailyTotalTransactionAmount' when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < {{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' >= date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000)))) && {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000 >= date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000))) then (daysBetween(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000),month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000)))) * 'DailyTotalTransactionAmount' when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < {{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' <= date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000)))) && {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000 >= 'MemberPayout.PayoutPeriods.EndDate_sec_epoch' then (daysBetween(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000),toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) * 'DailyTotalTransactionAmount' when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < {{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000) && ({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000 <= date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000)))) && {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000 <= 'MemberPayout.PayoutPeriods.EndDate_sec_epoch' then (daysBetween(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000),toDate({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000))) * 'DailyTotalTransactionAmount' else 'AggregateObject.TotalTransactionAmount' end as 'TotalTransactionAmount',\r\n\r\n case when ('MemberPayout.Status' == \"Approved\") && ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' >= date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch')))) && {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000 >= date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch'))) then (daysBetween(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch'),month_last_day(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch')))) * 'DailyFinalRebateAmount' when ('MemberPayout.Status' == \"Approved\") && ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000) && {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000 <= date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch'))) then (daysBetween(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch'),toDate({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000))) * 'DailyFinalRebateAmount' when ('MemberPayout.Status' == \"Approved\") && ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < {{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' >= date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000)))) && {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000 >= date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000))) then (daysBetween(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000),month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000)))) * 'DailyFinalRebateAmount' when ('MemberPayout.Status' == \"Approved\") && ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < {{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' <= date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000)))) && {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000 >= 'MemberPayout.PayoutPeriods.EndDate_sec_epoch' then (daysBetween(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000),toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) * 'DailyFinalRebateAmount' when ('MemberPayout.Status' == \"Approved\") && ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < {{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000) && ({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000 <= date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000)))) && {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000 <= 'MemberPayout.PayoutPeriods.EndDate_sec_epoch' then (daysBetween(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000),toDate({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000))) * 'DailyFinalRebateAmount' else (case when 'MemberPayout.Status' == \"Approved\" then 'FinalRebateAmount' else 0 end)   end as 'Approved TD_Current',\r\n\r\n case when ('MemberPayout.Status' == \"Interim\" || 'MemberPayout.Status' == \"Pending\" || 'MemberPayout.Status' == \"SystemCalculated\") &&('MemberPayout.PayoutPeriods.StartDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' >= date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch')))) && {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000 >= date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch'))) then (daysBetween(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch'),month_last_day(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch')))) * 'DailyFinalRebateAmount' when ('MemberPayout.Status' == \"Interim\" || 'MemberPayout.Status' == \"Pending\" || 'MemberPayout.Status' == \"SystemCalculated\") && ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000) && {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000 <= date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch'))) then (daysBetween(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch'),toDate({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000))) * 'DailyFinalRebateAmount' when ('MemberPayout.Status' == \"Interim\" || 'MemberPayout.Status' == \"Pending\" || 'MemberPayout.Status' == \"SystemCalculated\") && ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < {{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' >= date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000)))) && {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000 >= date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000))) then (daysBetween(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000),month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000)))) * 'DailyFinalRebateAmount' when ('MemberPayout.Status' == \"Interim\" || 'MemberPayout.Status' == \"Pending\" || 'MemberPayout.Status' == \"SystemCalculated\") && ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < {{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' <= date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000)))) && {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000 >= 'MemberPayout.PayoutPeriods.EndDate_sec_epoch' then (daysBetween(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000),toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) * 'DailyFinalRebateAmount' when ('MemberPayout.Status' == \"Interim\" || 'MemberPayout.Status' == \"Pending\" || 'MemberPayout.Status' == \"SystemCalculated\") && ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < {{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000) && ({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000 <= date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000)))) && {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000 <= 'MemberPayout.PayoutPeriods.EndDate_sec_epoch' then (daysBetween(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000),toDate({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000))) * 'DailyFinalRebateAmount' else (case when 'MemberPayout.Status' == \"Interim\" || 'MemberPayout.Status' == \"Pending\" || 'MemberPayout.Status' == \"SystemCalculated\" then 'FinalRebateAmount' else 0 end)  end as 'Under Review_Current',\r\n \r\n \r\n case when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' >= date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch')))) && {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000 >= date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch'))) then (daysBetween(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch'),month_last_day(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch')))) * 'DailyFinalRebateAmount' when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000) && {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000 <= date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch'))) then (daysBetween(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch'),toDate({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000))) * 'DailyFinalRebateAmount' when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < {{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' >= date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000)))) && {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000 >= date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000))) then (daysBetween(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000),month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000)))) * 'DailyFinalRebateAmount' when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < {{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' <= date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000)))) && {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000 >= 'MemberPayout.PayoutPeriods.EndDate_sec_epoch' then (daysBetween(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000),toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) * 'DailyFinalRebateAmount' when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < {{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000) && ({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000 <= date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000)))) && {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000 <= 'MemberPayout.PayoutPeriods.EndDate_sec_epoch' then (daysBetween(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000),toDate({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000))) * 'DailyFinalRebateAmount' else 'FinalRebateAmount' end as 'RebateAmount',\r\n \r\n \r\n case when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' >= date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch')))) && {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000 >= date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch'))) then (daysBetween(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch'),month_last_day(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch')))) * 'DailyRebateAmount' when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000) && {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000 <= date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch'))) then (daysBetween(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch'),toDate({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000))) * 'DailyRebateAmount' when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < {{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' >= date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000)))) && {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000 >= date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000))) then (daysBetween(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000),month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000)))) * 'DailyRebateAmount' when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < {{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' <= date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000)))) && {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000 >= 'MemberPayout.PayoutPeriods.EndDate_sec_epoch' then (daysBetween(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000),toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) * 'DailyRebateAmount' when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < {{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000) && ({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000 <= date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000)))) && {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000 <= 'MemberPayout.PayoutPeriods.EndDate_sec_epoch' then (daysBetween(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000),toDate({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000))) * 'DailyRebateAmount' else 'RebateAmount' end as 'RebateBeforeAdjustment', case when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' >= date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch')))) && {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000 >= date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch'))) then (daysBetween(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch'),month_last_day(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch')))) * 'DailyQuantity' when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000) && {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000 <= date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch'))) then (daysBetween(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch'),toDate({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000))) * 'DailyQuantity' when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < {{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' >= date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000)))) && {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000 >= date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000))) then (daysBetween(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000),month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000)))) * 'DailyQuantity' when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < {{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' <= date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000)))) && {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000 >= 'MemberPayout.PayoutPeriods.EndDate_sec_epoch' then (daysBetween(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000),toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) * 'DailyQuantity' when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < {{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000) && ({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000 <= date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000)))) && {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000 <= 'MemberPayout.PayoutPeriods.EndDate_sec_epoch' then (daysBetween(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000),toDate({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000))) * 'DailyQuantity' else 'AggregateObject.TotalQuantity' end as 'TotalQuantity', 'DailyTotalTransactionAmount' as 'DailyTotalTransactionAmount', 'DailyFinalRebateAmount' as 'DailyFinalRebateAmount', 'DailyQuantity' as 'DailyQuantity', 'DailyRebateAmount' as 'DailyRebateAmount';\r\nEnd_Current = foreach current_valid_payout_sources generate 'MemberPayout.Status' as 'MemberPayout.Status',(case when 'MemberPayout.Status' == \"Approved\" then 'DailyFinalRebateAmount' else 0 end) as 'DailyFinalRebateAmount_Approved', (case when 'MemberPayout.Status' == \"Interim\" || 'MemberPayout.Status' == \"Pending\" || 'MemberPayout.Status' == \"SystemCalculated\"  then 'DailyFinalRebateAmount' else 0 end ) as 'DailyFinalRebateAmount_UnderReview' ,{{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000 as 'Start', {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000 as 'End', 'Id' as 'Id', 'MemberPayout.PayoutPeriods.StartDate_sec_epoch' as 'Start Date', 'MemberPayout.PayoutPeriods.EndDate_sec_epoch' as 'End Date', case when ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' < {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000) then date_to_string(toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'),\"yyyy\") else  date_to_string(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000),\"yyyy\") end as 'Date_Year', case when ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' < {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000) then date_to_string(toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'),\"MM\") else  date_to_string(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000),\"MM\") end as 'Date_Month', case when (('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < (date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) - 2764800)))) + 86400)) && ({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000 < (date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) - 2764800)))) + 86400)) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' <= {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000))  then (daysBetween(toDate((date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) - 2764800)))))),toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) * 'DailyTotalTransactionAmount' when (('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < (date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000))) - 2764800)))) + 86400)) && ({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000 < (date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000))) - 2764800)))) + 86400)) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000)) then (daysBetween(toDate((date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000))) - 2764800)))))),toDate({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000))) * 'DailyTotalTransactionAmount' else 0 end as 'TotalTransactionAmount', \r\n\r\n\r\n\r\ncase when ('MemberPayout.Status' == \"Approved\") && (('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < (date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) - 2764800)))) + 86400)) && ({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000 < (date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) - 2764800)))) + 86400)) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' <= {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000))  then (daysBetween(toDate((date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) - 2764800)))))),toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) * 'DailyFinalRebateAmount' when ('MemberPayout.Status' == \"Approved\") && (('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < (date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000))) - 2764800)))) + 86400)) && ({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000 < (date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000))) - 2764800)))) + 86400)) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000)) then (daysBetween(toDate((date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000))) - 2764800)))))),toDate({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000))) * 'DailyFinalRebateAmount' else 0 end as 'Approved TD_Current',\r\n\r\ncase when ('MemberPayout.Status' == \"Interim\" || 'MemberPayout.Status' == \"Pending\" || 'MemberPayout.Status' == \"SystemCalculated\") && (('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < (date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) - 2764800)))) + 86400)) && ({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000 < (date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) - 2764800)))) + 86400)) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' <= {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000))  then (daysBetween(toDate((date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) - 2764800)))))),toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) * 'DailyFinalRebateAmount' when ('MemberPayout.Status' == \"Interim\" || 'MemberPayout.Status' == \"Pending\" || 'MemberPayout.Status' == \"SystemCalculated\") && (('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < (date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000))) - 2764800)))) + 86400)) && ({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000 < (date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000))) - 2764800)))) + 86400)) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000)) then (daysBetween(toDate((date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000))) - 2764800)))))),toDate({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000))) * 'DailyFinalRebateAmount' else 0 end as 'Under Review_Current',\r\n\r\ncase when (('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < (date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) - 2764800)))) + 86400)) && ({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000 < (date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) - 2764800)))) + 86400)) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' <= {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000))  then (daysBetween(toDate((date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) - 2764800)))))),toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) * 'DailyFinalRebateAmount' when (('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < (date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000))) - 2764800)))) + 86400)) && ({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000 < (date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000))) - 2764800)))) + 86400)) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000)) then (daysBetween(toDate((date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000))) - 2764800)))))),toDate({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000))) * 'DailyFinalRebateAmount' else 0 end as 'RebateAmount',\r\ncase when (('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < (date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) - 2764800)))) + 86400)) && ({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000 < (date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) - 2764800)))) + 86400)) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' <= {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000))  then (daysBetween(toDate((date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) - 2764800)))))),toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) * 'DailyRebateAmount' when (('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < (date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000))) - 2764800)))) + 86400)) && ({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000 < (date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000))) - 2764800)))) + 86400)) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000)) then (daysBetween(toDate((date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000))) - 2764800)))))),toDate({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000))) * 'DailyRebateAmount' else 0 end as 'RebateBeforeAdjustment', case when (('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < (date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) - 2764800)))) + 86400)) && ({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000 < (date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) - 2764800)))) + 86400)) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' <= {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000))  then (daysBetween(toDate((date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) - 2764800)))))),toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) * 'DailyQuantity' when (('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < (date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000))) - 2764800)))) + 86400)) && ({{coalesce(cell(Date_Filter_1.result,0,\"Min\"),0).asObject()}}/1000 < (date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000))) - 2764800)))) + 86400)) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000)) then (daysBetween(toDate((date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000))) - 2764800)))))),toDate({{coalesce(cell(Date_Filter_1.result,0,\"Max\"),0).asObject()}}/1000))) * 'DailyQuantity' else 0 end as 'TotalQuantity', 'DailyTotalTransactionAmount' as 'DailyTotalTransactionAmount', 'DailyFinalRebateAmount' as 'DailyFinalRebateAmount', 'DailyQuantity' as 'DailyQuantity', 'DailyRebateAmount' as 'DailyRebateAmount';\r\nDataForFill_Current = union Start_Current, End_Current;\r\nDataForFill_Current = foreach DataForFill_Current generate 'Id' as 'Id', 'Date_Year' as 'Date_Year', 'Date_Month' as 'Date_Month','Start' as 'Start', 'End' as 'End', 'Start Date' as 'Start Date', 'End Date' as 'End Date','Approved TD_Current' as 'Approved TD_Current','Under Review_Current' as 'Under Review_Current', 'TotalTransactionAmount' as 'TotalTransactionAmount','RebateAmount' as 'RebateAmount', 'TotalQuantity' as 'TotalQuantity', 'DailyTotalTransactionAmount' as 'DailyTotalTransactionAmount','DailyFinalRebateAmount_Approved' as 'DailyFinalRebateAmount_Approved' ,'DailyFinalRebateAmount_UnderReview' as 'DailyFinalRebateAmount_UnderReview','DailyFinalRebateAmount' as 'DailyFinalRebateAmount', 'DailyQuantity' as 'DailyQuantity', 'DailyRebateAmount' as 'DailyRebateAmount', 'RebateBeforeAdjustment' as 'RebateBeforeAdjustment';\r\nFilledData_Current = fill DataForFill_Current by (dateCols=('Date_Year', 'Date_Month', \"Y-M\"), partition='Id');\r\nFilledData_Current = group FilledData_Current by ('Id', 'Date_Year', 'Date_Month');\r\nFilledData_Current = foreach FilledData_Current generate 'Id', 'Date_Year', 'Date_Month', date_to_epoch(toDate('Date_Year'+\"-\"+'Date_Month'+\"-01\",\"yyyy-MM-dd\")) as 'Date', first('Start') as 'Start', min(first('Start')) over ([..0] partition by 'Id' order by ('Date_Year','Date_Month')) as 'StartFilter', first('End') as 'End', min(first('End')) over ([..0] partition by 'Id' order by ('Date_Year','Date_Month')) as 'EndFilter',  min(first('Start Date')) over ([..0] partition by 'Id' order by ('Date_Year','Date_Month')) as 'Start Date', max(first('End Date')) over ([..] partition by 'Id' ) as 'End Date', sum('Approved TD_Current') as 'Approved TD_Current' ,sum('Under Review_Current') as 'Under Review_Current', sum('TotalTransactionAmount') as 'TotalTransactionAmount', min(first('DailyTotalTransactionAmount'))over ([..0] partition by 'Id' order by ('Date_Year','Date_Month')) as 'DailyTotalTransactionAmount', sum('RebateAmount') as 'RebateAmount', min(first('DailyFinalRebateAmount'))over ([..0] partition by 'Id' order by ('Date_Year','Date_Month')) as 'DailyFinalRebateAmount',min(first('DailyFinalRebateAmount_Approved'))over ([..0] partition by 'Id' order by ('Date_Year','Date_Month')) as 'DailyFinalRebateAmount_Approved',min(first('DailyFinalRebateAmount_UnderReview'))over ([..0] partition by 'Id' order by ('Date_Year','Date_Month')) as 'DailyFinalRebateAmount_UnderReview', sum('RebateBeforeAdjustment') as 'RebateBeforeAdjustment', min(first('DailyRebateAmount'))over ([..0] partition by 'Id' order by ('Date_Year','Date_Month')) as 'DailyRebateAmount', sum('TotalQuantity') as 'TotalQuantity', min(first('DailyQuantity'))over ([..0] partition by 'Id' order by ('Date_Year','Date_Month')) as 'DailyQuantity';\r\nFilledData_Current = filter FilledData_Current by coalesce('Start',0) != 0 || ('Date' > 'StartFilter' && 'Date' > 'Start Date' && 'Date' < 'End Date' && 'Date' < 'EndFilter');\r\nFilledData_Current = foreach FilledData_Current generate 'Id', 'Date_Year', 'Date_Month',\r\n(case when 'TotalTransactionAmount' is null then month_days(toDate('Date'))*'DailyTotalTransactionAmount' else 'TotalTransactionAmount' end) as 'TotalTransactionAmount',\r\n(case when 'RebateAmount' is null then month_days(toDate('Date'))*'DailyFinalRebateAmount' else 'RebateAmount' end) as 'RebateAmount',\r\n(case when 'RebateBeforeAdjustment' is null then month_days(toDate('Date'))*'DailyRebateAmount' else 'RebateBeforeAdjustment' end) as 'RebateBeforeAdjustment',\r\n(case when 'TotalQuantity' is null then month_days(toDate('Date'))*'DailyQuantity' else 'TotalQuantity' end) as 'TotalQuantity',\r\n(case when 'Approved TD_Current' is null then month_days(toDate('Date'))*'DailyFinalRebateAmount_Approved' else 'Approved TD_Current' end) as 'Approved TD_Current',\r\n(case when 'Under Review_Current' is null then month_days(toDate('Date'))*'DailyFinalRebateAmount_UnderReview' else 'Under Review_Current' end) as 'Under Review_Current';\r\nprevious_valid_payout_sources= filter all_payout_sources by 'MemberPayout.PayoutPeriods.StartDate_sec_epoch' <= {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000;\r\nprevious_valid_payout_sources= filter previous_valid_payout_sources by 'MemberPayout.PayoutPeriods.EndDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000;\r\nStart_Previous = foreach previous_valid_payout_sources generate {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000 as 'Start',\r\n'MemberPayout.Status' as 'MemberPayout.Status' ,(case when 'MemberPayout.Status' == \"Approved\" then 'DailyFinalRebateAmount' else 0 end) as 'DailyFinalRebateAmount_Approved', (case when 'MemberPayout.Status' == \"Interim\" || 'MemberPayout.Status' == \"Pending\" || 'MemberPayout.Status' == \"SystemCalculated\"  then 'DailyFinalRebateAmount' else 0 end ) as 'DailyFinalRebateAmount_UnderReview',\r\n {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000 as 'End', 'Id' as 'Id', 'MemberPayout.PayoutPeriods.StartDate_sec_epoch' as 'Start Date', 'MemberPayout.PayoutPeriods.EndDate_sec_epoch' as 'End Date', case when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000) then date_to_string(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch'),\"yyyy\") else date_to_string(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000),\"yyyy\") end as 'Date_Year', case when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000) then date_to_string(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch'),\"MM\") else date_to_string(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000),\"MM\") end as 'Date_Month', case when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' >= date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch')))) && {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000 >= date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch'))) then (daysBetween(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch'),month_last_day(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch')))) * 'DailyTotalTransactionAmount' when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000) && {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000 <= date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch'))) then (daysBetween(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch'),toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000))) * 'DailyTotalTransactionAmount' when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' >= date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000)))) && {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000 >= date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000))) then (daysBetween(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000),month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000)))) * 'DailyTotalTransactionAmount' when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' <= date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000)))) && {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000 >= 'MemberPayout.PayoutPeriods.EndDate_sec_epoch' then (daysBetween(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000),toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) * 'DailyTotalTransactionAmount' when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000) && ({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000 <= date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000)))) && {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000 <= 'MemberPayout.PayoutPeriods.EndDate_sec_epoch' then (daysBetween(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000),toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000))) * 'DailyTotalTransactionAmount' else 'AggregateObject.TotalTransactionAmount' end as 'TotalTransactionAmount',\r\n\r\n case when ('MemberPayout.Status' == \"Approved\") && ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' >= date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch')))) && {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000 >= date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch'))) then (daysBetween(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch'),month_last_day(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch')))) * 'DailyFinalRebateAmount' when ('MemberPayout.Status' == \"Approved\") && ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000) && {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000 <= date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch'))) then (daysBetween(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch'),toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000))) * 'DailyFinalRebateAmount' when ('MemberPayout.Status' == \"Approved\") && ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' >= date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000)))) && {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000 >= date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000))) then (daysBetween(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000),month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000)))) * 'DailyFinalRebateAmount' when ('MemberPayout.Status' == \"Approved\") && ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' <= date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000)))) && {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000 >= 'MemberPayout.PayoutPeriods.EndDate_sec_epoch' then (daysBetween(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000),toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) * 'DailyFinalRebateAmount' when ('MemberPayout.Status' == \"Approved\") && ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000) && ({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000 <= date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000)))) && {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000 <= 'MemberPayout.PayoutPeriods.EndDate_sec_epoch' then (daysBetween(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000),toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000))) * 'DailyFinalRebateAmount' else (case when 'MemberPayout.Status' == \"Approved\" then 'FinalRebateAmount' else 0 end)   end as 'Approved TD_Previous',\r\n\r\n case when ('MemberPayout.Status' == \"Interim\" || 'MemberPayout.Status' == \"Pending\" || 'MemberPayout.Status' == \"SystemCalculated\") &&('MemberPayout.PayoutPeriods.StartDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' >= date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch')))) && {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000 >= date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch'))) then (daysBetween(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch'),month_last_day(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch')))) * 'DailyFinalRebateAmount' when ('MemberPayout.Status' == \"Interim\" || 'MemberPayout.Status' == \"Pending\" || 'MemberPayout.Status' == \"SystemCalculated\") && ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000) && {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000 <= date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch'))) then (daysBetween(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch'),toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000))) * 'DailyFinalRebateAmount' when ('MemberPayout.Status' == \"Interim\" || 'MemberPayout.Status' == \"Pending\" || 'MemberPayout.Status' == \"SystemCalculated\") && ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' >= date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000)))) && {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000 >= date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000))) then (daysBetween(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000),month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000)))) * 'DailyFinalRebateAmount' when ('MemberPayout.Status' == \"Interim\" || 'MemberPayout.Status' == \"Pending\" || 'MemberPayout.Status' == \"SystemCalculated\") && ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' <= date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000)))) && {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000 >= 'MemberPayout.PayoutPeriods.EndDate_sec_epoch' then (daysBetween(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000),toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) * 'DailyFinalRebateAmount' when ('MemberPayout.Status' == \"Interim\" || 'MemberPayout.Status' == \"Pending\" || 'MemberPayout.Status' == \"SystemCalculated\") && ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000) && ({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000 <= date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000)))) && {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000 <= 'MemberPayout.PayoutPeriods.EndDate_sec_epoch' then (daysBetween(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000),toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000))) * 'DailyFinalRebateAmount' else (case when 'MemberPayout.Status' == \"Interim\" || 'MemberPayout.Status' == \"Pending\" || 'MemberPayout.Status' == \"SystemCalculated\" then 'FinalRebateAmount' else 0 end)  end as 'Under Review_Previous',\r\n \r\n \r\n case when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' >= date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch')))) && {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000 >= date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch'))) then (daysBetween(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch'),month_last_day(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch')))) * 'DailyFinalRebateAmount' when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000) && {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000 <= date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch'))) then (daysBetween(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch'),toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000))) * 'DailyFinalRebateAmount' when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' >= date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000)))) && {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000 >= date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000))) then (daysBetween(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000),month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000)))) * 'DailyFinalRebateAmount' when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' <= date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000)))) && {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000 >= 'MemberPayout.PayoutPeriods.EndDate_sec_epoch' then (daysBetween(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000),toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) * 'DailyFinalRebateAmount' when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000) && ({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000 <= date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000)))) && {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000 <= 'MemberPayout.PayoutPeriods.EndDate_sec_epoch' then (daysBetween(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000),toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000))) * 'DailyFinalRebateAmount' else 'FinalRebateAmount' end as 'RebateAmount',\r\n \r\n \r\n case when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' >= date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch')))) && {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000 >= date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch'))) then (daysBetween(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch'),month_last_day(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch')))) * 'DailyRebateAmount' when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000) && {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000 <= date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch'))) then (daysBetween(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch'),toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000))) * 'DailyRebateAmount' when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' >= date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000)))) && {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000 >= date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000))) then (daysBetween(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000),month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000)))) * 'DailyRebateAmount' when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' <= date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000)))) && {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000 >= 'MemberPayout.PayoutPeriods.EndDate_sec_epoch' then (daysBetween(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000),toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) * 'DailyRebateAmount' when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000) && ({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000 <= date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000)))) && {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000 <= 'MemberPayout.PayoutPeriods.EndDate_sec_epoch' then (daysBetween(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000),toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000))) * 'DailyRebateAmount' else 'RebateAmount' end as 'RebateBeforeAdjustment', case when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' >= date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch')))) && {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000 >= date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch'))) then (daysBetween(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch'),month_last_day(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch')))) * 'DailyQuantity' when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000) && {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000 <= date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch'))) then (daysBetween(toDate('MemberPayout.PayoutPeriods.StartDate_sec_epoch'),toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000))) * 'DailyQuantity' when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' >= date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000)))) && {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000 >= date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000))) then (daysBetween(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000),month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000)))) * 'DailyQuantity' when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' <= date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000)))) && {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000 >= 'MemberPayout.PayoutPeriods.EndDate_sec_epoch' then (daysBetween(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000),toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) * 'DailyQuantity' when ('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000) && ({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000 <= date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000)))) && {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000 <= 'MemberPayout.PayoutPeriods.EndDate_sec_epoch' then (daysBetween(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000),toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000))) * 'DailyQuantity' else 'AggregateObject.TotalQuantity' end as 'TotalQuantity', 'DailyTotalTransactionAmount' as 'DailyTotalTransactionAmount', 'DailyFinalRebateAmount' as 'DailyFinalRebateAmount', 'DailyQuantity' as 'DailyQuantity', 'DailyRebateAmount' as 'DailyRebateAmount';\r\nEnd_Previous = foreach previous_valid_payout_sources generate 'MemberPayout.Status' as 'MemberPayout.Status',(case when 'MemberPayout.Status' == \"Approved\" then 'DailyFinalRebateAmount' else 0 end) as 'DailyFinalRebateAmount_Approved', (case when 'MemberPayout.Status' == \"Interim\" || 'MemberPayout.Status' == \"Pending\" || 'MemberPayout.Status' == \"SystemCalculated\"  then 'DailyFinalRebateAmount' else 0 end ) as 'DailyFinalRebateAmount_UnderReview' ,{{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000 as 'Start', {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000 as 'End', 'Id' as 'Id', 'MemberPayout.PayoutPeriods.StartDate_sec_epoch' as 'Start Date', 'MemberPayout.PayoutPeriods.EndDate_sec_epoch' as 'End Date', case when ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' < {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000) then date_to_string(toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'),\"yyyy\") else  date_to_string(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000),\"yyyy\") end as 'Date_Year', case when ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' < {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000) then date_to_string(toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'),\"MM\") else  date_to_string(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000),\"MM\") end as 'Date_Month', case when (('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < (date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) - 2764800)))) + 86400)) && ({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000 < (date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) - 2764800)))) + 86400)) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' <= {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000))  then (daysBetween(toDate((date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) - 2764800)))))),toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) * 'DailyTotalTransactionAmount' when (('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < (date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000))) - 2764800)))) + 86400)) && ({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000 < (date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000))) - 2764800)))) + 86400)) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000)) then (daysBetween(toDate((date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000))) - 2764800)))))),toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000))) * 'DailyTotalTransactionAmount' else 0 end as 'TotalTransactionAmount', \r\n\r\n\r\n\r\ncase when ('MemberPayout.Status' == \"Approved\") && (('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < (date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) - 2764800)))) + 86400)) && ({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000 < (date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) - 2764800)))) + 86400)) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' <= {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000))  then (daysBetween(toDate((date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) - 2764800)))))),toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) * 'DailyFinalRebateAmount' when ('MemberPayout.Status' == \"Approved\") && (('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < (date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000))) - 2764800)))) + 86400)) && ({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000 < (date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000))) - 2764800)))) + 86400)) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000)) then (daysBetween(toDate((date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000))) - 2764800)))))),toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000))) * 'DailyFinalRebateAmount' else 0 end as 'Approved TD_Previous',\r\n\r\ncase when ('MemberPayout.Status' == \"Interim\" || 'MemberPayout.Status' == \"Pending\" || 'MemberPayout.Status' == \"SystemCalculated\") && (('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < (date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) - 2764800)))) + 86400)) && ({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000 < (date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) - 2764800)))) + 86400)) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' <= {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000))  then (daysBetween(toDate((date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) - 2764800)))))),toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) * 'DailyFinalRebateAmount' when ('MemberPayout.Status' == \"Interim\" || 'MemberPayout.Status' == \"Pending\" || 'MemberPayout.Status' == \"SystemCalculated\") && (('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < (date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000))) - 2764800)))) + 86400)) && ({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000 < (date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000))) - 2764800)))) + 86400)) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000)) then (daysBetween(toDate((date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000))) - 2764800)))))),toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000))) * 'DailyFinalRebateAmount' else 0 end as 'Under Review_Previous',\r\n\r\ncase when (('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < (date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) - 2764800)))) + 86400)) && ({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000 < (date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) - 2764800)))) + 86400)) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' <= {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000))  then (daysBetween(toDate((date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) - 2764800)))))),toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) * 'DailyFinalRebateAmount' when (('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < (date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000))) - 2764800)))) + 86400)) && ({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000 < (date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000))) - 2764800)))) + 86400)) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000)) then (daysBetween(toDate((date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000))) - 2764800)))))),toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000))) * 'DailyFinalRebateAmount' else 0 end as 'RebateAmount',\r\ncase when (('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < (date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) - 2764800)))) + 86400)) && ({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000 < (date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) - 2764800)))) + 86400)) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' <= {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000))  then (daysBetween(toDate((date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) - 2764800)))))),toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) * 'DailyRebateAmount' when (('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < (date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000))) - 2764800)))) + 86400)) && ({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000 < (date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000))) - 2764800)))) + 86400)) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000)) then (daysBetween(toDate((date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000))) - 2764800)))))),toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000))) * 'DailyRebateAmount' else 0 end as 'RebateBeforeAdjustment', case when (('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < (date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) - 2764800)))) + 86400)) && ({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000 < (date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) - 2764800)))) + 86400)) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' <= {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000))  then (daysBetween(toDate((date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) - 2764800)))))),toDate('MemberPayout.PayoutPeriods.EndDate_sec_epoch'))) * 'DailyQuantity' when (('MemberPayout.PayoutPeriods.StartDate_sec_epoch' < (date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000))) - 2764800)))) + 86400)) && ({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Min\"),0).asObject()}}/1000 < (date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000))) - 2764800)))) + 86400)) && ('MemberPayout.PayoutPeriods.EndDate_sec_epoch' >= {{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000)) then (daysBetween(toDate((date_to_epoch(month_last_day(toDate((date_to_epoch(month_last_day(toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000))) - 2764800)))))),toDate({{coalesce(cell(Date_Filter_1.result,0,\"Prev_Max\"),0).asObject()}}/1000))) * 'DailyQuantity' else 0 end as 'TotalQuantity', 'DailyTotalTransactionAmount' as 'DailyTotalTransactionAmount', 'DailyFinalRebateAmount' as 'DailyFinalRebateAmount', 'DailyQuantity' as 'DailyQuantity', 'DailyRebateAmount' as 'DailyRebateAmount';\r\nDataForFill_Previous = union Start_Previous, End_Previous;\r\nDataForFill_Previous = foreach DataForFill_Previous generate 'Id' as 'Id', 'Date_Year' as 'Date_Year', 'Date_Month' as 'Date_Month','Start' as 'Start', 'End' as 'End', 'Start Date' as 'Start Date', 'End Date' as 'End Date','Approved TD_Previous' as 'Approved TD_Previous','Under Review_Previous' as 'Under Review_Previous', 'TotalTransactionAmount' as 'TotalTransactionAmount','RebateAmount' as 'RebateAmount', 'TotalQuantity' as 'TotalQuantity', 'DailyTotalTransactionAmount' as 'DailyTotalTransactionAmount','DailyFinalRebateAmount_Approved' as 'DailyFinalRebateAmount_Approved' ,'DailyFinalRebateAmount_UnderReview' as 'DailyFinalRebateAmount_UnderReview','DailyFinalRebateAmount' as 'DailyFinalRebateAmount', 'DailyQuantity' as 'DailyQuantity', 'DailyRebateAmount' as 'DailyRebateAmount', 'RebateBeforeAdjustment' as 'RebateBeforeAdjustment';\r\nFilledData_Previous = fill DataForFill_Previous by (dateCols=('Date_Year', 'Date_Month', \"Y-M\"), partition='Id');\r\nFilledData_Previous = group FilledData_Previous by ('Id', 'Date_Year', 'Date_Month');\r\nFilledData_Previous = foreach FilledData_Previous generate 'Id', 'Date_Year', 'Date_Month', date_to_epoch(toDate('Date_Year'+\"-\"+'Date_Month'+\"-01\",\"yyyy-MM-dd\")) as 'Date', first('Start') as 'Start', min(first('Start')) over ([..0] partition by 'Id' order by ('Date_Year','Date_Month')) as 'StartFilter', first('End') as 'End', min(first('End')) over ([..0] partition by 'Id' order by ('Date_Year','Date_Month')) as 'EndFilter',  min(first('Start Date')) over ([..0] partition by 'Id' order by ('Date_Year','Date_Month')) as 'Start Date', max(first('End Date')) over ([..] partition by 'Id' ) as 'End Date', sum('Approved TD_Previous') as 'Approved TD_Previous' ,sum('Under Review_Previous') as 'Under Review_Previous', sum('TotalTransactionAmount') as 'TotalTransactionAmount', min(first('DailyTotalTransactionAmount'))over ([..0] partition by 'Id' order by ('Date_Year','Date_Month')) as 'DailyTotalTransactionAmount', sum('RebateAmount') as 'RebateAmount', min(first('DailyFinalRebateAmount'))over ([..0] partition by 'Id' order by ('Date_Year','Date_Month')) as 'DailyFinalRebateAmount',min(first('DailyFinalRebateAmount_Approved'))over ([..0] partition by 'Id' order by ('Date_Year','Date_Month')) as 'DailyFinalRebateAmount_Approved',min(first('DailyFinalRebateAmount_UnderReview'))over ([..0] partition by 'Id' order by ('Date_Year','Date_Month')) as 'DailyFinalRebateAmount_UnderReview', sum('RebateBeforeAdjustment') as 'RebateBeforeAdjustment', min(first('DailyRebateAmount'))over ([..0] partition by 'Id' order by ('Date_Year','Date_Month')) as 'DailyRebateAmount', sum('TotalQuantity') as 'TotalQuantity', min(first('DailyQuantity'))over ([..0] partition by 'Id' order by ('Date_Year','Date_Month')) as 'DailyQuantity';\r\nFilledData_Previous = filter FilledData_Previous by coalesce('Start',0) != 0 || ('Date' > 'StartFilter' && 'Date' > 'Start Date' && 'Date' < 'End Date' && 'Date' < 'EndFilter');\r\nFilledData_Previous = foreach FilledData_Previous generate 'Id', 'Date_Year', 'Date_Month',\r\n(case when 'TotalTransactionAmount' is null then month_days(toDate('Date'))*'DailyTotalTransactionAmount' else 'TotalTransactionAmount' end) as 'TotalTransactionAmount',\r\n(case when 'RebateAmount' is null then month_days(toDate('Date'))*'DailyFinalRebateAmount' else 'RebateAmount' end) as 'RebateAmount',\r\n(case when 'RebateBeforeAdjustment' is null then month_days(toDate('Date'))*'DailyRebateAmount' else 'RebateBeforeAdjustment' end) as 'RebateBeforeAdjustment',\r\n(case when 'TotalQuantity' is null then month_days(toDate('Date'))*'DailyQuantity' else 'TotalQuantity' end) as 'TotalQuantity',\r\n(case when 'Approved TD_Previous' is null then month_days(toDate('Date'))*'DailyFinalRebateAmount_Approved' else 'Approved TD_Previous' end) as 'Approved TD_Previous',\r\n(case when 'Under Review_Previous' is null then month_days(toDate('Date'))*'DailyFinalRebateAmount_UnderReview' else 'Under Review_Previous' end) as 'Under Review_Previous';\r\nresult = group FilledData_Current by all full, FilledData_Previous by all;\r\nresult = foreach result generate sum(FilledData_Current.'RebateAmount') as 'sum_RebateAmount',sum(FilledData_Current.'Approved TD_Current') as 'sum_Approved TD_Current',sum(FilledData_Current.'Under Review_Current') as 'sum_Under Review_Current', case when coalesce(sum(FilledData_Previous.'RebateAmount'),0) == 0 then \"-\" else number_to_string(round((coalesce(sum(FilledData_Current.'RebateAmount'),0) - coalesce(sum(FilledData_Previous.'RebateAmount'),0)) * 100 / coalesce(sum(FilledData_Previous.'RebateAmount'),0),0),\"0\") end as 'RebateDelta', case when coalesce(sum(FilledData_Previous.'Approved TD_Previous'),0) == 0 then \"-\" else number_to_string(round((coalesce(sum(FilledData_Current.'Approved TD_Current'),0) - coalesce(sum(FilledData_Previous.'Approved TD_Previous'),0)) * 100 / coalesce(sum(FilledData_Previous.'Approved TD_Previous'),0),0),\"0\") end as 'ApprovedTDDelta',case when coalesce(sum(FilledData_Previous.'Under Review_Previous'),0) == 0 then \"-\" else number_to_string(round((coalesce(sum(FilledData_Current.'Under Review_Current'),0) - coalesce(sum(FilledData_Previous.'Under Review_Previous'),0)) * 100 / coalesce(sum(FilledData_Previous.'Under Review_Previous'),0),0),\"0\") end as 'UnderReviewDelta',case when (coalesce(sum(FilledData_Current.'RebateAmount'),0) - coalesce(sum(FilledData_Previous.'RebateAmount'),0)) > 0 then \"rgb(255, 152, 151)\" else \"rgb(0, 181, 49)\" end as 'RebateColor',case when (coalesce(sum(FilledData_Current.'Approved TD_Current'),0) - coalesce(sum(FilledData_Previous.'Approved TD_Previous'),0)) > 0 then \"rgb(255, 152, 151)\" else \"rgb(0, 181, 49)\" end as 'ApprovedColor',case when (coalesce(sum(FilledData_Current.'Under Review_Current'),0) - coalesce(sum(FilledData_Previous.'Under Review_Previous'),0)) > 0 then \"rgb(255, 152, 151)\" else \"rgb(0, 181, 49)\" end as 'UnderReviewColor',case when (coalesce(sum(FilledData_Current.'RebateAmount'),0) - coalesce(sum(FilledData_Previous.'RebateAmount'),0)) > 0 then \"↑\"  when (coalesce(sum(FilledData_Current.'RebateAmount'),0) - coalesce(sum(FilledData_Previous.'RebateAmount'),0)) == 0 then \"-\" else \"↓\" end as 'RebateArrow', case when (coalesce(sum(FilledData_Current.'Approved TD_Current'),0) - coalesce(sum(FilledData_Previous.'Approved TD_Previous'),0)) > 0 then \"↑\"  when (coalesce(sum(FilledData_Current.'Approved TD_Current'),0) - coalesce(sum(FilledData_Previous.'Approved TD_Previous'),0)) == 0 then \"-\" else \"↓\" end as 'ApproveArrow',case when (coalesce(sum(FilledData_Current.'Under Review_Current'),0) - coalesce(sum(FilledData_Previous.'Under Review_Previous'),0)) > 0 then \"↑\"  when (coalesce(sum(FilledData_Current.'Under Review_Current'),0) - coalesce(sum(FilledData_Previous.'Under Review_Previous'),0)) == 0 then \"-\" else \"↓\" end as 'UnderReviewArrow',\r\nsum(FilledData_Current.'RebateBeforeAdjustment') as 'sum_RebateBeforeAdjustment', case when coalesce(sum(FilledData_Previous.'RebateBeforeAdjustment'),0) == 0 then \"-\" else number_to_string(round((coalesce(sum(FilledData_Current.'RebateBeforeAdjustment'),0) - coalesce(sum(FilledData_Previous.'RebateBeforeAdjustment'),0)) * 100 / coalesce(sum(FilledData_Previous.'RebateBeforeAdjustment'),0),0),\"0\") end as 'RebateBeforeAdjustmentDelta', case when (coalesce(sum(FilledData_Current.'RebateBeforeAdjustment'),0) - coalesce(sum(FilledData_Previous.'RebateBeforeAdjustment'),0)) > 0 then \"rgb(230, 29, 25)\" else \"rgb(0, 181, 49)\" end as 'RebateBeforeAdjustmentColor', case when (coalesce(sum(FilledData_Current.'RebateBeforeAdjustment'),0) - coalesce(sum(FilledData_Previous.'RebateBeforeAdjustment'),0)) > 0 then \"↑\"  when (coalesce(sum(FilledData_Current.'RebateBeforeAdjustment'),0) - coalesce(sum(FilledData_Previous.'RebateBeforeAdjustment'),0)) == 0 then \"-\" else \"↓\" end as 'RebateBeforeAdjustmentArrow', sum(FilledData_Current.'TotalQuantity') as 'sum_AggregateObject.TotalQuantity', case when coalesce(sum(FilledData_Previous.'TotalQuantity'),0) == 0 then \"-\" else number_to_string(round((coalesce(sum(FilledData_Current.'TotalQuantity'),0) - coalesce(sum(FilledData_Previous.'TotalQuantity'),0)) * 100 / coalesce(sum(FilledData_Previous.'TotalQuantity'),0),0),\"0\") end as 'QuantityDelta', case when (coalesce(sum(FilledData_Current.'TotalQuantity'),0) - coalesce(sum(FilledData_Previous.'TotalQuantity'),0)) > 0 then \"rgb(0, 181, 49)\" else \"rgb(230, 29, 25)\" end as 'QuantityColor', case when (coalesce(sum(FilledData_Current.'TotalQuantity'),0) - coalesce(sum(FilledData_Previous.'TotalQuantity'),0)) > 0 then \"↑\"  when (coalesce(sum(FilledData_Current.'TotalQuantity'),0) - coalesce(sum(FilledData_Previous.'TotalQuantity'),0)) == 0 then \"-\" else \"↓\" end as 'QuantityArrow', sum(FilledData_Current.'TotalTransactionAmount') as 'sum_AggregateObject.TotalTransactionAmount', case when coalesce(sum(FilledData_Previous.'TotalTransactionAmount'),0) == 0 then \"-\" else number_to_string(round((coalesce(sum(FilledData_Current.'TotalTransactionAmount'),0) - coalesce(sum(FilledData_Previous.'TotalTransactionAmount'),0)) * 100 / coalesce(sum(FilledData_Previous.'TotalTransactionAmount'),0),0),\"0\") end as 'TransactionDelta', case when (coalesce(sum(FilledData_Current.'TotalTransactionAmount'),0) - coalesce(sum(FilledData_Previous.'TotalTransactionAmount'),0)) > 0 then \"rgb(0, 181, 49)\" else \"rgb(230, 29, 25)\" end as 'TransactionColor', case when (coalesce(sum(FilledData_Current.'TotalTransactionAmount'),0) - coalesce(sum(FilledData_Previous.'TotalTransactionAmount'),0)) > 0 then \"↑\"  when (coalesce(sum(FilledData_Current.'TotalTransactionAmount'),0) - coalesce(sum(FilledData_Previous.'TotalTransactionAmount'),0)) == 0 then \"-\" else \"↓\" end as 'TransactionArrow', round(sum(FilledData_Current.'RebateAmount')/sum(FilledData_Current.'TotalTransactionAmount'),4) as 'Payout:Revenue', case when coalesce(sum(FilledData_Previous.'RebateAmount')/sum(FilledData_Previous.'TotalTransactionAmount'),0) == 0 then \"-\" else number_to_string(round((coalesce(sum(FilledData_Current.'RebateAmount')/sum(FilledData_Current.'TotalTransactionAmount'),0) - coalesce(sum(FilledData_Previous.'RebateAmount')/sum(FilledData_Previous.'TotalTransactionAmount'),0)) * 100 / coalesce(sum(FilledData_Previous.'RebateAmount')/sum(FilledData_Previous.'TotalTransactionAmount'),0),0),\"0\") end as 'Payout:RevenueDelta', case when (coalesce(sum(FilledData_Current.'RebateAmount')/sum(FilledData_Current.'TotalTransactionAmount'),0) - coalesce(sum(FilledData_Previous.'RebateAmount')/sum(FilledData_Previous.'TotalTransactionAmount'),0)) > 0 then \"rgb(255, 152, 151)\" else \"rgb(0, 181, 49)\" end as 'Payout:RevenueColor',  case when (coalesce(sum(FilledData_Current.'RebateAmount')/sum(FilledData_Current.'TotalTransactionAmount'),0) - coalesce(sum(FilledData_Previous.'RebateAmount')/sum(FilledData_Previous.'TotalTransactionAmount'),0)) > 0 then \"↑\"  when (coalesce(sum(FilledData_Current.'RebateAmount')/sum(FilledData_Current.'TotalTransactionAmount'),0) - coalesce(sum(FilledData_Previous.'RebateAmount')/sum(FilledData_Previous.'TotalTransactionAmount'),0)) == 0 then \"-\" else \"↓\" end as 'Payout:RevenueArrow', round(sum(FilledData_Current.'RebateAmount')/sum(FilledData_Current.'TotalQuantity'),2) as 'sum_Payout:Quantity', case when coalesce(sum(FilledData_Previous.'RebateAmount')/sum(FilledData_Previous.'TotalQuantity'),0) == 0 then \"-\" else number_to_string(round((coalesce(sum(FilledData_Current.'RebateAmount')/sum(FilledData_Current.'TotalQuantity'),0) - coalesce(sum(FilledData_Previous.'RebateAmount')/sum(FilledData_Previous.'TotalQuantity'),0)) * 100 / coalesce(sum(FilledData_Previous.'RebateAmount')/sum(FilledData_Previous.'TotalQuantity'),0),0),\"0\") end as 'Payout:QuantityDelta', case when (coalesce(sum(FilledData_Current.'RebateAmount')/sum(FilledData_Current.'TotalQuantity'),0) - coalesce(sum(FilledData_Previous.'RebateAmount')/sum(FilledData_Previous.'TotalQuantity'),0)) > 0 then \"rgb(230, 29, 25)\" else \"rgb(0, 181, 49)\" end as 'Payout:QuantityColor', case when (coalesce(sum(FilledData_Current.'RebateAmount')/sum(FilledData_Current.'TotalQuantity'),0) - coalesce(sum(FilledData_Previous.'RebateAmount')/sum(FilledData_Previous.'TotalQuantity'),0)) > 0 then \"↑\"  when (coalesce(sum(FilledData_Current.'RebateAmount')/sum(FilledData_Current.'TotalQuantity'),0) - coalesce(sum(FilledData_Previous.'RebateAmount')/sum(FilledData_Previous.'TotalQuantity'),0)) == 0 then \"-\" else \"↓\" end as 'Payout:QuantityArrow';","receiveFacetSource":{"mode":"all","steps":[]},"selectMode":"single","start":"[]","strings":[],"type":"saql","useGlobal":true,"visualizationParameters":{"parameters":{"autoFitMode":"keepLabels","bins":{"breakpoints":{"high":100,"low":0},"bands":{"high":{"color":"#008000","label":""},"low":{"color":"#B22222","label":""},"medium":{"color":"#ffa500","label":""}}},"legend":{"descOrder":false,"showHeader":true,"show":true,"customSize":"auto","position":"right-top","inside":false},"axisMode":"multi","tooltip":{"content":{"legend":{"showBinLabel":true,"measures":[],"showNullValues":true,"customizeLegend":false,"showPercentage":true,"showDimensions":true,"showMeasures":true,"dimensions":[]}}},"visualizationType":"hbar","title":{"fontSize":14,"subtitleFontSize":11,"label":"","align":"center","subtitleLabel":""},"binValues":false,"trellis":{"flipLabels":false,"showGridLines":true,"size":[100,100],"enable":false,"type":"x","chartsPerLine":4},"showActionMenu":true,"measureAxis2":{"sqrtScale":false,"showTitle":true,"showAxis":true,"title":"","customDomain":{"showDomain":false}},"measureAxis1":{"sqrtScale":false,"showTitle":true,"showAxis":true,"title":"","customDomain":{"showDomain":false}},"valueType":"compactNumber","theme":"wave","compactDecimalDigits":-1,"dimensionAxis":{"showTitle":true,"customSize":"auto","showAxis":true,"title":"","icons":{"useIcons":false,"iconProps":{"fit":"cover","column":"","type":"round"}}},"applyConditionalFormatting":true},"type":"chart"}}},"widgetStyle":{"backgroundColor":"#FFFFFF","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1},"widgets":{"container_15":{"parameters":{"alignmentX":"left","alignmentY":"top","fit":"original","interactions":[]},"type":"container"},"container_14":{"parameters":{"alignmentX":"left","alignmentY":"top","fit":"original","interactions":[]},"type":"container"},"container_13":{"parameters":{"alignmentX":"left","alignmentY":"top","fit":"original","interactions":[]},"type":"container"},"text_13":{"parameters":{"content":{"richTextContent":[{"attributes":{"size":"16px","color":"#091A3E","align":"left"},"insert":""}]},"interactions":[],"showActionMenu":true},"type":"text"},"link_10":{"parameters":{"destinationLink":{"name":"e4dc066c-7a33-474e-85cc-f3583b124765"},"destinationType":"page","fontSize":14,"includeState":false,"text":"Accrual","textAlignment":"left","textColor":"#FFFFFF"},"type":"link"},"text_10":{"parameters":{"content":{"richTextContent":[{"attributes":{"size":"14px","color":"#091A3E","align":"right"},"insert":"Payout Range "}]},"interactions":[],"showActionMenu":true},"type":"text"},"text_12":{"parameters":{"content":{"richTextContent":[{"attributes":{"size":"16px","color":"#091A3E","align":"left"},"insert":""}]},"interactions":[],"showActionMenu":true},"type":"text"},"text_11":{"parameters":{"content":{"richTextContent":[{"attributes":{"size":"14px","color":"#091a3e"},"insert":"Incentive Basis "},{"attributes":{},"insert":"\n"}]},"interactions":[],"showActionMenu":true},"type":"text"},"container_1":{"parameters":{"alignmentX":"left","alignmentY":"top","fit":"original","interactions":[]},"type":"container"},"container_2":{"parameters":{"alignmentX":"left","alignmentY":"top","fit":"original","interactions":[]},"type":"container"},"container_3":{"parameters":{"alignmentX":"left","alignmentY":"top","fit":"original","interactions":[]},"type":"container"},"container_4":{"parameters":{"alignmentX":"left","alignmentY":"top","fit":"original","interactions":[]},"type":"container"},"container_5":{"parameters":{"alignmentX":"left","alignmentY":"top","fit":"original","interactions":[]},"type":"container"},"chart_6":{"parameters":{"showPoints":true,"legend":{"descOrder":false,"showHeader":true,"show":true,"customSize":"auto","position":"right-top","inside":false},"axisMode":"multi","tooltip":{"content":{"legend":{"showBinLabel":true,"measures":[],"showNullValues":true,"customizeLegend":false,"showPercentage":true,"showDimensions":true,"showMeasures":true,"dimensions":[]}}},"visualizationType":"time","missingValue":"connect","dashLine":{"measures":"","showDashLine":false},"exploreLink":true,"timeAxis":{"showTitle":true,"showAxis":true,"title":"Date (Year-Month)"},"title":{"fontSize":14,"subtitleFontSize":11,"label":"","align":"center","subtitleLabel":""},"trellis":{"flipLabels":false,"showGridLines":true,"size":[100,100],"enable":false,"type":"x","parameters":{},"chartsPerLine":4},"columnMap":{"split":[],"timeAxis":["CreatedDate_Year~~~CreatedDate_Month"],"trellis":[],"plots":["Number of Members"]},"fillArea":true,"showActionMenu":true,"showZero":true,"measureAxis2":{"sqrtScale":false,"showTitle":true,"showAxis":true,"title":"","customDomain":{"showDomain":false}},"measureAxis1":{"sqrtScale":false,"showTitle":true,"showAxis":true,"title":"#Members","customDomain":{"showDomain":false}},"valueType":"none","theme":"dark","step":"Time_Line","applyConditionalFormatting":true,"drawArea":{"measure":"","showDrawArea":false,"bounding1":"","bounding2":""}},"type":"chart"},"container_6":{"parameters":{"alignmentX":"left","alignmentY":"top","fit":"original","interactions":[]},"type":"container"},"text_3":{"parameters":{"content":{"richTextContent":[{"attributes":{"size":"12px","color":"{{cell(Transaction_Amount.result, 0, \"RebateColor\").asString()}}","align":"left"},"insert":"{{cell(Transaction_Amount.result, 0, \"RebateArrow\").asString()}} {{cell(Transaction_Amount.result, 0, \"RebateDelta\").asString()}}%"}]},"interactions":[],"showActionMenu":true},"type":"text"},"container_7":{"parameters":{"alignmentX":"left","alignmentY":"top","fit":"original","interactions":[]},"type":"container"},"chart_5":{"parameters":{"showPoints":true,"legend":{"descOrder":false,"showHeader":true,"show":true,"customSize":"auto","position":"right-top","inside":false},"axisMode":"multi","tooltip":{"content":{"legend":{"showBinLabel":true,"measures":[],"showNullValues":true,"customizeLegend":false,"showPercentage":true,"showDimensions":true,"showMeasures":true,"dimensions":[]}}},"visualizationType":"time","missingValue":"connect","dashLine":{"measures":"","showDashLine":false},"exploreLink":true,"timeAxis":{"showTitle":true,"showAxis":true,"title":"Date (Year-Month)"},"title":{"fontSize":14,"subtitleFontSize":11,"label":"","align":"center","subtitleLabel":""},"trellis":{"flipLabels":false,"showGridLines":true,"size":[100,100],"enable":false,"type":"x","parameters":{},"chartsPerLine":4},"columnMap":{"split":[],"timeAxis":["CreatedDate_Year~~~CreatedDate_Month"],"trellis":[],"plots":["Accrued Amount"]},"fillArea":true,"showActionMenu":true,"showZero":true,"measureAxis2":{"sqrtScale":false,"showTitle":true,"showAxis":true,"title":"","customDomain":{"showDomain":false}},"measureAxis1":{"sqrtScale":false,"showTitle":true,"showAxis":true,"title":"Accrual","customDomain":{"showDomain":false}},"valueType":"none","theme":"dark","step":"Accruals_Time_Line","applyConditionalFormatting":true,"drawArea":{"measure":"","showDrawArea":false,"bounding1":"","bounding2":""}},"type":"chart"},"text_5":{"parameters":{"content":{"richTextContent":[{"attributes":{"size":"12px","color":"{{cell(Transaction_Amount.result, 0, \"TransactionColor\").asString()}}","align":"left"},"insert":"{{cell(Transaction_Amount.result, 0, \"TransactionArrow\").asString()}} {{cell(Transaction_Amount.result, 0, \"TransactionDelta\").asString()}}%"}]},"interactions":[],"showActionMenu":true},"type":"text"},"container_8":{"parameters":{"alignmentX":"left","alignmentY":"top","fit":"original","interactions":[]},"type":"container"},"text_4":{"parameters":{"content":{"richTextContent":[{"attributes":{"size":"16px","color":"#FFFFFF","align":"left"},"insert":"Program Performance"}]},"interactions":[],"showActionMenu":true},"type":"text"},"container_9":{"parameters":{"alignmentX":"left","alignmentY":"top","fit":"original","interactions":[]},"type":"container"},"text_7":{"parameters":{"content":{"richTextContent":[{"attributes":{"size":"12px","color":"{{cell(Members.result, 0, \"Color\").asString()}}","align":"left"},"insert":"{{cell(Members.result, 0, \"Arrow\").asString()}} {{cell(Members.result, 0, \"Delta%\").asString()}}%"}]},"interactions":[],"showActionMenu":true},"type":"text"},"chart_2":{"parameters":{"showPoints":true,"legend":{"descOrder":false,"showHeader":true,"show":true,"customSize":"auto","position":"right-top","inside":false},"axisMode":"multi","tooltip":{"content":{"legend":{"showBinLabel":true,"measures":[],"showNullValues":true,"customizeLegend":false,"showPercentage":true,"showDimensions":true,"showMeasures":true,"dimensions":[]}}},"visualizationType":"time","missingValue":"connect","dashLine":{"measures":"","showDashLine":false},"exploreLink":true,"timeAxis":{"showTitle":true,"showAxis":true,"title":"Date (Year-Month)"},"title":{"fontSize":14,"subtitleFontSize":11,"label":"","align":"center","subtitleLabel":""},"trellis":{"flipLabels":false,"showGridLines":true,"size":[100,100],"enable":false,"type":"x","parameters":{},"chartsPerLine":4},"columnMap":{"split":[],"timeAxis":["CreatedDate_Year~~~CreatedDate_Month"],"trellis":[],"plots":["RebateAmount"]},"fillArea":true,"showActionMenu":true,"showZero":true,"measureAxis2":{"sqrtScale":false,"showTitle":true,"showAxis":true,"title":"","customDomain":{"showDomain":false}},"measureAxis1":{"sqrtScale":false,"showTitle":true,"showAxis":true,"title":"","customDomain":{"showDomain":false}},"valueType":"none","theme":"dark","step":"Time_Line","applyConditionalFormatting":true,"drawArea":{"measure":"","showDrawArea":false,"bounding1":"","bounding2":""}},"type":"chart"},"text_6":{"parameters":{"content":{"richTextContent":[{"attributes":{"size":"12px","color":"{{cell(Transaction_Amount.result, 0, \"RebateColor\").asString()}}","align":"left"},"insert":"{{cell(Transaction_Amount.result, 0, \"RebateArrow\").asString()}} {{cell(Transaction_Amount.result, 0, \"RebateDelta\").asString()}}%"}]},"interactions":[],"showActionMenu":true},"type":"text"},"chart_1":{"parameters":{"autoFitMode":"none","bins":{"breakpoints":{"high":100,"low":0},"bands":{"high":{"color":"#008000","label":""},"low":{"color":"#B22222","label":""},"medium":{"color":"#ffa500","label":""}}},"legend":{"descOrder":false,"showHeader":true,"show":false,"customSize":"auto","position":"right-top","inside":false},"axisMode":"multi","tooltip":{"content":{"legend":{"showBinLabel":true,"measures":[],"showNullValues":true,"customizeLegend":false,"showPercentage":true,"showDimensions":true,"showMeasures":true,"dimensions":[]}}},"visualizationType":"hbar","exploreLink":true,"title":{"fontSize":14,"subtitleFontSize":11,"label":"","align":"center","subtitleLabel":""},"binValues":false,"trellis":{"flipLabels":false,"showGridLines":true,"size":[100,100],"enable":false,"type":"x","parameters":{},"chartsPerLine":4},"showActionMenu":true,"measureAxis2":{"sqrtScale":false,"showTitle":true,"showAxis":true,"title":"","customDomain":{"showDomain":false}},"measureAxis1":{"sqrtScale":false,"showTitle":true,"showAxis":true,"title":"","customDomain":{"showDomain":false}},"valueType":"compactNumber","theme":"light","step":"KPI_by_Products","compactDecimalDigits":-1,"dimensionAxis":{"showTitle":true,"customSize":"auto","showAxis":true,"title":"","icons":{"useIcons":false,"iconProps":{"fit":"cover","column":"","type":"round","parameters":{}}}},"applyConditionalFormatting":true},"type":"chart"},"text_9":{"parameters":{"content":{"richTextContent":[{"attributes":{"size":"14px","color":"#091a3e"},"insert":"Measure "},{"attributes":{},"insert":"\n"}]},"interactions":[],"showActionMenu":true},"type":"text"},"chart_4":{"parameters":{"autoFitMode":"none","bins":{"breakpoints":{"high":100,"low":0},"bands":{"high":{"color":"#008000","label":""},"low":{"color":"#B22222","label":""},"medium":{"color":"#ffa500","label":""}}},"legend":{"descOrder":false,"showHeader":true,"show":false,"customSize":"auto","position":"right-top","inside":false},"axisMode":"multi","tooltip":{"content":{"legend":{"showBinLabel":true,"measures":[],"showNullValues":true,"customizeLegend":false,"showPercentage":true,"showDimensions":true,"showMeasures":true,"dimensions":[]}}},"visualizationType":"hbar","exploreLink":true,"title":{"fontSize":14,"subtitleFontSize":11,"label":"","align":"center","subtitleLabel":""},"binValues":false,"trellis":{"flipLabels":false,"showGridLines":true,"size":[100,100],"enable":false,"type":"x","parameters":{},"chartsPerLine":4},"showActionMenu":true,"measureAxis2":{"sqrtScale":false,"showTitle":true,"showAxis":true,"title":"","customDomain":{"showDomain":false}},"measureAxis1":{"sqrtScale":false,"showTitle":true,"showAxis":true,"title":"","customDomain":{"showDomain":false}},"valueType":"compactNumber","theme":"light","step":"KPI_by_Accounts","compactDecimalDigits":-1,"dimensionAxis":{"showTitle":true,"customSize":"auto","showAxis":true,"title":"Accounts","icons":{"useIcons":false,"iconProps":{"fit":"cover","column":"","type":"round","parameters":{}}}},"applyConditionalFormatting":true},"type":"chart"},"chart_3":{"parameters":{"showPoints":true,"legend":{"descOrder":false,"showHeader":true,"show":true,"customSize":"auto","position":"right-top","inside":false},"axisMode":"sync","tooltip":{"content":{"legend":{"showBinLabel":true,"measures":[],"showNullValues":true,"customizeLegend":false,"showPercentage":true,"showDimensions":true,"showMeasures":true,"dimensions":[]}}},"visualizationType":"time","missingValue":"connect","dashLine":{"measures":"","showDashLine":false},"exploreLink":true,"timeAxis":{"showTitle":true,"showAxis":true,"title":"Date (Year-Month)"},"title":{"fontSize":14,"subtitleFontSize":11,"label":"","align":"center","subtitleLabel":""},"trellis":{"flipLabels":false,"showGridLines":true,"size":[100,100],"enable":false,"type":"x","parameters":{},"chartsPerLine":4},"fillArea":true,"columnMap":{"split":[],"timeAxis":["CreatedDate_Year~~~CreatedDate_Month"],"trellis":[],"plots":["Total Revenue"]},"showActionMenu":true,"showZero":true,"measureAxis2":{"sqrtScale":false,"showTitle":true,"showAxis":true,"title":"","customDomain":{"showDomain":false}},"measureAxis1":{"sqrtScale":false,"showTitle":true,"showAxis":true,"title":"Revenue","customDomain":{"showDomain":false}},"valueType":"none","theme":"dark","step":"Time_Line","applyConditionalFormatting":true,"drawArea":{"measure":"","showDrawArea":false,"bounding1":"","bounding2":""}},"type":"chart"},"text_8":{"parameters":{"content":{"richTextContent":[{"attributes":{"size":"16px","color":"#091A3E","align":"left"},"insert":"Top-Earning Members"}]},"interactions":[],"showActionMenu":true},"type":"text"},"text_1":{"parameters":{"content":{"richTextContent":[{"attributes":{"size":"12px","color":"{{cell(Accruals_Amount.result, 0, \"AccrualColor\").asString()}}"},"insert":"{{cell(Accruals_Amount.result, 0, \"AccrualArrow\").asString()}} {{cell(Accruals_Amount.result, 0, \"AccrualDelta\").asString()}}%"},{"attributes":{},"insert":"\n"}]},"interactions":[],"showActionMenu":true},"type":"text"},"number_5":{"parameters":{"compact":true,"exploreLink":true,"interactions":[],"measureField":"sum_AccruedAmount","numberColor":"#FFFFFF","numberSize":24,"showActionMenu":false,"step":"Accruals_Amount","textAlignment":"left","title":"","titleColor":"#091A3E","titleSize":16,"tooltip":{"customizeTooltip":false}},"type":"number"},"number_4":{"parameters":{"compact":true,"exploreLink":true,"interactions":[],"measureField":"sum_AggregateObject.TotalTransactionAmount","numberColor":"#FFFFFF","numberSize":24,"showActionMenu":false,"step":"Transaction_Amount","textAlignment":"left","title":"","titleColor":"#FFFFFF","titleSize":16,"tooltip":{"customizeTooltip":false}},"type":"number"},"number_3":{"parameters":{"compact":false,"exploreLink":true,"interactions":[],"measureField":"unique_AccountId","numberColor":"#FFFFFF","numberSize":24,"showActionMenu":false,"step":"Members","textAlignment":"left","title":"","titleColor":"#091A3E","titleSize":16,"tooltip":{"customizeTooltip":false}},"type":"number"},"number_2":{"parameters":{"compact":true,"exploreLink":true,"interactions":[],"measureField":"sum_RebateAmount","numberColor":"#FFFFFF","numberSize":24,"showActionMenu":true,"step":"Transaction_Amount","textAlignment":"left","title":"","titleColor":"#091A3E","titleSize":16,"tooltip":{"customizeTooltip":false}},"type":"number"},"number_1":{"parameters":{"compact":true,"exploreLink":true,"interactions":[],"measureField":"sum_AggregateObject.TotalTransactionAmount","numberColor":"#FFFFFF","numberSize":24,"showActionMenu":false,"step":"Transaction_Amount","textAlignment":"left","title":"","titleColor":"#091A3E","titleSize":16,"tooltip":{"customizeTooltip":false}},"type":"number"},"container_12":{"parameters":{"alignmentX":"left","alignmentY":"top","fit":"original","interactions":[]},"type":"container"},"container_11":{"parameters":{"alignmentX":"left","alignmentY":"top","fit":"original","interactions":[]},"type":"container"},"container_10":{"parameters":{"alignmentX":"left","alignmentY":"top","fit":"original","interactions":[]},"type":"container"},"number_9":{"parameters":{"compact":true,"exploreLink":true,"interactions":[],"measureField":"sum_RebateAmount","numberColor":"#FFFFFF","numberSize":24,"showActionMenu":true,"step":"Transaction_Amount","textAlignment":"left","title":"","titleColor":"#FFFFFF","titleSize":16,"tooltip":{"customizeTooltip":false}},"type":"number"},"number_7":{"parameters":{"compact":true,"exploreLink":true,"interactions":[],"measureField":"unique_AccountId","numberColor":"#FFFFFF","numberSize":24,"showActionMenu":false,"step":"Members","textAlignment":"left","title":"","titleColor":"#FFFFFF","titleSize":16,"tooltip":{"customizeTooltip":false}},"type":"number"},"number_6":{"parameters":{"compact":true,"exploreLink":true,"interactions":[],"measureField":"sum_RebateAmount","numberColor":"#FFFFFF","numberSize":24,"showActionMenu":false,"step":"Transaction_Amount","textAlignment":"left","title":"","titleColor":"#FFFFFF","titleSize":16,"tooltip":{"customizeTooltip":false}},"type":"number"},"rangeselector_1":{"parameters":{"displayMode":"filter","filterStyle":{"titleColor":"#54698D","valueColor":"#16325C"},"instant":false,"showActionMenu":true,"step":"RebateAmount_1","title":""},"type":"rangeselector"},"dateselector_4":{"parameters":{"absoluteModeEnabled":true,"calendarTypeSwitchingAllowed":true,"defaultFiscalMode":false,"displayMode":"filter","filterStyle":{"titleColor":"#FFFFFF","valueColor":"#FFFFFF"},"instant":false,"presetsEnabled":true,"relativeModeEnabled":true,"showActionMenu":true,"step":"Date_Selector_2","title":"Compare To"},"type":"dateselector"},"dateselector_2":{"parameters":{"absoluteModeEnabled":true,"calendarTypeSwitchingAllowed":true,"defaultFiscalMode":false,"displayMode":"filter","filterStyle":{"titleColor":"#FFFFFF","valueColor":"#FFFFFF"},"instant":false,"presetsEnabled":true,"relativeModeEnabled":true,"showActionMenu":true,"step":"Date_Selector_1","title":"Duration"},"type":"dateselector"},"listselector_7":{"parameters":{"compact":false,"displayMode":"filter","exploreLink":false,"filterStyle":{"titleColor":"#54698D","valueColor":"#16325C"},"instant":true,"showActionMenu":true,"step":"static_2","title":""},"type":"listselector"},"listselector_9":{"parameters":{"compact":false,"displayMode":"filter","exploreLink":false,"filterStyle":{"titleColor":"#FFFFFF","valueColor":"#FFFFFF"},"instant":true,"measureField":"none","showActionMenu":true,"step":"RebateType_Calculati_1","title":"Calculation Basis"},"type":"listselector"},"listselector_3":{"parameters":{"compact":false,"displayMode":"filter","exploreLink":false,"filterStyle":{"titleColor":"#FFFFFF","valueColor":"#FFFFFF"},"instant":true,"measureField":"count","showActionMenu":true,"step":"RebateType_IsIntegra_1","title":"Is Integrable"},"type":"listselector"},"listselector_2":{"parameters":{"compact":false,"displayMode":"filter","exploreLink":false,"filterStyle":{"titleColor":"#FFFFFF","valueColor":"#FFFFFF"},"instant":true,"measureField":"count","showActionMenu":true,"step":"Name_2","title":"Rebate Type"},"type":"listselector"},"listselector_5":{"parameters":{"compact":false,"displayMode":"filter","exploreLink":false,"filterStyle":{"titleColor":"#54698D","valueColor":"#16325C"},"instant":true,"showActionMenu":true,"step":"static_1","title":""},"type":"listselector"},"link_3":{"parameters":{"destinationLink":{"name":"ec72b992-fd64-410e-97c4-90b5dd7573c1"},"destinationType":"page","fontSize":14,"includeState":false,"text":"Members","textAlignment":"left","textColor":"#FFFFFF"},"type":"link"},"link_4":{"parameters":{"destinationLink":{"name":"2717d8ab-4a3a-4651-a539-9fcd21e6fcf9"},"destinationType":"page","fontSize":14,"includeState":false,"text":"Revenue","textAlignment":"left","textColor":"#FFFFFF"},"type":"link"},"link_1":{"parameters":{"destinationLink":{"name":"2717d8ab-4a3a-4651-a539-9fcd21e6fcf9"},"destinationType":"page","fontSize":14,"includeState":false,"text":"Revenue","textAlignment":"left","textColor":"#FFFFFF"},"type":"link"},"link_2":{"parameters":{"destinationLink":{"name":"8f6832eb-1b22-4e18-8c44-05d7bfb94bd9"},"destinationType":"page","fontSize":14,"includeState":false,"text":"Payout","textAlignment":"left","textColor":"#FFFFFF"},"type":"link"},"link_9":{"parameters":{"destinationLink":{"name":"8f6832eb-1b22-4e18-8c44-05d7bfb94bd9"},"destinationType":"page","fontSize":14,"includeState":false,"text":"Payout","textAlignment":"left","textColor":"#FFFFFF"},"type":"link"},"link_7":{"parameters":{"destinationLink":{"name":"e4dc066c-7a33-474e-85cc-f3583b124765"},"destinationType":"page","fontSize":14,"includeState":false,"text":"Accrual","textAlignment":"left","textColor":"#FFFFFF"},"type":"link"},"link_8":{"parameters":{"destinationLink":{"name":"e4dc066c-7a33-474e-85cc-f3583b124765"},"destinationType":"page","fontSize":14,"includeState":false,"text":"Accrual","textAlignment":"left","textColor":"#FFFFFF"},"type":"link"},"link_5":{"parameters":{"destinationLink":{"name":"8f6832eb-1b22-4e18-8c44-05d7bfb94bd9"},"destinationType":"page","fontSize":14,"includeState":false,"text":"Payout","textAlignment":"left","textColor":"#FFFFFF"},"type":"link"},"link_6":{"parameters":{"destinationLink":{"name":"ec72b992-fd64-410e-97c4-90b5dd7573c1"},"destinationType":"page","fontSize":14,"includeState":false,"text":"Members","textAlignment":"left","textColor":"#FFFFFF"},"type":"link"},"listselector_1":{"parameters":{"compact":false,"displayMode":"filter","exploreLink":false,"filterStyle":{"titleColor":"#FFFFFF","valueColor":"#FFFFFF"},"instant":true,"measureField":"count","showActionMenu":true,"step":"Account_Name_1","title":"Account"},"type":"listselector"}}}