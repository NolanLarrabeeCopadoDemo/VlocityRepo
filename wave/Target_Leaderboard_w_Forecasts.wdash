{"dataSourceLinksInfo":{"enableAutomaticLinking":false,"excludeRelationships":[],"links":[{"fields":[{"dataSourceName":"MFG_AccountManagerPeriodicTargetDistribution","dataSourceNamespace":"","dataSourceType":"dataset","fieldName":"AssignedTo.Id"},{"dataSourceName":"MFG_TargetActuals","dataSourceNamespace":"","dataSourceType":"dataset","fieldName":"TargetActualsOwner.Managers"}],"label":"Owner connection","name":"Link_349"},{"fields":[{"dataSourceName":"MFG_AccountManagerPeriodicTargetDistribution","dataSourceNamespace":"","dataSourceType":"dataset","fieldName":"AcctMgrTargetDstr.Account.Name"},{"dataSourceName":"MFG_TargetActuals","dataSourceNamespace":"","dataSourceType":"dataset","fieldName":"Order.Account.Name"}],"label":"Account Name Connection","name":"Link_364"},{"fields":[{"dataSourceName":"MFG_AccountManagerPeriodicTargetDistribution","dataSourceNamespace":"","dataSourceType":"dataset","fieldName":"AcctMgrTargetDstr.Account.Id"},{"dataSourceName":"MFG_TargetActuals","dataSourceNamespace":"","dataSourceType":"dataset","fieldName":"Order.Account.Id"}],"label":"Account ID connection","name":"Link_380"},{"fields":[{"dataSourceName":"MFG_AccountManagerPeriodicTargetDistribution","dataSourceNamespace":"","dataSourceType":"dataset","fieldName":"AcctMgrTargetDstr.ProductId"},{"dataSourceName":"MFG_TargetActuals","dataSourceNamespace":"","dataSourceType":"dataset","fieldName":"Product2Id"}],"label":"Product ID connection","name":"Link_397"},{"fields":[{"dataSourceName":"MFG_AccountManagerPeriodicTargetDistribution","dataSourceNamespace":"","dataSourceType":"dataset","fieldName":"AcctMgrTargetDstr.Product.Name"},{"dataSourceName":"MFG_TargetActuals","dataSourceNamespace":"","dataSourceType":"dataset","fieldName":"Product.Name"}],"label":"Product Name Connection","name":"Link_416"}]},"filters":[{"dataset":{"name":"MFG_AccountManagerPeriodicTargetDistribution"},"dependent":true,"fields":["AcctMgrTarget.MeasureType"],"label":"Target Type","locked":true,"operator":"in","value":"[\"Currency\"]"}],"gridLayouts":[{"maxWidth":1500,"name":"Default","numColumns":50,"pages":[{"label":"Targets Leaderboard","name":"bdfe8489-27a5-4488-8357-f9e4415f3972","navigationHidden":false,"widgets":[{"colspan":50,"column":0,"name":"container_1","row":0,"rowspan":7,"widgetStyle":{"backgroundColor":"#FFFFFF","borderColor":"#7D98B3","borderEdges":["bottom"],"borderRadius":0,"borderWidth":2}},{"colspan":2,"column":1,"name":"image_3","row":1,"rowspan":5,"widgetStyle":{"borderEdges":[]}},{"colspan":8,"column":3,"name":"text_1","row":2,"rowspan":3,"widgetStyle":{"borderEdges":[]}},{"colspan":50,"column":0,"name":"container_2","row":32,"rowspan":5,"widgetStyle":{"backgroundColor":"#FFFFFF","borderColor":"#E6ECF2","borderEdges":["top","left","right"],"borderRadius":0,"borderWidth":8}},{"colspan":50,"column":0,"name":"container_4","row":79,"rowspan":41,"widgetStyle":{"backgroundColor":"#FFFFFF","borderEdges":["bottom","right","left"],"borderWidth":8}},{"colspan":50,"column":0,"name":"container_7","row":7,"rowspan":6,"widgetStyle":{"backgroundColor":"#E6ECF2","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":9,"column":1,"name":"listselector_1","row":8,"rowspan":4,"widgetStyle":{"backgroundColor":"#FFFFFF","borderColor":"#E6ECF2","borderEdges":["all"],"borderRadius":4,"borderWidth":1}},{"colspan":10,"column":10,"name":"listselector_2","row":8,"rowspan":4,"widgetStyle":{"backgroundColor":"#FFFFFF","borderColor":"#E6ECF2","borderEdges":["all"],"borderRadius":4,"borderWidth":1}},{"colspan":42,"column":0,"name":"container_3","row":13,"rowspan":10,"widgetStyle":{"backgroundColor":"rgb(18, 54, 88)","borderColor":"#091A3E","borderEdges":["all"],"borderRadius":0,"borderWidth":8}},{"colspan":4,"column":5,"name":"text_2","row":20,"rowspan":2,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":5,"column":17,"name":"text_3","row":20,"rowspan":2,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":5,"column":30,"name":"text_4","row":20,"rowspan":2,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":42,"column":0,"name":"container_6","row":23,"rowspan":9,"widgetStyle":{"backgroundColor":"rgb(18, 54, 88)","borderColor":"#091A3E","borderEdges":["left","bottom","right"],"borderRadius":0,"borderWidth":8}},{"colspan":1,"column":42,"name":"container_8","row":17,"rowspan":11,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#C6D3E1","borderEdges":["left"],"borderRadius":0,"borderWidth":2}},{"colspan":4,"column":1,"name":"text_5","row":20,"rowspan":2,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":4,"column":1,"name":"text_6","row":29,"rowspan":2,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":50,"column":0,"name":"container_9","row":37,"rowspan":42,"widgetStyle":{"backgroundColor":"#FFFFFF","borderColor":"#E6ECF2","borderEdges":["bottom","left","right"],"borderRadius":0,"borderWidth":8}},{"colspan":10,"column":39,"name":"filterpanel_1","row":8,"rowspan":4,"widgetStyle":{"backgroundColor":"#FFFFFF","borderColor":"#E6ECF2","borderEdges":["all"],"borderRadius":4,"borderWidth":1}},{"colspan":9,"column":20,"name":"listselector_3","row":8,"rowspan":4,"widgetStyle":{"backgroundColor":"#FFFFFF","borderColor":"#E6ECF2","borderEdges":["all"],"borderRadius":4,"borderWidth":1}},{"colspan":6,"column":11,"name":"text_7","row":20,"rowspan":2,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":4,"column":5,"name":"text_8","row":29,"rowspan":2,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":6,"column":11,"name":"text_9","row":29,"rowspan":2,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":5,"column":17,"name":"text_10","row":29,"rowspan":2,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":6,"column":24,"name":"text_11","row":20,"rowspan":2,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":6,"column":24,"name":"text_12","row":29,"rowspan":2,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":5,"column":30,"name":"text_13","row":29,"rowspan":2,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":5,"column":37,"name":"text_14","row":20,"rowspan":2,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":5,"column":37,"name":"text_15","row":29,"rowspan":2,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":4,"column":5,"name":"number_1","row":25,"rowspan":4,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":5,"column":17,"name":"number_3","row":25,"rowspan":4,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":4,"column":5,"name":"number_2","row":16,"rowspan":4,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":5,"column":17,"name":"number_4","row":16,"rowspan":4,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":6,"column":11,"name":"chart_1","row":25,"rowspan":4,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":6,"column":11,"name":"chart_2","row":16,"rowspan":4,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":22,"column":9,"name":"chart_3","row":41,"rowspan":37,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":9,"column":9,"name":"text_16","row":38,"rowspan":3,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":5,"column":43,"name":"text_17","row":19,"rowspan":2,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":5,"column":43,"name":"text_18","row":28,"rowspan":2,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":5,"column":43,"name":"number_5","row":15,"rowspan":4,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":5,"column":43,"name":"number_6","row":24,"rowspan":4,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":6,"column":1,"name":"chart_4","row":41,"rowspan":37,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":10,"column":29,"name":"listselector_4","row":8,"rowspan":4,"widgetStyle":{"backgroundColor":"#FFFFFF","borderColor":"#E6ECF2","borderEdges":["all"],"borderRadius":4,"borderWidth":1}},{"colspan":4,"column":1,"name":"image_1","row":15,"rowspan":5,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"rgba(230, 236, 242, 0)","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":4,"column":1,"name":"image_2","row":24,"rowspan":5,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":48,"column":1,"name":"chart_5","row":85,"rowspan":34,"widgetStyle":{"borderEdges":[]}},{"colspan":6,"column":24,"name":"chart_6","row":16,"rowspan":4,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":5,"column":30,"name":"number_7","row":16,"rowspan":4,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":6,"column":24,"name":"chart_7","row":25,"rowspan":4,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":5,"column":30,"name":"number_8","row":25,"rowspan":4,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":15,"column":21,"name":"pillbox_1","row":81,"rowspan":3,"widgetStyle":{"backgroundColor":"#FFFFFF","borderColor":"#FFFFFF","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":8,"column":0,"name":"link_1","row":32,"rowspan":4,"widgetStyle":{"backgroundColor":"#FFFFFF","borderColor":"rgb(52, 127, 219)","borderEdges":["bottom"],"borderRadius":0,"borderWidth":4}},{"colspan":8,"column":16,"name":"link_3","row":32,"rowspan":4,"widgetStyle":{"backgroundColor":"#FFFFFF","borderColor":"#E6ECF2","borderEdges":["bottom"],"borderRadius":0,"borderWidth":1}},{"colspan":7,"column":35,"name":"link_4","row":33,"rowspan":3,"widgetStyle":{"backgroundColor":"rgb(0, 112, 210)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":7,"column":42,"name":"link_8","row":33,"rowspan":3,"widgetStyle":{"backgroundColor":"#FFFFFF","borderColor":"#E6ECF2","borderEdges":["all"],"borderRadius":0,"borderWidth":1}},{"colspan":7,"column":42,"name":"pillbox_2","row":81,"rowspan":3,"widgetStyle":{"backgroundColor":"#FFFFFF","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":6,"column":36,"name":"text_19","row":81,"rowspan":3,"widgetStyle":{"backgroundColor":"#FFFFFF","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":16,"column":33,"name":"chart_8","row":41,"rowspan":37,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":9,"column":33,"name":"text_20","row":38,"rowspan":3,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":6,"column":1,"name":"text_22","row":38,"rowspan":3,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":8,"column":8,"name":"link_13","row":32,"rowspan":4,"widgetStyle":{"backgroundColor":"#FFFFFF","borderColor":"#E6ECF2","borderEdges":["bottom"],"borderRadius":0,"borderWidth":1}},{"colspan":9,"column":1,"name":"text_26","row":81,"rowspan":3,"widgetStyle":{"backgroundColor":"#FFFFFF","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":5,"column":37,"name":"number_9","row":16,"rowspan":4,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":5,"column":37,"name":"number_10","row":25,"rowspan":4,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}}]},{"label":"Targets Leaderboard (PY Target Setting)","name":"7b41086f-10d1-4b7a-ad2b-3aa2a4c4943f","navigationHidden":false,"widgets":[{"colspan":50,"column":0,"name":"container_1","row":0,"rowspan":7,"widgetStyle":{"backgroundColor":"#FFFFFF","borderColor":"#7D98B3","borderEdges":["bottom"],"borderRadius":0,"borderWidth":2}},{"colspan":2,"column":1,"name":"image_3","row":1,"rowspan":5,"widgetStyle":{"borderEdges":[]}},{"colspan":8,"column":3,"name":"text_1","row":2,"rowspan":3,"widgetStyle":{"borderEdges":[]}},{"colspan":50,"column":0,"name":"container_2","row":32,"rowspan":5,"widgetStyle":{"backgroundColor":"#FFFFFF","borderColor":"#E6ECF2","borderEdges":["top","left","right"],"borderRadius":0,"borderWidth":8}},{"colspan":50,"column":0,"name":"container_4","row":79,"rowspan":81,"widgetStyle":{"backgroundColor":"#FFFFFF","borderEdges":["bottom","right","left"],"borderWidth":8}},{"colspan":50,"column":0,"name":"container_7","row":7,"rowspan":6,"widgetStyle":{"backgroundColor":"#E6ECF2","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":9,"column":1,"name":"listselector_1","row":8,"rowspan":4,"widgetStyle":{"backgroundColor":"#FFFFFF","borderColor":"#E6ECF2","borderEdges":["all"],"borderRadius":4,"borderWidth":1}},{"colspan":10,"column":10,"name":"listselector_2","row":8,"rowspan":4,"widgetStyle":{"backgroundColor":"#FFFFFF","borderColor":"#E6ECF2","borderEdges":["all"],"borderRadius":4,"borderWidth":1}},{"colspan":42,"column":0,"name":"container_3","row":13,"rowspan":10,"widgetStyle":{"backgroundColor":"rgb(18, 54, 88)","borderColor":"#091A3E","borderEdges":["all"],"borderRadius":0,"borderWidth":8}},{"colspan":4,"column":5,"name":"text_2","row":20,"rowspan":2,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":5,"column":17,"name":"text_3","row":20,"rowspan":2,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":5,"column":30,"name":"text_4","row":20,"rowspan":2,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":42,"column":0,"name":"container_6","row":23,"rowspan":9,"widgetStyle":{"backgroundColor":"rgb(18, 54, 88)","borderColor":"#091A3E","borderEdges":["left","bottom","right"],"borderRadius":0,"borderWidth":8}},{"colspan":1,"column":42,"name":"container_8","row":17,"rowspan":11,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#C6D3E1","borderEdges":["left"],"borderRadius":0,"borderWidth":2}},{"colspan":4,"column":1,"name":"text_5","row":20,"rowspan":2,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":4,"column":1,"name":"text_6","row":29,"rowspan":2,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":50,"column":0,"name":"container_9","row":37,"rowspan":42,"widgetStyle":{"backgroundColor":"#FFFFFF","borderColor":"#E6ECF2","borderEdges":["bottom","left","right"],"borderRadius":0,"borderWidth":8}},{"colspan":10,"column":39,"name":"filterpanel_1","row":8,"rowspan":4,"widgetStyle":{"backgroundColor":"#FFFFFF","borderColor":"#E6ECF2","borderEdges":["all"],"borderRadius":4,"borderWidth":1}},{"colspan":9,"column":20,"name":"listselector_3","row":8,"rowspan":4,"widgetStyle":{"backgroundColor":"#FFFFFF","borderColor":"#E6ECF2","borderEdges":["all"],"borderRadius":4,"borderWidth":1}},{"colspan":6,"column":11,"name":"text_7","row":20,"rowspan":2,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":4,"column":5,"name":"text_8","row":29,"rowspan":2,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":6,"column":11,"name":"text_9","row":29,"rowspan":2,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":5,"column":17,"name":"text_10","row":29,"rowspan":2,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":6,"column":24,"name":"text_11","row":20,"rowspan":2,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":6,"column":24,"name":"text_12","row":29,"rowspan":2,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":5,"column":30,"name":"text_13","row":29,"rowspan":2,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":5,"column":37,"name":"text_14","row":20,"rowspan":2,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":5,"column":37,"name":"text_15","row":29,"rowspan":2,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":4,"column":5,"name":"number_1","row":25,"rowspan":4,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":5,"column":17,"name":"number_3","row":25,"rowspan":4,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":4,"column":5,"name":"number_2","row":16,"rowspan":4,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":5,"column":17,"name":"number_4","row":16,"rowspan":4,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":6,"column":11,"name":"chart_1","row":25,"rowspan":4,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":6,"column":11,"name":"chart_2","row":16,"rowspan":4,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":5,"column":43,"name":"text_17","row":19,"rowspan":2,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":5,"column":43,"name":"text_18","row":28,"rowspan":2,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":5,"column":43,"name":"number_5","row":15,"rowspan":4,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":5,"column":43,"name":"number_6","row":24,"rowspan":4,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":10,"column":29,"name":"listselector_4","row":8,"rowspan":4,"widgetStyle":{"backgroundColor":"#FFFFFF","borderColor":"#E6ECF2","borderEdges":["all"],"borderRadius":4,"borderWidth":1}},{"colspan":4,"column":1,"name":"image_1","row":15,"rowspan":5,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"rgba(230, 236, 242, 0)","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":4,"column":1,"name":"image_2","row":24,"rowspan":5,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":6,"column":24,"name":"chart_6","row":16,"rowspan":4,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":5,"column":30,"name":"number_7","row":16,"rowspan":4,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":6,"column":24,"name":"chart_7","row":25,"rowspan":4,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":5,"column":30,"name":"number_8","row":25,"rowspan":4,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":7,"column":35,"name":"link_7","row":33,"rowspan":3,"widgetStyle":{"backgroundColor":"#FFFFFF","borderColor":"#E6ECF2","borderEdges":["all"],"borderRadius":0,"borderWidth":1}},{"colspan":7,"column":42,"name":"link_9","row":33,"rowspan":3,"widgetStyle":{"backgroundColor":"rgb(0, 112, 210)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":6,"column":1,"name":"text_23","row":38,"rowspan":3,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":6,"column":1,"name":"chart_9","row":41,"rowspan":37,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":22,"column":9,"name":"chart_10","row":41,"rowspan":37,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":9,"column":9,"name":"text_21","row":38,"rowspan":3,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":48,"column":1,"name":"chart_11","row":85,"rowspan":33,"widgetStyle":{"backgroundColor":"#FFFFFF","borderColor":"#E6ECF2","borderEdges":["all"],"borderRadius":0,"borderWidth":1}},{"colspan":16,"column":33,"name":"chart_12","row":41,"rowspan":37,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":15,"column":1,"name":"text_24","row":120,"rowspan":3,"widgetStyle":{"borderEdges":[]}},{"colspan":48,"column":1,"name":"chart_13","row":124,"rowspan":34,"widgetStyle":{"backgroundColor":"#FFFFFF","borderColor":"#E6ECF2","borderEdges":["all"],"borderRadius":0,"borderWidth":1}},{"colspan":9,"column":1,"name":"text_25","row":81,"rowspan":3,"widgetStyle":{"backgroundColor":"#FFFFFF","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":8,"column":8,"name":"link_10","row":32,"rowspan":4,"widgetStyle":{"backgroundColor":"#FFFFFF","borderColor":"#E6ECF2","borderEdges":["bottom"],"borderRadius":0,"borderWidth":1}},{"colspan":8,"column":0,"name":"link_11","row":32,"rowspan":4,"widgetStyle":{"backgroundColor":"#FFFFFF","borderColor":"rgb(52, 127, 219)","borderEdges":["bottom"],"borderRadius":0,"borderWidth":4}},{"colspan":8,"column":16,"name":"link_12","row":32,"rowspan":4,"widgetStyle":{"backgroundColor":"#FFFFFF","borderColor":"#E6ECF2","borderEdges":["bottom"],"borderRadius":0,"borderWidth":1}},{"colspan":15,"column":21,"name":"pillbox_1","row":81,"rowspan":3,"widgetStyle":{"backgroundColor":"#FFFFFF","borderColor":"#FFFFFF","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":7,"column":42,"name":"pillbox_2","row":81,"rowspan":3,"widgetStyle":{"backgroundColor":"#FFFFFF","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":6,"column":36,"name":"text_19","row":81,"rowspan":3,"widgetStyle":{"backgroundColor":"#FFFFFF","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":9,"column":33,"name":"text_31","row":38,"rowspan":3,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":5,"column":37,"name":"number_9","row":16,"rowspan":4,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":5,"column":37,"name":"number_10","row":25,"rowspan":4,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}}]},{"label":"Accounts (TY /Attainment)","name":"affef20c-3835-44ef-8fbc-5436a51dfc6f","navigationHidden":false,"widgets":[{"colspan":50,"column":0,"name":"container_1","row":0,"rowspan":7,"widgetStyle":{"backgroundColor":"#FFFFFF","borderColor":"#7D98B3","borderEdges":["bottom"],"borderRadius":0,"borderWidth":2}},{"colspan":2,"column":1,"name":"image_3","row":1,"rowspan":5,"widgetStyle":{"borderEdges":[]}},{"colspan":8,"column":3,"name":"text_1","row":2,"rowspan":3,"widgetStyle":{"borderEdges":[]}},{"colspan":50,"column":0,"name":"container_2","row":32,"rowspan":5,"widgetStyle":{"backgroundColor":"#FFFFFF","borderColor":"#E6ECF2","borderEdges":["top","left","right"],"borderRadius":0,"borderWidth":8}},{"colspan":50,"column":0,"name":"container_4","row":100,"rowspan":36,"widgetStyle":{"backgroundColor":"#FFFFFF","borderEdges":["bottom","right","left"],"borderWidth":8}},{"colspan":50,"column":0,"name":"container_7","row":7,"rowspan":6,"widgetStyle":{"backgroundColor":"#E6ECF2","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":9,"column":1,"name":"listselector_1","row":8,"rowspan":4,"widgetStyle":{"backgroundColor":"#FFFFFF","borderColor":"#E6ECF2","borderEdges":["all"],"borderRadius":4,"borderWidth":1}},{"colspan":10,"column":10,"name":"listselector_2","row":8,"rowspan":4,"widgetStyle":{"backgroundColor":"#FFFFFF","borderColor":"#E6ECF2","borderEdges":["all"],"borderRadius":4,"borderWidth":1}},{"colspan":42,"column":0,"name":"container_3","row":13,"rowspan":10,"widgetStyle":{"backgroundColor":"rgb(18, 54, 88)","borderColor":"#091A3E","borderEdges":["all"],"borderRadius":0,"borderWidth":8}},{"colspan":4,"column":5,"name":"text_2","row":20,"rowspan":2,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":5,"column":17,"name":"text_3","row":20,"rowspan":2,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":5,"column":30,"name":"text_4","row":20,"rowspan":2,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":42,"column":0,"name":"container_6","row":23,"rowspan":9,"widgetStyle":{"backgroundColor":"rgb(18, 54, 88)","borderColor":"#091A3E","borderEdges":["left","bottom","right"],"borderRadius":0,"borderWidth":8}},{"colspan":1,"column":42,"name":"container_8","row":17,"rowspan":11,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#C6D3E1","borderEdges":["left"],"borderRadius":0,"borderWidth":2}},{"colspan":4,"column":1,"name":"text_5","row":20,"rowspan":2,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":4,"column":1,"name":"text_6","row":29,"rowspan":2,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":10,"column":39,"name":"filterpanel_1","row":8,"rowspan":4,"widgetStyle":{"backgroundColor":"#FFFFFF","borderColor":"#E6ECF2","borderEdges":["all"],"borderRadius":4,"borderWidth":1}},{"colspan":9,"column":20,"name":"listselector_3","row":8,"rowspan":4,"widgetStyle":{"backgroundColor":"#FFFFFF","borderColor":"#E6ECF2","borderEdges":["all"],"borderRadius":4,"borderWidth":1}},{"colspan":6,"column":11,"name":"text_7","row":20,"rowspan":2,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":4,"column":5,"name":"text_8","row":29,"rowspan":2,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":6,"column":11,"name":"text_9","row":29,"rowspan":2,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":5,"column":17,"name":"text_10","row":29,"rowspan":2,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":6,"column":24,"name":"text_11","row":20,"rowspan":2,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":6,"column":24,"name":"text_12","row":29,"rowspan":2,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":5,"column":30,"name":"text_13","row":29,"rowspan":2,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":5,"column":37,"name":"text_14","row":20,"rowspan":2,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":5,"column":37,"name":"text_15","row":29,"rowspan":2,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":4,"column":5,"name":"number_1","row":25,"rowspan":4,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":5,"column":17,"name":"number_3","row":25,"rowspan":4,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":4,"column":5,"name":"number_2","row":16,"rowspan":4,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":5,"column":17,"name":"number_4","row":16,"rowspan":4,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":6,"column":11,"name":"chart_1","row":25,"rowspan":4,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":6,"column":11,"name":"chart_2","row":16,"rowspan":4,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":5,"column":43,"name":"text_17","row":19,"rowspan":2,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":5,"column":43,"name":"text_18","row":28,"rowspan":2,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":5,"column":43,"name":"number_5","row":15,"rowspan":4,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":5,"column":43,"name":"number_6","row":24,"rowspan":4,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":10,"column":29,"name":"listselector_4","row":8,"rowspan":4,"widgetStyle":{"backgroundColor":"#FFFFFF","borderColor":"#E6ECF2","borderEdges":["all"],"borderRadius":4,"borderWidth":1}},{"colspan":4,"column":1,"name":"image_1","row":15,"rowspan":5,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"rgba(230, 236, 242, 0)","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":4,"column":1,"name":"image_2","row":24,"rowspan":5,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":6,"column":24,"name":"chart_6","row":16,"rowspan":4,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":5,"column":30,"name":"number_7","row":16,"rowspan":4,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":6,"column":24,"name":"chart_7","row":25,"rowspan":4,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":5,"column":30,"name":"number_8","row":25,"rowspan":4,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":8,"column":8,"name":"link_2","row":32,"rowspan":4,"widgetStyle":{"backgroundColor":"#FFFFFF","borderColor":"rgb(52, 127, 219)","borderEdges":["bottom"],"borderRadius":0,"borderWidth":4}},{"colspan":50,"column":0,"name":"container_5","row":37,"rowspan":63,"widgetStyle":{"backgroundColor":"#FFFFFF","borderColor":"#E6ECF2","borderEdges":["bottom","left","right"],"borderRadius":0,"borderWidth":8}},{"colspan":8,"column":0,"name":"link_5","row":32,"rowspan":4,"widgetStyle":{"backgroundColor":"#FFFFFF","borderColor":"#E6ECF2","borderEdges":["bottom"],"borderRadius":0,"borderWidth":1}},{"colspan":8,"column":16,"name":"link_6","row":32,"rowspan":4,"widgetStyle":{"backgroundColor":"#FFFFFF","borderColor":"#E6ECF2","borderEdges":["bottom"],"borderRadius":0,"borderWidth":1}},{"colspan":7,"column":35,"name":"link_14","row":33,"rowspan":3,"widgetStyle":{"backgroundColor":"rgb(0, 112, 210)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":7,"column":42,"name":"link_15","row":33,"rowspan":3,"widgetStyle":{"backgroundColor":"#FFFFFF","borderColor":"#E6ECF2","borderEdges":["all"],"borderRadius":0,"borderWidth":1}},{"colspan":48,"column":1,"name":"chart_14","row":43,"rowspan":25,"widgetStyle":{"backgroundColor":"#FFFFFF","borderColor":"#E6ECF2","borderEdges":["bottom"],"borderRadius":0,"borderWidth":1}},{"colspan":9,"column":1,"name":"text_27","row":39,"rowspan":3,"widgetStyle":{"borderEdges":[]}},{"colspan":15,"column":1,"name":"text_28","row":70,"rowspan":3,"widgetStyle":{"borderEdges":[]}},{"colspan":48,"column":1,"name":"chart_15","row":73,"rowspan":25,"widgetStyle":{"borderEdges":[]}},{"colspan":48,"column":1,"name":"chart_16","row":105,"rowspan":30,"widgetStyle":{"borderEdges":[]}},{"colspan":15,"column":1,"name":"text_29","row":102,"rowspan":3,"widgetStyle":{"borderEdges":[]}},{"colspan":14,"column":35,"name":"pillbox_3","row":70,"rowspan":3,"widgetStyle":{"borderEdges":[]}},{"colspan":5,"column":37,"name":"number_9","row":16,"rowspan":4,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":5,"column":37,"name":"number_10","row":25,"rowspan":4,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":7,"column":14,"name":"listselector_10","row":40,"rowspan":3,"widgetStyle":{"backgroundColor":"#FFFFFF","borderColor":"#E6ECF2","borderEdges":["all"],"borderRadius":4,"borderWidth":1}},{"colspan":7,"column":42,"name":"listselector_7","row":40,"rowspan":3,"widgetStyle":{"backgroundColor":"#FFFFFF","borderColor":"#E6ECF2","borderEdges":["all"],"borderRadius":4,"borderWidth":1}},{"colspan":7,"column":35,"name":"listselector_8","row":40,"rowspan":3,"widgetStyle":{"backgroundColor":"#FFFFFF","borderColor":"#E6ECF2","borderEdges":["all"],"borderRadius":4,"borderWidth":1}},{"colspan":7,"column":28,"name":"listselector_9","row":40,"rowspan":3,"widgetStyle":{"backgroundColor":"#FFFFFF","borderColor":"#E6ECF2","borderEdges":["all"],"borderRadius":4,"borderWidth":1}},{"colspan":7,"column":21,"name":"listselector_11","row":40,"rowspan":3,"widgetStyle":{"backgroundColor":"#FFFFFF","borderColor":"#E6ECF2","borderEdges":["all"],"borderRadius":4,"borderWidth":1}},{"colspan":7,"column":14,"name":"text_39","row":38,"rowspan":2,"widgetStyle":{"borderEdges":[]}},{"colspan":7,"column":21,"name":"text_41","row":38,"rowspan":2,"widgetStyle":{"borderEdges":[]}},{"colspan":7,"column":28,"name":"text_42","row":38,"rowspan":2,"widgetStyle":{"borderEdges":[]}},{"colspan":7,"column":35,"name":"text_43","row":38,"rowspan":2,"widgetStyle":{"borderEdges":[]}},{"colspan":7,"column":42,"name":"text_44","row":38,"rowspan":2,"widgetStyle":{"borderEdges":[]}}]},{"label":"Accounts (PY / Target Setting)","name":"420d5043-9ab7-42e7-8036-964f0d5eaf2a","navigationHidden":false,"widgets":[{"colspan":50,"column":0,"name":"container_1","row":0,"rowspan":7,"widgetStyle":{"backgroundColor":"#FFFFFF","borderColor":"#7D98B3","borderEdges":["bottom"],"borderRadius":0,"borderWidth":2}},{"colspan":2,"column":1,"name":"image_3","row":1,"rowspan":5,"widgetStyle":{"borderEdges":[]}},{"colspan":8,"column":3,"name":"text_1","row":2,"rowspan":3,"widgetStyle":{"borderEdges":[]}},{"colspan":50,"column":0,"name":"container_2","row":32,"rowspan":5,"widgetStyle":{"backgroundColor":"#FFFFFF","borderColor":"#E6ECF2","borderEdges":["top","left","right"],"borderRadius":0,"borderWidth":8}},{"colspan":50,"column":0,"name":"container_4","row":100,"rowspan":38,"widgetStyle":{"backgroundColor":"#FFFFFF","borderEdges":["bottom","right","left"],"borderWidth":8}},{"colspan":50,"column":0,"name":"container_7","row":7,"rowspan":6,"widgetStyle":{"backgroundColor":"#E6ECF2","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":9,"column":1,"name":"listselector_1","row":8,"rowspan":4,"widgetStyle":{"backgroundColor":"#FFFFFF","borderColor":"#E6ECF2","borderEdges":["all"],"borderRadius":4,"borderWidth":1}},{"colspan":10,"column":10,"name":"listselector_2","row":8,"rowspan":4,"widgetStyle":{"backgroundColor":"#FFFFFF","borderColor":"#E6ECF2","borderEdges":["all"],"borderRadius":4,"borderWidth":1}},{"colspan":42,"column":0,"name":"container_3","row":13,"rowspan":10,"widgetStyle":{"backgroundColor":"rgb(18, 54, 88)","borderColor":"#091A3E","borderEdges":["all"],"borderRadius":0,"borderWidth":8}},{"colspan":4,"column":5,"name":"text_2","row":20,"rowspan":2,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":5,"column":17,"name":"text_3","row":20,"rowspan":2,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":5,"column":30,"name":"text_4","row":20,"rowspan":2,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":42,"column":0,"name":"container_6","row":23,"rowspan":9,"widgetStyle":{"backgroundColor":"rgb(18, 54, 88)","borderColor":"#091A3E","borderEdges":["left","bottom","right"],"borderRadius":0,"borderWidth":8}},{"colspan":1,"column":42,"name":"container_8","row":17,"rowspan":11,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#C6D3E1","borderEdges":["left"],"borderRadius":0,"borderWidth":2}},{"colspan":4,"column":1,"name":"text_5","row":20,"rowspan":2,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":4,"column":1,"name":"text_6","row":29,"rowspan":2,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":10,"column":39,"name":"filterpanel_1","row":8,"rowspan":4,"widgetStyle":{"backgroundColor":"#FFFFFF","borderColor":"#E6ECF2","borderEdges":["all"],"borderRadius":4,"borderWidth":1}},{"colspan":9,"column":20,"name":"listselector_3","row":8,"rowspan":4,"widgetStyle":{"backgroundColor":"#FFFFFF","borderColor":"#E6ECF2","borderEdges":["all"],"borderRadius":4,"borderWidth":1}},{"colspan":6,"column":11,"name":"text_7","row":20,"rowspan":2,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":4,"column":5,"name":"text_8","row":29,"rowspan":2,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":6,"column":11,"name":"text_9","row":29,"rowspan":2,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":5,"column":17,"name":"text_10","row":29,"rowspan":2,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":6,"column":24,"name":"text_11","row":20,"rowspan":2,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":6,"column":24,"name":"text_12","row":29,"rowspan":2,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":5,"column":30,"name":"text_13","row":29,"rowspan":2,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":5,"column":37,"name":"text_14","row":20,"rowspan":2,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":5,"column":37,"name":"text_15","row":29,"rowspan":2,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":4,"column":5,"name":"number_1","row":25,"rowspan":4,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":5,"column":17,"name":"number_3","row":25,"rowspan":4,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":4,"column":5,"name":"number_2","row":16,"rowspan":4,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":5,"column":17,"name":"number_4","row":16,"rowspan":4,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":6,"column":11,"name":"chart_1","row":25,"rowspan":4,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":6,"column":11,"name":"chart_2","row":16,"rowspan":4,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":5,"column":43,"name":"text_17","row":19,"rowspan":2,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":5,"column":43,"name":"text_18","row":28,"rowspan":2,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":5,"column":43,"name":"number_5","row":15,"rowspan":4,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":5,"column":43,"name":"number_6","row":24,"rowspan":4,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":10,"column":29,"name":"listselector_4","row":8,"rowspan":4,"widgetStyle":{"backgroundColor":"#FFFFFF","borderColor":"#E6ECF2","borderEdges":["all"],"borderRadius":4,"borderWidth":1}},{"colspan":4,"column":1,"name":"image_1","row":15,"rowspan":5,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"rgba(230, 236, 242, 0)","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":4,"column":1,"name":"image_2","row":24,"rowspan":5,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":6,"column":24,"name":"chart_6","row":16,"rowspan":4,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":5,"column":30,"name":"number_7","row":16,"rowspan":4,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":6,"column":24,"name":"chart_7","row":25,"rowspan":4,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":5,"column":30,"name":"number_8","row":25,"rowspan":4,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":50,"column":0,"name":"container_5","row":37,"rowspan":63,"widgetStyle":{"backgroundColor":"#FFFFFF","borderColor":"#E6ECF2","borderEdges":["bottom","left","right"],"borderRadius":0,"borderWidth":8}},{"colspan":7,"column":42,"name":"link_26","row":33,"rowspan":3,"widgetStyle":{"backgroundColor":"rgb(0, 112, 210)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":7,"column":35,"name":"link_27","row":33,"rowspan":3,"widgetStyle":{"backgroundColor":"#FFFFFF","borderColor":"#E6ECF2","borderEdges":["all"],"borderRadius":0,"borderWidth":1}},{"colspan":8,"column":16,"name":"link_28","row":32,"rowspan":4,"widgetStyle":{"backgroundColor":"#FFFFFF","borderColor":"#E6ECF2","borderEdges":["bottom"],"borderRadius":0,"borderWidth":1}},{"colspan":8,"column":8,"name":"link_29","row":32,"rowspan":4,"widgetStyle":{"backgroundColor":"#FFFFFF","borderColor":"rgb(52, 127, 219)","borderEdges":["bottom"],"borderRadius":0,"borderWidth":4}},{"colspan":8,"column":0,"name":"link_30","row":32,"rowspan":4,"widgetStyle":{"backgroundColor":"#FFFFFF","borderColor":"#E6ECF2","borderEdges":["bottom"],"borderRadius":0,"borderWidth":1}},{"colspan":48,"column":1,"name":"chart_17","row":43,"rowspan":25,"widgetStyle":{"backgroundColor":"#FFFFFF","borderColor":"#E6ECF2","borderEdges":["bottom"],"borderRadius":0,"borderWidth":1}},{"colspan":9,"column":1,"name":"text_30","row":39,"rowspan":3,"widgetStyle":{"borderEdges":[]}},{"colspan":18,"column":1,"name":"text_32","row":70,"rowspan":3,"widgetStyle":{"borderEdges":[]}},{"colspan":48,"column":1,"name":"chart_18","row":73,"rowspan":25,"widgetStyle":{"borderEdges":[]}},{"colspan":48,"column":1,"name":"chart_19","row":105,"rowspan":31,"widgetStyle":{"borderEdges":[]}},{"colspan":24,"column":1,"name":"text_33","row":102,"rowspan":3,"widgetStyle":{"borderEdges":[]}},{"colspan":5,"column":37,"name":"number_9","row":16,"rowspan":4,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":5,"column":37,"name":"number_10","row":25,"rowspan":4,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":7,"column":42,"name":"listselector_7","row":40,"rowspan":3,"widgetStyle":{"backgroundColor":"#FFFFFF","borderColor":"#E6ECF2","borderEdges":["all"],"borderRadius":4,"borderWidth":1}},{"colspan":7,"column":35,"name":"listselector_8","row":40,"rowspan":3,"widgetStyle":{"backgroundColor":"#FFFFFF","borderColor":"#E6ECF2","borderEdges":["all"],"borderRadius":4,"borderWidth":1}},{"colspan":7,"column":28,"name":"listselector_9","row":40,"rowspan":3,"widgetStyle":{"backgroundColor":"#FFFFFF","borderColor":"#E6ECF2","borderEdges":["all"],"borderRadius":4,"borderWidth":1}},{"colspan":7,"column":14,"name":"listselector_10","row":40,"rowspan":3,"widgetStyle":{"backgroundColor":"#FFFFFF","borderColor":"#E6ECF2","borderEdges":["all"],"borderRadius":4,"borderWidth":1}},{"colspan":7,"column":21,"name":"listselector_11","row":40,"rowspan":3,"widgetStyle":{"backgroundColor":"#FFFFFF","borderColor":"#E6ECF2","borderEdges":["all"],"borderRadius":4,"borderWidth":1}},{"colspan":7,"column":14,"name":"text_39","row":38,"rowspan":2,"widgetStyle":{"borderEdges":[]}},{"colspan":7,"column":21,"name":"text_41","row":38,"rowspan":2,"widgetStyle":{"borderEdges":[]}},{"colspan":7,"column":28,"name":"text_42","row":38,"rowspan":2,"widgetStyle":{"borderEdges":[]}},{"colspan":7,"column":35,"name":"text_43","row":38,"rowspan":2,"widgetStyle":{"borderEdges":[]}},{"colspan":7,"column":42,"name":"text_44","row":38,"rowspan":2,"widgetStyle":{"borderEdges":[]}}]},{"label":"Products (TY /Attainment)","name":"b051c602-86b4-4605-b62c-af8d200616fe","navigationHidden":false,"widgets":[{"colspan":50,"column":0,"name":"container_1","row":0,"rowspan":7,"widgetStyle":{"backgroundColor":"#FFFFFF","borderColor":"#7D98B3","borderEdges":["bottom"],"borderRadius":0,"borderWidth":2}},{"colspan":2,"column":1,"name":"image_3","row":1,"rowspan":5,"widgetStyle":{"borderEdges":[]}},{"colspan":8,"column":3,"name":"text_1","row":2,"rowspan":3,"widgetStyle":{"borderEdges":[]}},{"colspan":50,"column":0,"name":"container_2","row":32,"rowspan":5,"widgetStyle":{"backgroundColor":"#FFFFFF","borderColor":"#E6ECF2","borderEdges":["top","left","right"],"borderRadius":0,"borderWidth":8}},{"colspan":50,"column":0,"name":"container_4","row":100,"rowspan":38,"widgetStyle":{"backgroundColor":"#FFFFFF","borderEdges":["bottom","right","left"],"borderWidth":8}},{"colspan":50,"column":0,"name":"container_7","row":7,"rowspan":6,"widgetStyle":{"backgroundColor":"#E6ECF2","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":9,"column":1,"name":"listselector_1","row":8,"rowspan":4,"widgetStyle":{"backgroundColor":"#FFFFFF","borderColor":"#E6ECF2","borderEdges":["all"],"borderRadius":4,"borderWidth":1}},{"colspan":10,"column":10,"name":"listselector_2","row":8,"rowspan":4,"widgetStyle":{"backgroundColor":"#FFFFFF","borderColor":"#E6ECF2","borderEdges":["all"],"borderRadius":4,"borderWidth":1}},{"colspan":42,"column":0,"name":"container_3","row":13,"rowspan":10,"widgetStyle":{"backgroundColor":"rgb(18, 54, 88)","borderColor":"#091A3E","borderEdges":["all"],"borderRadius":0,"borderWidth":8}},{"colspan":4,"column":5,"name":"text_2","row":20,"rowspan":2,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":5,"column":17,"name":"text_3","row":20,"rowspan":2,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":5,"column":30,"name":"text_4","row":20,"rowspan":2,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":42,"column":0,"name":"container_6","row":23,"rowspan":9,"widgetStyle":{"backgroundColor":"rgb(18, 54, 88)","borderColor":"#091A3E","borderEdges":["left","bottom","right"],"borderRadius":0,"borderWidth":8}},{"colspan":1,"column":42,"name":"container_8","row":17,"rowspan":11,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#C6D3E1","borderEdges":["left"],"borderRadius":0,"borderWidth":2}},{"colspan":4,"column":1,"name":"text_5","row":20,"rowspan":2,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":4,"column":1,"name":"text_6","row":29,"rowspan":2,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":10,"column":39,"name":"filterpanel_1","row":8,"rowspan":4,"widgetStyle":{"backgroundColor":"#FFFFFF","borderColor":"#E6ECF2","borderEdges":["all"],"borderRadius":4,"borderWidth":1}},{"colspan":9,"column":20,"name":"listselector_3","row":8,"rowspan":4,"widgetStyle":{"backgroundColor":"#FFFFFF","borderColor":"#E6ECF2","borderEdges":["all"],"borderRadius":4,"borderWidth":1}},{"colspan":6,"column":11,"name":"text_7","row":20,"rowspan":2,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":4,"column":5,"name":"text_8","row":29,"rowspan":2,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":6,"column":11,"name":"text_9","row":29,"rowspan":2,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":5,"column":17,"name":"text_10","row":29,"rowspan":2,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":6,"column":24,"name":"text_11","row":20,"rowspan":2,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":6,"column":24,"name":"text_12","row":29,"rowspan":2,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":5,"column":30,"name":"text_13","row":29,"rowspan":2,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":5,"column":37,"name":"text_14","row":20,"rowspan":2,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":5,"column":37,"name":"text_15","row":29,"rowspan":2,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":4,"column":5,"name":"number_1","row":25,"rowspan":4,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":5,"column":17,"name":"number_3","row":25,"rowspan":4,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":4,"column":5,"name":"number_2","row":16,"rowspan":4,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":5,"column":17,"name":"number_4","row":16,"rowspan":4,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":6,"column":11,"name":"chart_1","row":25,"rowspan":4,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":6,"column":11,"name":"chart_2","row":16,"rowspan":4,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":5,"column":43,"name":"text_17","row":19,"rowspan":2,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":5,"column":43,"name":"text_18","row":28,"rowspan":2,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":5,"column":43,"name":"number_5","row":15,"rowspan":4,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":5,"column":43,"name":"number_6","row":24,"rowspan":4,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":10,"column":29,"name":"listselector_4","row":8,"rowspan":4,"widgetStyle":{"backgroundColor":"#FFFFFF","borderColor":"#E6ECF2","borderEdges":["all"],"borderRadius":4,"borderWidth":1}},{"colspan":4,"column":1,"name":"image_1","row":15,"rowspan":5,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"rgba(230, 236, 242, 0)","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":4,"column":1,"name":"image_2","row":24,"rowspan":5,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":6,"column":24,"name":"chart_6","row":16,"rowspan":4,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":5,"column":30,"name":"number_7","row":16,"rowspan":4,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":6,"column":24,"name":"chart_7","row":25,"rowspan":4,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":5,"column":30,"name":"number_8","row":25,"rowspan":4,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":50,"column":0,"name":"container_5","row":37,"rowspan":63,"widgetStyle":{"backgroundColor":"#FFFFFF","borderColor":"#E6ECF2","borderEdges":["bottom","left","right"],"borderRadius":0,"borderWidth":8}},{"colspan":7,"column":42,"name":"link_21","row":33,"rowspan":3,"widgetStyle":{"backgroundColor":"#FFFFFF","borderColor":"#E6ECF2","borderEdges":["all"],"borderRadius":0,"borderWidth":1}},{"colspan":7,"column":35,"name":"link_22","row":33,"rowspan":3,"widgetStyle":{"backgroundColor":"rgb(0, 112, 210)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":8,"column":16,"name":"link_23","row":32,"rowspan":4,"widgetStyle":{"backgroundColor":"#FFFFFF","borderColor":"rgb(52, 127, 219)","borderEdges":["bottom"],"borderRadius":0,"borderWidth":4}},{"colspan":8,"column":8,"name":"link_24","row":32,"rowspan":4,"widgetStyle":{"backgroundColor":"#FFFFFF","borderColor":"#E6ECF2","borderEdges":["bottom"],"borderRadius":0,"borderWidth":1}},{"colspan":8,"column":0,"name":"link_25","row":32,"rowspan":4,"widgetStyle":{"backgroundColor":"#FFFFFF","borderColor":"#E6ECF2","borderEdges":["bottom"],"borderRadius":0,"borderWidth":1}},{"colspan":48,"column":1,"name":"chart_20","row":43,"rowspan":25,"widgetStyle":{"backgroundColor":"#FFFFFF","borderColor":"#E6ECF2","borderEdges":["bottom"],"borderRadius":0,"borderWidth":1}},{"colspan":9,"column":1,"name":"text_34","row":39,"rowspan":3,"widgetStyle":{"borderEdges":[]}},{"colspan":48,"column":1,"name":"chart_21","row":73,"rowspan":25,"widgetStyle":{"borderEdges":[]}},{"colspan":14,"column":35,"name":"pillbox_3","row":70,"rowspan":3,"widgetStyle":{"borderEdges":[]}},{"colspan":13,"column":1,"name":"text_35","row":70,"rowspan":3,"widgetStyle":{"borderEdges":[]}},{"colspan":48,"column":1,"name":"chart_22","row":105,"rowspan":31,"widgetStyle":{"borderEdges":[]}},{"colspan":15,"column":1,"name":"text_36","row":102,"rowspan":3,"widgetStyle":{"borderEdges":[]}},{"colspan":5,"column":37,"name":"number_9","row":16,"rowspan":4,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":5,"column":37,"name":"number_10","row":25,"rowspan":4,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":7,"column":42,"name":"link_31","row":40,"rowspan":3,"widgetStyle":{"backgroundColor":"#FFFFFF","borderColor":"#E6ECF2","borderEdges":["all"],"borderRadius":0,"borderWidth":1}},{"colspan":7,"column":35,"name":"link_32","row":40,"rowspan":3,"widgetStyle":{"backgroundColor":"rgb(0, 112, 210)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":7,"column":20,"name":"listselector_5","row":40,"rowspan":3,"widgetStyle":{"backgroundColor":"#FFFFFF","borderColor":"#E6ECF2","borderEdges":["all"],"borderRadius":4,"borderWidth":1}},{"colspan":7,"column":27,"name":"listselector_6","row":40,"rowspan":3,"widgetStyle":{"backgroundColor":"#FFFFFF","borderColor":"#E6ECF2","borderEdges":["all"],"borderRadius":4,"borderWidth":1}},{"colspan":7,"column":20,"name":"text_45","row":38,"rowspan":2,"widgetStyle":{"borderEdges":[]}},{"colspan":7,"column":27,"name":"text_46","row":38,"rowspan":2,"widgetStyle":{"borderEdges":[]}}]},{"label":"Products (TY /Attainment) - QTY","name":"a6635662-b1ca-4d63-b9e9-362917dd7d92","navigationHidden":false,"widgets":[{"colspan":50,"column":0,"name":"container_1","row":0,"rowspan":7,"widgetStyle":{"backgroundColor":"#FFFFFF","borderColor":"#7D98B3","borderEdges":["bottom"],"borderRadius":0,"borderWidth":2}},{"colspan":2,"column":1,"name":"image_3","row":1,"rowspan":5,"widgetStyle":{"borderEdges":[]}},{"colspan":8,"column":3,"name":"text_1","row":2,"rowspan":3,"widgetStyle":{"borderEdges":[]}},{"colspan":50,"column":0,"name":"container_2","row":32,"rowspan":5,"widgetStyle":{"backgroundColor":"#FFFFFF","borderColor":"#E6ECF2","borderEdges":["top","left","right"],"borderRadius":0,"borderWidth":8}},{"colspan":50,"column":0,"name":"container_4","row":100,"rowspan":38,"widgetStyle":{"backgroundColor":"#FFFFFF","borderEdges":["bottom","right","left"],"borderWidth":8}},{"colspan":50,"column":0,"name":"container_7","row":7,"rowspan":6,"widgetStyle":{"backgroundColor":"#E6ECF2","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":9,"column":1,"name":"listselector_1","row":8,"rowspan":4,"widgetStyle":{"backgroundColor":"#FFFFFF","borderColor":"#E6ECF2","borderEdges":["all"],"borderRadius":4,"borderWidth":1}},{"colspan":10,"column":10,"name":"listselector_2","row":8,"rowspan":4,"widgetStyle":{"backgroundColor":"#FFFFFF","borderColor":"#E6ECF2","borderEdges":["all"],"borderRadius":4,"borderWidth":1}},{"colspan":42,"column":0,"name":"container_3","row":13,"rowspan":10,"widgetStyle":{"backgroundColor":"rgb(18, 54, 88)","borderColor":"#091A3E","borderEdges":["all"],"borderRadius":0,"borderWidth":8}},{"colspan":4,"column":5,"name":"text_2","row":20,"rowspan":2,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":5,"column":17,"name":"text_3","row":20,"rowspan":2,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":5,"column":30,"name":"text_4","row":20,"rowspan":2,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":42,"column":0,"name":"container_6","row":23,"rowspan":9,"widgetStyle":{"backgroundColor":"rgb(18, 54, 88)","borderColor":"#091A3E","borderEdges":["left","bottom","right"],"borderRadius":0,"borderWidth":8}},{"colspan":1,"column":42,"name":"container_8","row":17,"rowspan":11,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#C6D3E1","borderEdges":["left"],"borderRadius":0,"borderWidth":2}},{"colspan":4,"column":1,"name":"text_5","row":20,"rowspan":2,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":4,"column":1,"name":"text_6","row":29,"rowspan":2,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":10,"column":39,"name":"filterpanel_1","row":8,"rowspan":4,"widgetStyle":{"backgroundColor":"#FFFFFF","borderColor":"#E6ECF2","borderEdges":["all"],"borderRadius":4,"borderWidth":1}},{"colspan":9,"column":20,"name":"listselector_3","row":8,"rowspan":4,"widgetStyle":{"backgroundColor":"#FFFFFF","borderColor":"#E6ECF2","borderEdges":["all"],"borderRadius":4,"borderWidth":1}},{"colspan":6,"column":11,"name":"text_7","row":20,"rowspan":2,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":4,"column":5,"name":"text_8","row":29,"rowspan":2,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":6,"column":11,"name":"text_9","row":29,"rowspan":2,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":5,"column":17,"name":"text_10","row":29,"rowspan":2,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":6,"column":24,"name":"text_11","row":20,"rowspan":2,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":6,"column":24,"name":"text_12","row":29,"rowspan":2,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":5,"column":30,"name":"text_13","row":29,"rowspan":2,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":5,"column":37,"name":"text_14","row":20,"rowspan":2,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":5,"column":37,"name":"text_15","row":29,"rowspan":2,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":4,"column":5,"name":"number_1","row":25,"rowspan":4,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":5,"column":17,"name":"number_3","row":25,"rowspan":4,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":4,"column":5,"name":"number_2","row":16,"rowspan":4,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":5,"column":17,"name":"number_4","row":16,"rowspan":4,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":6,"column":11,"name":"chart_1","row":25,"rowspan":4,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":6,"column":11,"name":"chart_2","row":16,"rowspan":4,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":5,"column":43,"name":"text_17","row":19,"rowspan":2,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":5,"column":43,"name":"text_18","row":28,"rowspan":2,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":5,"column":43,"name":"number_5","row":15,"rowspan":4,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":5,"column":43,"name":"number_6","row":24,"rowspan":4,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":10,"column":29,"name":"listselector_4","row":8,"rowspan":4,"widgetStyle":{"backgroundColor":"#FFFFFF","borderColor":"#E6ECF2","borderEdges":["all"],"borderRadius":4,"borderWidth":1}},{"colspan":4,"column":1,"name":"image_1","row":15,"rowspan":5,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"rgba(230, 236, 242, 0)","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":4,"column":1,"name":"image_2","row":24,"rowspan":5,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":6,"column":24,"name":"chart_6","row":16,"rowspan":4,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":5,"column":30,"name":"number_7","row":16,"rowspan":4,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":6,"column":24,"name":"chart_7","row":25,"rowspan":4,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":5,"column":30,"name":"number_8","row":25,"rowspan":4,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":50,"column":0,"name":"container_5","row":37,"rowspan":63,"widgetStyle":{"backgroundColor":"#FFFFFF","borderColor":"#E6ECF2","borderEdges":["bottom","left","right"],"borderRadius":0,"borderWidth":8}},{"colspan":8,"column":16,"name":"link_23","row":32,"rowspan":4,"widgetStyle":{"backgroundColor":"#FFFFFF","borderColor":"rgb(52, 127, 219)","borderEdges":["bottom"],"borderRadius":0,"borderWidth":4}},{"colspan":8,"column":8,"name":"link_24","row":32,"rowspan":4,"widgetStyle":{"backgroundColor":"#FFFFFF","borderColor":"#E6ECF2","borderEdges":["bottom"],"borderRadius":0,"borderWidth":1}},{"colspan":8,"column":0,"name":"link_25","row":32,"rowspan":4,"widgetStyle":{"backgroundColor":"#FFFFFF","borderColor":"#E6ECF2","borderEdges":["bottom"],"borderRadius":0,"borderWidth":1}},{"colspan":9,"column":1,"name":"text_34","row":39,"rowspan":3,"widgetStyle":{"borderEdges":[]}},{"colspan":48,"column":1,"name":"chart_21","row":73,"rowspan":25,"widgetStyle":{"borderEdges":[]}},{"colspan":14,"column":35,"name":"pillbox_3","row":70,"rowspan":3,"widgetStyle":{"borderEdges":[]}},{"colspan":14,"column":1,"name":"text_35","row":70,"rowspan":3,"widgetStyle":{"borderEdges":[]}},{"colspan":48,"column":1,"name":"chart_22","row":105,"rowspan":31,"widgetStyle":{"borderEdges":[]}},{"colspan":15,"column":1,"name":"text_36","row":102,"rowspan":3,"widgetStyle":{"borderEdges":[]}},{"colspan":5,"column":37,"name":"number_9","row":16,"rowspan":4,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":5,"column":37,"name":"number_10","row":25,"rowspan":4,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":48,"column":1,"name":"chart_26","row":43,"rowspan":25,"widgetStyle":{"borderEdges":[]}},{"colspan":7,"column":42,"name":"link_35","row":40,"rowspan":3,"widgetStyle":{"backgroundColor":"rgb(0, 112, 210)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":7,"column":35,"name":"link_36","row":40,"rowspan":3,"widgetStyle":{"backgroundColor":"#FFFFFF","borderColor":"#E6ECF2","borderEdges":["all"],"borderRadius":0,"borderWidth":1}},{"colspan":7,"column":35,"name":"link_39","row":33,"rowspan":3,"widgetStyle":{"backgroundColor":"rgb(0, 112, 210)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":7,"column":42,"name":"link_40","row":33,"rowspan":3,"widgetStyle":{"backgroundColor":"#FFFFFF","borderColor":"#E6ECF2","borderEdges":["all"],"borderRadius":0,"borderWidth":1}},{"colspan":7,"column":20,"name":"listselector_5","row":40,"rowspan":3,"widgetStyle":{"backgroundColor":"#FFFFFF","borderColor":"#E6ECF2","borderEdges":["all"],"borderRadius":4,"borderWidth":1}},{"colspan":7,"column":27,"name":"listselector_6","row":40,"rowspan":3,"widgetStyle":{"backgroundColor":"#FFFFFF","borderColor":"#E6ECF2","borderEdges":["all"],"borderRadius":4,"borderWidth":1}},{"colspan":7,"column":20,"name":"text_45","row":38,"rowspan":2,"widgetStyle":{"borderEdges":[]}},{"colspan":7,"column":27,"name":"text_46","row":38,"rowspan":2,"widgetStyle":{"borderEdges":[]}}]},{"label":"Products (PY / Target Setting)","name":"5e321f38-f725-4ef6-b35a-8b47869adb80","navigationHidden":false,"widgets":[{"colspan":50,"column":0,"name":"container_1","row":0,"rowspan":7,"widgetStyle":{"backgroundColor":"#FFFFFF","borderColor":"#7D98B3","borderEdges":["bottom"],"borderRadius":0,"borderWidth":2}},{"colspan":2,"column":1,"name":"image_3","row":1,"rowspan":5,"widgetStyle":{"borderEdges":[]}},{"colspan":8,"column":3,"name":"text_1","row":2,"rowspan":3,"widgetStyle":{"borderEdges":[]}},{"colspan":50,"column":0,"name":"container_2","row":32,"rowspan":5,"widgetStyle":{"backgroundColor":"#FFFFFF","borderColor":"#E6ECF2","borderEdges":["top","left","right"],"borderRadius":0,"borderWidth":8}},{"colspan":50,"column":0,"name":"container_4","row":100,"rowspan":38,"widgetStyle":{"backgroundColor":"#FFFFFF","borderEdges":["bottom","right","left"],"borderWidth":8}},{"colspan":50,"column":0,"name":"container_7","row":7,"rowspan":6,"widgetStyle":{"backgroundColor":"#E6ECF2","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":9,"column":1,"name":"listselector_1","row":8,"rowspan":4,"widgetStyle":{"backgroundColor":"#FFFFFF","borderColor":"#E6ECF2","borderEdges":["all"],"borderRadius":4,"borderWidth":1}},{"colspan":10,"column":10,"name":"listselector_2","row":8,"rowspan":4,"widgetStyle":{"backgroundColor":"#FFFFFF","borderColor":"#E6ECF2","borderEdges":["all"],"borderRadius":4,"borderWidth":1}},{"colspan":42,"column":0,"name":"container_3","row":13,"rowspan":10,"widgetStyle":{"backgroundColor":"rgb(18, 54, 88)","borderColor":"#091A3E","borderEdges":["all"],"borderRadius":0,"borderWidth":8}},{"colspan":4,"column":5,"name":"text_2","row":20,"rowspan":2,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":5,"column":17,"name":"text_3","row":20,"rowspan":2,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":5,"column":30,"name":"text_4","row":20,"rowspan":2,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":42,"column":0,"name":"container_6","row":23,"rowspan":9,"widgetStyle":{"backgroundColor":"rgb(18, 54, 88)","borderColor":"#091A3E","borderEdges":["left","bottom","right"],"borderRadius":0,"borderWidth":8}},{"colspan":1,"column":42,"name":"container_8","row":17,"rowspan":11,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#C6D3E1","borderEdges":["left"],"borderRadius":0,"borderWidth":2}},{"colspan":4,"column":1,"name":"text_5","row":20,"rowspan":2,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":4,"column":1,"name":"text_6","row":29,"rowspan":2,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":10,"column":39,"name":"filterpanel_1","row":8,"rowspan":4,"widgetStyle":{"backgroundColor":"#FFFFFF","borderColor":"#E6ECF2","borderEdges":["all"],"borderRadius":4,"borderWidth":1}},{"colspan":9,"column":20,"name":"listselector_3","row":8,"rowspan":4,"widgetStyle":{"backgroundColor":"#FFFFFF","borderColor":"#E6ECF2","borderEdges":["all"],"borderRadius":4,"borderWidth":1}},{"colspan":6,"column":11,"name":"text_7","row":20,"rowspan":2,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":4,"column":5,"name":"text_8","row":29,"rowspan":2,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":6,"column":11,"name":"text_9","row":29,"rowspan":2,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":5,"column":17,"name":"text_10","row":29,"rowspan":2,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":6,"column":24,"name":"text_11","row":20,"rowspan":2,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":6,"column":24,"name":"text_12","row":29,"rowspan":2,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":5,"column":30,"name":"text_13","row":29,"rowspan":2,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":5,"column":37,"name":"text_14","row":20,"rowspan":2,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":5,"column":37,"name":"text_15","row":29,"rowspan":2,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":4,"column":5,"name":"number_1","row":25,"rowspan":4,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":5,"column":17,"name":"number_3","row":25,"rowspan":4,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":4,"column":5,"name":"number_2","row":16,"rowspan":4,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":5,"column":17,"name":"number_4","row":16,"rowspan":4,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":6,"column":11,"name":"chart_1","row":25,"rowspan":4,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":6,"column":11,"name":"chart_2","row":16,"rowspan":4,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":5,"column":43,"name":"text_17","row":19,"rowspan":2,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":5,"column":43,"name":"text_18","row":28,"rowspan":2,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":5,"column":43,"name":"number_5","row":15,"rowspan":4,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":5,"column":43,"name":"number_6","row":24,"rowspan":4,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":10,"column":29,"name":"listselector_4","row":8,"rowspan":4,"widgetStyle":{"backgroundColor":"#FFFFFF","borderColor":"#E6ECF2","borderEdges":["all"],"borderRadius":4,"borderWidth":1}},{"colspan":4,"column":1,"name":"image_1","row":15,"rowspan":5,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"rgba(230, 236, 242, 0)","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":4,"column":1,"name":"image_2","row":24,"rowspan":5,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":6,"column":24,"name":"chart_6","row":16,"rowspan":4,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":5,"column":30,"name":"number_7","row":16,"rowspan":4,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":6,"column":24,"name":"chart_7","row":25,"rowspan":4,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":5,"column":30,"name":"number_8","row":25,"rowspan":4,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":50,"column":0,"name":"container_5","row":37,"rowspan":63,"widgetStyle":{"backgroundColor":"#FFFFFF","borderColor":"#E6ECF2","borderEdges":["bottom","left","right"],"borderRadius":0,"borderWidth":8}},{"colspan":7,"column":35,"name":"link_16","row":33,"rowspan":3,"widgetStyle":{"backgroundColor":"#FFFFFF","borderColor":"#E6ECF2","borderEdges":["all"],"borderRadius":0,"borderWidth":1}},{"colspan":7,"column":42,"name":"link_17","row":33,"rowspan":3,"widgetStyle":{"backgroundColor":"rgb(0, 112, 210)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":8,"column":16,"name":"link_18","row":32,"rowspan":4,"widgetStyle":{"backgroundColor":"#FFFFFF","borderColor":"rgb(52, 127, 219)","borderEdges":["bottom"],"borderRadius":0,"borderWidth":4}},{"colspan":8,"column":8,"name":"link_19","row":32,"rowspan":4,"widgetStyle":{"backgroundColor":"#FFFFFF","borderColor":"#E6ECF2","borderEdges":["bottom"],"borderRadius":0,"borderWidth":1}},{"colspan":8,"column":0,"name":"link_20","row":32,"rowspan":4,"widgetStyle":{"backgroundColor":"#FFFFFF","borderColor":"#E6ECF2","borderEdges":["bottom"],"borderRadius":0,"borderWidth":1}},{"colspan":48,"column":1,"name":"chart_23","row":43,"rowspan":24,"widgetStyle":{"backgroundColor":"#FFFFFF","borderColor":"#E6ECF2","borderEdges":["bottom"],"borderRadius":0,"borderWidth":1}},{"colspan":9,"column":1,"name":"text_37","row":39,"rowspan":3,"widgetStyle":{"borderEdges":[]}},{"colspan":48,"column":1,"name":"chart_24","row":72,"rowspan":26,"widgetStyle":{"borderEdges":[]}},{"colspan":24,"column":1,"name":"text_38","row":102,"rowspan":3,"widgetStyle":{"borderEdges":[]}},{"colspan":48,"column":1,"name":"chart_25","row":105,"rowspan":31,"widgetStyle":{"borderEdges":[]}},{"colspan":5,"column":37,"name":"number_9","row":16,"rowspan":4,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":5,"column":37,"name":"number_10","row":25,"rowspan":4,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":13,"column":1,"name":"text_40","row":69,"rowspan":3,"widgetStyle":{"borderEdges":[]}},{"colspan":7,"column":35,"name":"link_33","row":40,"rowspan":3,"widgetStyle":{"backgroundColor":"rgb(0, 112, 210)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":7,"column":42,"name":"link_34","row":40,"rowspan":3,"widgetStyle":{"backgroundColor":"#FFFFFF","borderColor":"#E6ECF2","borderEdges":["all"],"borderRadius":0,"borderWidth":1}},{"colspan":7,"column":20,"name":"listselector_5","row":40,"rowspan":3,"widgetStyle":{"backgroundColor":"#FFFFFF","borderColor":"#E6ECF2","borderEdges":["all"],"borderRadius":4,"borderWidth":1}},{"colspan":7,"column":27,"name":"listselector_6","row":40,"rowspan":3,"widgetStyle":{"backgroundColor":"#FFFFFF","borderColor":"#E6ECF2","borderEdges":["all"],"borderRadius":4,"borderWidth":1}},{"colspan":7,"column":20,"name":"text_45","row":38,"rowspan":2,"widgetStyle":{"borderEdges":[]}},{"colspan":7,"column":27,"name":"text_46","row":38,"rowspan":2,"widgetStyle":{"borderEdges":[]}}]},{"label":"Products (PY / Target Setting) - QTY","name":"dfda6cd4-7707-481f-b677-eb783b759077","navigationHidden":false,"widgets":[{"colspan":50,"column":0,"name":"container_1","row":0,"rowspan":7,"widgetStyle":{"backgroundColor":"#FFFFFF","borderColor":"#7D98B3","borderEdges":["bottom"],"borderRadius":0,"borderWidth":2}},{"colspan":2,"column":1,"name":"image_3","row":1,"rowspan":5,"widgetStyle":{"borderEdges":[]}},{"colspan":8,"column":3,"name":"text_1","row":2,"rowspan":3,"widgetStyle":{"borderEdges":[]}},{"colspan":50,"column":0,"name":"container_2","row":32,"rowspan":5,"widgetStyle":{"backgroundColor":"#FFFFFF","borderColor":"#E6ECF2","borderEdges":["top","left","right"],"borderRadius":0,"borderWidth":8}},{"colspan":50,"column":0,"name":"container_4","row":100,"rowspan":38,"widgetStyle":{"backgroundColor":"#FFFFFF","borderEdges":["bottom","right","left"],"borderWidth":8}},{"colspan":50,"column":0,"name":"container_7","row":7,"rowspan":6,"widgetStyle":{"backgroundColor":"#E6ECF2","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":9,"column":1,"name":"listselector_1","row":8,"rowspan":4,"widgetStyle":{"backgroundColor":"#FFFFFF","borderColor":"#E6ECF2","borderEdges":["all"],"borderRadius":4,"borderWidth":1}},{"colspan":10,"column":10,"name":"listselector_2","row":8,"rowspan":4,"widgetStyle":{"backgroundColor":"#FFFFFF","borderColor":"#E6ECF2","borderEdges":["all"],"borderRadius":4,"borderWidth":1}},{"colspan":42,"column":0,"name":"container_3","row":13,"rowspan":10,"widgetStyle":{"backgroundColor":"rgb(18, 54, 88)","borderColor":"#091A3E","borderEdges":["all"],"borderRadius":0,"borderWidth":8}},{"colspan":4,"column":5,"name":"text_2","row":20,"rowspan":2,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":5,"column":17,"name":"text_3","row":20,"rowspan":2,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":5,"column":30,"name":"text_4","row":20,"rowspan":2,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":42,"column":0,"name":"container_6","row":23,"rowspan":9,"widgetStyle":{"backgroundColor":"rgb(18, 54, 88)","borderColor":"#091A3E","borderEdges":["left","bottom","right"],"borderRadius":0,"borderWidth":8}},{"colspan":1,"column":42,"name":"container_8","row":17,"rowspan":11,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#C6D3E1","borderEdges":["left"],"borderRadius":0,"borderWidth":2}},{"colspan":4,"column":1,"name":"text_5","row":20,"rowspan":2,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":4,"column":1,"name":"text_6","row":29,"rowspan":2,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":10,"column":39,"name":"filterpanel_1","row":8,"rowspan":4,"widgetStyle":{"backgroundColor":"#FFFFFF","borderColor":"#E6ECF2","borderEdges":["all"],"borderRadius":4,"borderWidth":1}},{"colspan":9,"column":20,"name":"listselector_3","row":8,"rowspan":4,"widgetStyle":{"backgroundColor":"#FFFFFF","borderColor":"#E6ECF2","borderEdges":["all"],"borderRadius":4,"borderWidth":1}},{"colspan":6,"column":11,"name":"text_7","row":20,"rowspan":2,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":4,"column":5,"name":"text_8","row":29,"rowspan":2,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":6,"column":11,"name":"text_9","row":29,"rowspan":2,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":5,"column":17,"name":"text_10","row":29,"rowspan":2,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":6,"column":24,"name":"text_11","row":20,"rowspan":2,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":6,"column":24,"name":"text_12","row":29,"rowspan":2,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":5,"column":30,"name":"text_13","row":29,"rowspan":2,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":5,"column":37,"name":"text_14","row":20,"rowspan":2,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":5,"column":37,"name":"text_15","row":29,"rowspan":2,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":4,"column":5,"name":"number_1","row":25,"rowspan":4,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":5,"column":17,"name":"number_3","row":25,"rowspan":4,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":4,"column":5,"name":"number_2","row":16,"rowspan":4,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":5,"column":17,"name":"number_4","row":16,"rowspan":4,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":6,"column":11,"name":"chart_1","row":25,"rowspan":4,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":6,"column":11,"name":"chart_2","row":16,"rowspan":4,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":5,"column":43,"name":"text_17","row":19,"rowspan":2,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":5,"column":43,"name":"text_18","row":28,"rowspan":2,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":5,"column":43,"name":"number_5","row":15,"rowspan":4,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":5,"column":43,"name":"number_6","row":24,"rowspan":4,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":10,"column":29,"name":"listselector_4","row":8,"rowspan":4,"widgetStyle":{"backgroundColor":"#FFFFFF","borderColor":"#E6ECF2","borderEdges":["all"],"borderRadius":4,"borderWidth":1}},{"colspan":4,"column":1,"name":"image_1","row":15,"rowspan":5,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"rgba(230, 236, 242, 0)","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":4,"column":1,"name":"image_2","row":24,"rowspan":5,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":6,"column":24,"name":"chart_6","row":16,"rowspan":4,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":5,"column":30,"name":"number_7","row":16,"rowspan":4,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":6,"column":24,"name":"chart_7","row":25,"rowspan":4,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":5,"column":30,"name":"number_8","row":25,"rowspan":4,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":50,"column":0,"name":"container_5","row":37,"rowspan":63,"widgetStyle":{"backgroundColor":"#FFFFFF","borderColor":"#E6ECF2","borderEdges":["bottom","left","right"],"borderRadius":0,"borderWidth":8}},{"colspan":8,"column":16,"name":"link_18","row":32,"rowspan":4,"widgetStyle":{"backgroundColor":"#FFFFFF","borderColor":"rgb(52, 127, 219)","borderEdges":["bottom"],"borderRadius":0,"borderWidth":4}},{"colspan":8,"column":8,"name":"link_19","row":32,"rowspan":4,"widgetStyle":{"backgroundColor":"#FFFFFF","borderColor":"#E6ECF2","borderEdges":["bottom"],"borderRadius":0,"borderWidth":1}},{"colspan":8,"column":0,"name":"link_20","row":32,"rowspan":4,"widgetStyle":{"backgroundColor":"#FFFFFF","borderColor":"#E6ECF2","borderEdges":["bottom"],"borderRadius":0,"borderWidth":1}},{"colspan":9,"column":1,"name":"text_37","row":39,"rowspan":3,"widgetStyle":{"borderEdges":[]}},{"colspan":48,"column":1,"name":"chart_24","row":72,"rowspan":26,"widgetStyle":{"borderEdges":[]}},{"colspan":24,"column":1,"name":"text_38","row":102,"rowspan":3,"widgetStyle":{"borderEdges":[]}},{"colspan":48,"column":1,"name":"chart_25","row":105,"rowspan":31,"widgetStyle":{"borderEdges":[]}},{"colspan":5,"column":37,"name":"number_9","row":16,"rowspan":4,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":5,"column":37,"name":"number_10","row":25,"rowspan":4,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":15,"column":1,"name":"text_40","row":69,"rowspan":3,"widgetStyle":{"borderEdges":[]}},{"colspan":48,"column":1,"name":"chart_27","row":43,"rowspan":25,"widgetStyle":{"borderEdges":[]}},{"colspan":7,"column":35,"name":"link_37","row":40,"rowspan":3,"widgetStyle":{"backgroundColor":"#FFFFFF","borderColor":"#E6ECF2","borderEdges":["all"],"borderRadius":0,"borderWidth":1}},{"colspan":7,"column":42,"name":"link_38","row":40,"rowspan":3,"widgetStyle":{"backgroundColor":"rgb(0, 112, 210)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":7,"column":35,"name":"link_41","row":33,"rowspan":3,"widgetStyle":{"backgroundColor":"#FFFFFF","borderColor":"#E6ECF2","borderEdges":["all"],"borderRadius":0,"borderWidth":1}},{"colspan":7,"column":42,"name":"link_42","row":33,"rowspan":3,"widgetStyle":{"backgroundColor":"rgb(0, 112, 210)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":7,"column":20,"name":"listselector_5","row":40,"rowspan":3,"widgetStyle":{"backgroundColor":"#FFFFFF","borderColor":"#E6ECF2","borderEdges":["all"],"borderRadius":4,"borderWidth":1}},{"colspan":7,"column":27,"name":"listselector_6","row":40,"rowspan":3,"widgetStyle":{"backgroundColor":"#FFFFFF","borderColor":"#E6ECF2","borderEdges":["all"],"borderRadius":4,"borderWidth":1}},{"colspan":7,"column":20,"name":"text_45","row":38,"rowspan":2,"widgetStyle":{"borderEdges":[]}},{"colspan":7,"column":27,"name":"text_46","row":38,"rowspan":2,"widgetStyle":{"borderEdges":[]}}]}],"rowHeight":"fine","selectors":[],"style":{"alignmentX":"left","alignmentY":"top","backgroundColor":"rgb(4, 29, 64)","cellSpacingX":0,"cellSpacingY":0,"fit":"original","gutterColor":"rgb(197, 211, 224)"},"version":1.0}],"layouts":[],"steps":{"Account_Filter_1":{"broadcastFacet":true,"datasets":[{"name":"MFG_AccountManagerPeriodicTargetDistribution"}],"isGlobal":false,"label":"Account Filter","query":{"query":"{\"measures\":[[\"count\",\"*\"]],\"groups\":[\"AcctMgrTargetDstr.Account.Name\"]}","version":-1.0},"receiveFacetSource":{"mode":"exclude","steps":["List_of_Main_Goals_1","Period_Selection_1","Product_Name_Filter_1","PY_Product_targets_1","PY_Product_targets___1","PY_Targets_by_Produc_1","PY_Product_targets_a_1","TY_Product_Targets_1","TY_Product_Targets___1","TY_Products_by_Reps_1","TY_Product_Targets_V_1","Product_Family_Filte_1"]},"selectMode":"multi","type":"aggregateflex","useGlobal":true,"visualizationParameters":{"parameters":{"autoFitMode":"keepLabels","bins":{"breakpoints":{"high":100,"low":0},"bands":{"high":{"color":"#008000","label":""},"low":{"color":"#B22222","label":""},"medium":{"color":"#ffa500","label":""}}},"legend":{"descOrder":false,"showHeader":true,"show":true,"customSize":"auto","position":"right-top","inside":false},"axisMode":"multi","tooltip":{"content":{"legend":{"showBinLabel":true,"measures":[],"showNullValues":true,"customizeLegend":false,"showPercentage":true,"showDimensions":true,"showMeasures":true,"dimensions":[]}}},"visualizationType":"hbar","title":{"fontSize":14,"subtitleFontSize":11,"label":"","align":"center","subtitleLabel":""},"binValues":false,"trellis":{"flipLabels":false,"showGridLines":true,"size":[100,100],"enable":false,"type":"x","chartsPerLine":4},"columnMap":{"trellis":[],"dimensionAxis":["AcctMgrTargetDstr.Account.Name"],"plots":["count"]},"showActionMenu":true,"measureAxis2":{"sqrtScale":false,"showTitle":true,"showAxis":true,"title":"","customDomain":{"showDomain":false}},"measureAxis1":{"sqrtScale":false,"showTitle":true,"showAxis":true,"title":"","customDomain":{"showDomain":false}},"valueType":"compactNumber","theme":"wave","compactDecimalDigits":-1,"dimensionAxis":{"showTitle":true,"customSize":"auto","showAxis":true,"title":"","icons":{"useIcons":false,"iconProps":{"fit":"cover","column":"","type":"round"}}},"applyConditionalFormatting":true},"type":"chart"}},"TY_Product_Targets_V_1":{"broadcastFacet":true,"groups":[],"label":"TY Product Targets Vs Actuals Over Time","numbers":[],"query":"targets = load \"MFG_AccountManagerPeriodicTargetDistribution\";\ntargets = filter targets by !('AcctMgrTargetDstr.ProductId' is null);targets = filter targets by date('Period.StartDate_Year', 'Period.StartDate_Month', 'Period.StartDate_Day') in [dateRange([{{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.StartDate_Year\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Year\"),1900)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.StartDate_Month\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Month\"),01)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.StartDate_Day\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Day\"),01)).asObject()}}], [{{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.EndDate_Year\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Year\"),3000)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.EndDate_Month\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Month\"),12)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.EndDate_Day\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Day\"),31)).asObject()}}])];  targets = filter targets by date('Period.EndDate_Year', 'Period.EndDate_Month', 'Period.EndDate_Day') in [dateRange([{{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.StartDate_Year\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Year\"),1900)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.StartDate_Month\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Month\"),01)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.StartDate_Day\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Day\"),01)).asObject()}}], [{{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.EndDate_Year\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Year\"),3000)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.EndDate_Month\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Month\"),12)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.EndDate_Day\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Day\"),31)).asObject()}}])]; \ntargets = filter targets by {{column(Team_Members_1.selection, [\"AssignedTo.Id\"]).asEquality(\"AssignedTo.Managers\")}} && ({{column(Team_Members_1.selection, [\"AssignedTo.Id\"]).asEquality(\"AssignedTo.ManagerId\")}} || {{column(Team_Members_1.selection, [\"AssignedTo.Id\"]).asEquality(\"AssignedTo.ForecastRole.ParentRole.ForecastUserId\")}}); targets = filter targets by !({{column(Team_Members_1.selection, [\"AssignedTo.Id\"]).asEquality(\"AssignedTo.Id\")}}); targets = filter targets by {{column(List_of_Main_Goals_1.selection, [\"Self_AcctMgrTarget\"]).asEquality(\"ParentTargetNames\")}}; targets = filter targets by {{column(Target_Period_Split__1.selection, [\"Self_AcctMgrTarget\"]).asEquality(\"ParentTargetNames\")}};\nstartTargets = foreach targets generate 'Id'+'Period.StartDate_Year'+'Period.StartDate_Month'+\"@#%\"+'AcctMgrTargetDstr.ProductId'+\"!#%\"+'AcctMgrTargetDstr.Product.Name' as 'Id',  'Period.StartDate_Year' as 'Date_Year', 'Period.StartDate_Month' as 'Date_Month', 'MonthlyTargetCurrencyValue' as 'MonthlyTargetCurrencyValue', 'Period.StartDate_sec_epoch' as 'Min Start Sec Epoch', 'Period.EndDate_sec_epoch' as 'Max End Sec Epoch';\nendTargets = foreach targets generate 'Id'+'Period.StartDate_Year'+'Period.StartDate_Month'+\"@#%\"+'AcctMgrTargetDstr.ProductId'+\"!#%\"+'AcctMgrTargetDstr.Product.Name' as 'Id',  'Period.EndDate_Year' as 'Date_Year', 'Period.EndDate_Month' as 'Date_Month', 'MonthlyTargetCurrencyValue' as 'MonthlyTargetCurrencyValue', 'Period.StartDate_sec_epoch' as 'Min Start Sec Epoch', 'Period.EndDate_sec_epoch' as 'Max End Sec Epoch';\nTargetsForFill = union startTargets, endTargets;\nTargetsForFill = foreach TargetsForFill generate 'Id' as 'Id', 'Date_Year' as 'Date_Year', 'Date_Month' as 'Date_Month', 'MonthlyTargetCurrencyValue' as 'MonthlyTargetCurrencyValue', 'Min Start Sec Epoch' as 'Min Start Sec Epoch', 'Max End Sec Epoch' as 'Max End Sec Epoch';\nTargetsFilled = fill TargetsForFill by (dateCols=('Date_Year','Date_Month', \"Y-M\"), partition='Id');\nTargetsFilled = group TargetsFilled by ('Id', 'Date_Year', 'Date_Month');\nTargetsFilled = foreach TargetsFilled generate substr('Id',1,index_of('Id',\"@#%\",1,1)-1) as 'Id', substr('Id', index_of('Id',\"@#%\",1,1)+3, index_of('Id',\"!#%\") - (index_of('Id',\"@#%\",1,1)+3)) as 'AcctMgrTargetDstr.ProductId', substr('Id', index_of('Id',\"!#%\")+3) as 'AcctMgrTargetDstr.Product.Name','Date_Year', 'Date_Month', max(sum('MonthlyTargetCurrencyValue')) over([..] partition by 'Id') as 'MonthlyTargetCurrencyValue', max(sum('Min Start Sec Epoch')) over([..] partition by 'Id') as 'Min Start Sec Epoch', max(sum('Max End Sec Epoch')) over([..] partition by 'Id') as 'Max End Sec Epoch';\nTargetsFilled = filter TargetsFilled by toDate('Date_Year'+\"-\"+'Date_Month'+\"-01 23:59:59\",\"yyyy-MM-dd HH:mm:ss\") >= toDate('Min Start Sec Epoch');\nTargetsFilled = filter TargetsFilled by toDate('Date_Year'+\"-\"+'Date_Month'+\"-01 00:00:00\",\"yyyy-MM-dd HH:mm:ss\") <= toDate('Max End Sec Epoch');\nactuals = load \"MFG_TargetActuals\";actuals = filter actuals by !({{column(Team_Members_1.selection, [\"AssignedTo.Id\"]).asEquality(\"TargetActualsOwner.Id\")}}); actuals = filter actuals by {{column(Team_Members_1.selection, [\"AssignedTo.Id\"]).asEquality(\"TargetActualsOwner_for_filter.Managers\")}}; actuals = filter actuals by 'Order.StatusCode' == \"Activated\"; \nactuals_for_projection = group actuals by ('Product2Id', 'Order.EffectiveDate_Year', 'Order.EffectiveDate_Month');\nactuals_for_projection = foreach actuals_for_projection generate 'Product2Id' as 'Product2Id', 'Order.EffectiveDate_Year', 'Order.EffectiveDate_Month', sum('TotalPrice') as 'Total Price';\nactuals_for_projection = fill actuals_for_projection by (dateCols=('Order.EffectiveDate_Year','Order.EffectiveDate_Month', \"Y-M\"), partition='Product2Id');\nactuals_for_projection = timeseries actuals_for_projection generate 'Total Price' as 'Projected Total Price' with (partition='Product2Id', length=36, dateCols=('Order.EffectiveDate_Year','Order.EffectiveDate_Month', \"Y-M\"), seasonality = 0, ignoreLast = false);\nactuals_for_projection = foreach actuals_for_projection generate 'Product2Id' as 'Product2Id', 'Order.EffectiveDate_Year', 'Order.EffectiveDate_Month', 'Total Price' as 'Total Price', case when 'Total Price' > coalesce('Projected Total Price',0) then 'Total Price' when coalesce('Projected Total Price',0) >= 0 then 'Projected Total Price' else 0 end as 'Projected Total Price', month_last_day(toDate('Order.EffectiveDate_Year'+\"-\"+'Order.EffectiveDate_Month'+\"-27 00:00:00\",\"yyyy-MM-dd HH:mm:ss\")) as 'Month Last Day'; actuals_for_projection = filter actuals_for_projection by 'Month Last Day' > now();actuals_for_projection = filter actuals_for_projection by toDate('Order.EffectiveDate_Year'+\"-\"+'Order.EffectiveDate_Month'+\"-01 00:00:00\",\"yyyy-MM-dd HH:mm:ss\") >= toDate(\"{{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.StartDate_Year\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Year\"),1900)).asObject()}}\"+\"-\"+\"{{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.StartDate_Month\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Month\"),\"01\")).asObject()}}\"+\"-\"+\"{{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.StartDate_Day\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Day\"),\"01\")).asObject()}}\"+\" 00:00:00\",\"yyyy-MM-dd HH:mm:ss\") && toDate('Order.EffectiveDate_Year'+\"-\"+'Order.EffectiveDate_Month'+\"-01 00:00:00\",\"yyyy-MM-dd HH:mm:ss\") <= toDate(\"{{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.EndDate_Year\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Year\"),3000)).asObject()}}\"+\"-\"+\"{{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.EndDate_Month\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Month\"),12)).asObject()}}\"+\"-\"+\"{{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.EndDate_Day\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Day\"),31)).asObject()}}\"+\" 00:00:00\",\"yyyy-MM-dd HH:mm:ss\"); actuals = filter actuals by date('Order.EffectiveDate_Year', 'Order.EffectiveDate_Month', 'Order.EffectiveDate_Day') in [dateRange([{{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.StartDate_Year\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Year\"),1900)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.StartDate_Month\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Month\"),01)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.StartDate_Day\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Day\"),01)).asObject()}}], [{{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.EndDate_Year\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Year\"),3000)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.EndDate_Month\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Month\"),12)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.EndDate_Day\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Day\"),31)).asObject()}}])]; \nactuals_for_join = group actuals by ('Product2Id', 'Order.EffectiveDate_Year', 'Order.EffectiveDate_Month') full, \nactuals_for_projection by ('Product2Id', 'Order.EffectiveDate_Year', 'Order.EffectiveDate_Month');\nactuals_for_join = foreach actuals_for_join generate coalesce(actuals.'Product2Id', actuals_for_projection.'Product2Id') as 'Product2Id', coalesce(actuals.'Order.EffectiveDate_Year',actuals_for_projection.'Order.EffectiveDate_Year') as 'Order.EffectiveDate_Year', coalesce(actuals.'Order.EffectiveDate_Month',actuals_for_projection.'Order.EffectiveDate_Month') as 'Order.EffectiveDate_Month',  sum(actuals_for_projection.'Projected Total Price') as 'Projections', sum(actuals.'TotalPrice') as 'Actuals', coalesce(sum(actuals_for_projection.'Projected Total Price'),sum(actuals.'TotalPrice')) as 'Actuals & Projection';\nresult = group TargetsFilled by ('AcctMgrTargetDstr.ProductId', 'Date_Year','Date_Month') left, \nactuals_for_join by ('Product2Id','Order.EffectiveDate_Year','Order.EffectiveDate_Month');\nresult = foreach result generate TargetsFilled.'AcctMgrTargetDstr.ProductId' as 'AcctMgrTargetDstr.ProductId', TargetsFilled.'Date_Year' as 'Date_Year', TargetsFilled.'Date_Month' as  'Date_Month', sum(TargetsFilled.'MonthlyTargetCurrencyValue') as 'MonthlyTargetCurrencyValue', coalesce(sum(actuals_for_join.'Actuals'),0) as 'Actuals',  sum(actuals_for_join.'Projections') as 'Projections', coalesce(sum(actuals_for_join.'Actuals & Projection'),0) as 'Actuals & Projection';\nresult = group result by ('Date_Year', 'Date_Month');\nresult = foreach result generate 'Date_Year'+\"~~~\"+'Date_Month' as 'Period.StartDate_Year~~~Period.StartDate_Month', sum(sum('MonthlyTargetCurrencyValue')) over([..0] partition by all order by ('Date_Year' asc, 'Date_Month' asc)) as 'Target Revenue', sum(sum('Actuals')) over([..0] partition by all order by ('Date_Year' asc, 'Date_Month' asc)) as 'Actual Revenue' ,case when coalesce(sum(sum('Projections')) over([..0] partition by all order by ('Date_Year' asc, 'Date_Month' asc)),0) > 0 then sum(sum('Actuals & Projection')) over([..0] partition by all order by ('Date_Year' asc, 'Date_Month' asc)) else sum(sum('Projections')) over([..0] partition by all order by ('Date_Year' asc, 'Date_Month' asc)) end as 'Projected Revenue';","receiveFacetSource":{"mode":"exclude","steps":["List_of_Main_Goals_1","Period_Selection_1","TY_Account_level_tar_1","TY_Accounts_by_Rep_1","Account_Targets_Vs_A_1","PY_Targets_by_Accoun_1","PY_Targets_by_Accoun_2","PY_Account_targets_a_1","Parent_Account_Filte_1","Account_Filter_1","Account_Type_Filter_1","Account_Industry_Fil_1","Account_Geo_Filter_1"]},"selectMode":"none","strings":[],"type":"saql","useGlobal":true,"visualizationParameters":{"parameters":{"stack":false,"showPoints":true,"legend":{"descOrder":false,"showHeader":true,"show":true,"customSize":"auto","position":"right-top","inside":false},"axisMode":"sync","tooltip":{"content":{"legend":{"showBinLabel":true,"measures":[],"showNullValues":true,"customizeLegend":false,"showPercentage":true,"showDimensions":true,"showMeasures":true,"dimensions":[]}}},"visualizationType":"time-combo","missingValue":"connect","timeAxis":{"showTitle":true,"predictiveLine":{"color":"#8932ED","label":"TODAY"},"showAxis":true,"title":"Date (Year-Month)"},"title":{"fontSize":14,"subtitleFontSize":11,"label":"","align":"center","subtitleLabel":""},"trellis":{"flipLabels":false,"showGridLines":true,"size":[100,100],"enable":false,"type":"x","chartsPerLine":4},"plots":{"Actual Revenue":{"mark":"bar"},"Projected Revenue":{"mark":"line"},"Target Revenue":{"mark":"bar"}},"columnMap":{"timeAxis":["Period.StartDate_Year~~~Period.StartDate_Month"],"trellis":[],"plots":["Target Revenue","Actual Revenue","Projected Revenue"]},"showActionMenu":true,"measureAxis2":{"sqrtScale":false,"showTitle":true,"showAxis":true,"title":"","customDomain":{"showDomain":false}},"measureAxis1":{"sqrtScale":false,"showTitle":true,"showAxis":true,"title":"","customDomain":{"showDomain":false}},"valueType":"compactNumber","valueTypeOnLine":"none","theme":"wave","compactDecimalDigits":-1,"applyConditionalFormatting":true},"type":"chart"}},"Account_Type_Filter_1":{"broadcastFacet":true,"datasets":[{"name":"MFG_AccountManagerPeriodicTargetDistribution"}],"isGlobal":false,"label":"Account Type Filter","query":{"query":"{\"measures\":[[\"count\",\"*\"]],\"groups\":[\"AcctMgrTargetDstr.Account.Type\"]}","version":-1.0},"receiveFacetSource":{"mode":"exclude","steps":["List_of_Main_Goals_1","Period_Selection_1","Product_Name_Filter_1","PY_Product_targets_1","PY_Product_targets___1","PY_Targets_by_Produc_1","PY_Product_targets_a_1","TY_Product_Targets_1","TY_Product_Targets___1","TY_Products_by_Reps_1","TY_Product_Targets_V_1","Product_Family_Filte_1"]},"selectMode":"multi","type":"aggregateflex","useGlobal":true,"visualizationParameters":{"parameters":{"autoFitMode":"keepLabels","bins":{"breakpoints":{"high":100,"low":0},"bands":{"high":{"color":"#008000","label":""},"low":{"color":"#B22222","label":""},"medium":{"color":"#ffa500","label":""}}},"legend":{"descOrder":false,"showHeader":true,"show":true,"customSize":"auto","position":"right-top","inside":false},"axisMode":"multi","tooltip":{"content":{"legend":{"showBinLabel":true,"measures":[],"showNullValues":true,"customizeLegend":false,"showPercentage":true,"showDimensions":true,"showMeasures":true,"dimensions":[]}}},"visualizationType":"hbar","title":{"fontSize":14,"subtitleFontSize":11,"label":"","align":"center","subtitleLabel":""},"binValues":false,"trellis":{"flipLabels":false,"showGridLines":true,"size":[100,100],"enable":false,"type":"x","chartsPerLine":4},"columnMap":{"trellis":[],"dimensionAxis":["AcctMgrTargetDstr.Account.Type"],"plots":["count"]},"showActionMenu":true,"measureAxis2":{"sqrtScale":false,"showTitle":true,"showAxis":true,"title":"","customDomain":{"showDomain":false}},"measureAxis1":{"sqrtScale":false,"showTitle":true,"showAxis":true,"title":"","customDomain":{"showDomain":false}},"valueType":"compactNumber","theme":"wave","compactDecimalDigits":-1,"dimensionAxis":{"showTitle":true,"customSize":"auto","showAxis":true,"title":"","icons":{"useIcons":false,"iconProps":{"fit":"cover","column":"","type":"round"}}},"applyConditionalFormatting":true},"type":"chart"}},"Previous_FY_Dates_1":{"broadcastFacet":true,"groups":[],"label":"Previous FY Dates","numbers":[],"query":"q = load \"MFG_AccountManagerPeriodicTargetDistribution\"; q = group q by all; q = foreach q generate number_to_string(({{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.StartDate_Year\"), cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Year\"),1900).asObject()}}-1),\"#\") as 'AcctMgrTarget.Period.StartDate_Year', number_to_string({{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.StartDate_Month\"), cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Month\"),01).asObject()}},\"00\") as 'AcctMgrTarget.Period.StartDate_Month', number_to_string({{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.StartDate_Day\"), cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Day\"),01).asObject()}},\"00\") as 'AcctMgrTarget.Period.StartDate_Day', number_to_string(({{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.EndDate_Year\"), cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Year\"),1900).asObject()}}-1),\"#\") as 'AcctMgrTarget.Period.EndDate_Year', number_to_string({{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.EndDate_Month\"), cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Month\"),01).asObject()}},\"00\") as 'AcctMgrTarget.Period.EndDate_Month', number_to_string({{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.EndDate_Day\"), cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Day\"),01).asObject()}},\"00\") as 'AcctMgrTarget.Period.EndDate_Day';","receiveFacetSource":{"mode":"all","steps":[]},"selectMode":"single","strings":["AcctMgrTarget.Period.StartDate_Year","AcctMgrTarget.Period.StartDate_Month","AcctMgrTarget.Period.StartDate_Day","AcctMgrTarget.Period.EndDate_Year","AcctMgrTarget.Period.EndDate_Month","AcctMgrTarget.Period.EndDate_Day"],"type":"saql","useGlobal":true,"visualizationParameters":{"parameters":{"borderColor":"#e0e5ee","borderWidth":1,"cell":{"backgroundColor":"#ffffff","fontColor":"#16325c","fontSize":12},"columnProperties":{},"columns":[],"customBulkActions":[],"header":{"backgroundColor":"#f4f6f9","fontColor":"#16325c","fontSize":12},"innerMajorBorderColor":"#a8b7c7","innerMinorBorderColor":"#e0e5ee","interactions":[],"maxColumnWidth":300,"minColumnWidth":40,"mode":"variable","numberOfLines":1,"showActionMenu":true,"showRowIndexColumn":true,"totals":true,"verticalPadding":8},"type":"table"}},"Parent_Account_Filte_1":{"broadcastFacet":true,"datasets":[{"name":"MFG_AccountManagerPeriodicTargetDistribution"}],"isGlobal":false,"label":"Parent Account Filter","query":{"query":"{\"measures\":[[\"count\",\"*\"]],\"groups\":[\"AcctMgrTargetDstr.Account.Parent.Name\"]}","version":-1.0},"receiveFacetSource":{"mode":"exclude","steps":["List_of_Main_Goals_1","Period_Selection_1","Product_Name_Filter_1","PY_Product_targets_1","PY_Product_targets___1","PY_Targets_by_Produc_1","PY_Product_targets_a_1","TY_Product_Targets_1","TY_Product_Targets___1","TY_Products_by_Reps_1","TY_Product_Targets_V_1","Product_Family_Filte_1"]},"selectMode":"multi","type":"aggregateflex","useGlobal":true,"visualizationParameters":{"parameters":{"autoFitMode":"keepLabels","bins":{"breakpoints":{"high":100,"low":0},"bands":{"high":{"color":"#008000","label":""},"low":{"color":"#B22222","label":""},"medium":{"color":"#ffa500","label":""}}},"legend":{"descOrder":false,"showHeader":true,"show":true,"customSize":"auto","position":"right-top","inside":false},"axisMode":"multi","tooltip":{"content":{"legend":{"showBinLabel":true,"measures":[],"showNullValues":true,"customizeLegend":false,"showPercentage":true,"showDimensions":true,"showMeasures":true,"dimensions":[]}}},"visualizationType":"hbar","title":{"fontSize":14,"subtitleFontSize":11,"label":"","align":"center","subtitleLabel":""},"binValues":false,"trellis":{"flipLabels":false,"showGridLines":true,"size":[100,100],"enable":false,"type":"x","chartsPerLine":4},"columnMap":{"trellis":[],"dimensionAxis":["AcctMgrTargetDstr.Account.Parent.Name"],"plots":["count"]},"showActionMenu":true,"measureAxis2":{"sqrtScale":false,"showTitle":true,"showAxis":true,"title":"","customDomain":{"showDomain":false}},"measureAxis1":{"sqrtScale":false,"showTitle":true,"showAxis":true,"title":"","customDomain":{"showDomain":false}},"valueType":"compactNumber","theme":"wave","compactDecimalDigits":-1,"dimensionAxis":{"showTitle":true,"customSize":"auto","showAxis":true,"title":"","icons":{"useIcons":false,"iconProps":{"fit":"cover","column":"","type":"round"}}},"applyConditionalFormatting":true},"type":"chart"}},"TY_Products_by_Reps_1":{"broadcastFacet":true,"groups":[],"label":"TY Products by Reps","numbers":[],"query":"targets = load \"MFG_AccountManagerPeriodicTargetDistribution\";\ntargets = filter targets by !('AcctMgrTargetDstr.ProductId' is null);targets = filter targets by date('Period.StartDate_Year', 'Period.StartDate_Month', 'Period.StartDate_Day') in [dateRange([{{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.StartDate_Year\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Year\"),1900)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.StartDate_Month\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Month\"),01)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.StartDate_Day\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Day\"),01)).asObject()}}], [{{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.EndDate_Year\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Year\"),3000)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.EndDate_Month\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Month\"),12)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.EndDate_Day\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Day\"),31)).asObject()}}])];  targets = filter targets by date('Period.EndDate_Year', 'Period.EndDate_Month', 'Period.EndDate_Day') in [dateRange([{{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.StartDate_Year\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Year\"),1900)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.StartDate_Month\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Month\"),01)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.StartDate_Day\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Day\"),01)).asObject()}}], [{{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.EndDate_Year\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Year\"),3000)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.EndDate_Month\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Month\"),12)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.EndDate_Day\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Day\"),31)).asObject()}}])]; \ntargets = filter targets by {{column(Team_Members_1.selection, [\"AssignedTo.Id\"]).asEquality(\"AssignedTo.Managers\")}} && ({{column(Team_Members_1.selection, [\"AssignedTo.Id\"]).asEquality(\"AssignedTo.ManagerId\")}} || {{column(Team_Members_1.selection, [\"AssignedTo.Id\"]).asEquality(\"AssignedTo.ForecastRole.ParentRole.ForecastUserId\")}}); targets = filter targets by !({{column(Team_Members_1.selection, [\"AssignedTo.Id\"]).asEquality(\"AssignedTo.Id\")}}); targets = filter targets by {{column(List_of_Main_Goals_1.selection, [\"Self_AcctMgrTarget\"]).asEquality(\"ParentTargetNames\")}}; targets = filter targets by {{column(Target_Period_Split__1.selection, [\"Self_AcctMgrTarget\"]).asEquality(\"ParentTargetNames\")}};\nactuals = load \"MFG_TargetActuals\";actuals = filter actuals by !({{column(Team_Members_1.selection, [\"AssignedTo.Id\"]).asEquality(\"TargetActualsOwner.Id\")}}); actuals = filter actuals by {{column(Team_Members_1.selection, [\"AssignedTo.Id\"]).asEquality(\"TargetActualsOwner_for_filter.Managers\")}}; actuals = filter actuals by 'Order.StatusCode' == \"Activated\"; actuals = filter actuals by date('Order.EffectiveDate_Year', 'Order.EffectiveDate_Month', 'Order.EffectiveDate_Day') in [dateRange([{{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.StartDate_Year\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Year\"),1900)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.StartDate_Month\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Month\"),01)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.StartDate_Day\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Day\"),01)).asObject()}}], [{{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.EndDate_Year\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Year\"),3000)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.EndDate_Month\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Month\"),12)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.EndDate_Day\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Day\"),31)).asObject()}}])];\nresult = group  targets by ('AssignedTo.Id', 'AcctMgrTargetDstr.ProductId') left, actuals by ('TargetActualsOwner.Managers', 'Product2Id');\nresult = foreach result generate targets.'AssignedTo.Id'  as 'AssignedTo.Id', targets.'AcctMgrTargetDstr.ProductId' as 'AcctMgrTargetDstr.ProductId', first(targets.'AssignedTo.Name') as 'AssignedTo.Name', first(targets.'AcctMgrTargetDstr.Product.Name') as 'AcctMgrTargetDstr.Product.Name', coalesce(sum(actuals.'TotalPrice'),0) as 'Actuals', coalesce(sum(actuals.'TotalPrice'),0)/sum(targets.'PeriodTargetCurrencyValue') as 'Attainment';\nresult = group result by ('AssignedTo.Name', 'AcctMgrTargetDstr.Product.Name');\nresult = foreach result generate 'AssignedTo.Name', 'AcctMgrTargetDstr.Product.Name', {{cell(Attaintment___Actual_1.selection, 0, \"Projection\").asObject()}};","receiveFacetSource":{"mode":"exclude","steps":["List_of_Main_Goals_1","Period_Selection_1","TY_Account_level_tar_1","TY_Accounts_by_Rep_1","Account_Targets_Vs_A_1","PY_Targets_by_Accoun_1","PY_Targets_by_Accoun_2","PY_Account_targets_a_1","Parent_Account_Filte_1","Account_Filter_1","Account_Type_Filter_1","Account_Industry_Fil_1","Account_Geo_Filter_1"]},"selectMode":"single","strings":[],"type":"saql","useGlobal":true,"visualizationParameters":{"parameters":{"autoFitMode":"keepLabels","bins":{"breakpoints":{"high":100,"low":0},"bands":{"high":{"color":"#008000","label":""},"low":{"color":"#B22222","label":""},"medium":{"color":"#ffa500","label":""}}},"legend":{"descOrder":false,"showHeader":true,"show":true,"customSize":"auto","position":"right-top","inside":false},"highColor":"#009DDF","tooltip":{"content":{"legend":{"showBinLabel":true,"measures":[],"showNullValues":true,"customizeLegend":false,"showPercentage":true,"showDimensions":true,"showMeasures":true,"dimensions":[]}}},"lowColor":"#E2F4FC","visualizationType":"heatmap","title":{"fontSize":14,"subtitleFontSize":11,"label":"","align":"center","subtitleLabel":""},"binValues":false,"showActionMenu":true,"x":{"showTitle":true,"showAxis":true,"title":""},"y":{"showTitle":true,"showAxis":true,"title":""},"theme":"wave","applyConditionalFormatting":true},"type":"chart"}},"Team_Current_Attainm_1":{"broadcastFacet":true,"groups":[],"label":"Team Current Attainment","numbers":[],"query":"targets = load \"MFG_AccountManagerPeriodicTargetDistribution\"; targets = filter targets by date('Period.StartDate_Year', 'Period.StartDate_Month', 'Period.StartDate_Day') in [dateRange([{{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.StartDate_Year\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Year\"),1900)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.StartDate_Month\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Month\"),01)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.StartDate_Day\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Day\"),01)).asObject()}}], [{{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.EndDate_Year\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Year\"),3000)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.EndDate_Month\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Month\"),12)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.EndDate_Day\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Day\"),31)).asObject()}}])];  targets = filter targets by date('Period.EndDate_Year', 'Period.EndDate_Month', 'Period.EndDate_Day') in [dateRange([{{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.StartDate_Year\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Year\"),1900)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.StartDate_Month\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Month\"),01)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.StartDate_Day\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Day\"),01)).asObject()}}], [{{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.EndDate_Year\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Year\"),3000)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.EndDate_Month\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Month\"),12)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.EndDate_Day\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Day\"),31)).asObject()}}])]; \ntargets = filter targets by 'AcctMgrTargetDstr.ProductId' is null && 'AcctMgrTargetDstr.Account.Id' is null;\ntargets = filter targets by {{column(Team_Members_1.selection, [\"AssignedTo.Id\"]).asEquality(\"AssignedTo.Managers\")}} && ({{column(Team_Members_1.selection, [\"AssignedTo.Id\"]).asEquality(\"AssignedTo.ManagerId\")}} || {{column(Team_Members_1.selection, [\"AssignedTo.Id\"]).asEquality(\"AssignedTo.ForecastRole.ParentRole.ForecastUserId\")}}); targets = filter targets by !({{column(Team_Members_1.selection, [\"AssignedTo.Id\"]).asEquality(\"AssignedTo.Id\")}}); targets = filter targets by {{column(List_of_Main_Goals_1.selection, [\"Self_AcctMgrTarget\"]).asEquality(\"ParentTargetNames\")}}; targets = filter targets by {{column(Target_Period_Split__1.selection, [\"Self_AcctMgrTarget\"]).asEquality(\"ParentTargetNames\")}}; \nactuals = load \"MFG_TargetActuals\";actuals = filter actuals by !({{column(Team_Members_1.selection, [\"AssignedTo.Id\"]).asEquality(\"TargetActualsOwner.Id\")}}); actuals = filter actuals by {{column(Team_Members_1.selection, [\"AssignedTo.Id\"]).asEquality(\"TargetActualsOwner.Managers\")}}; actuals = filter actuals by 'Order.StatusCode' == \"Activated\"; actuals_for_projection = group actuals by ('TargetActualsOwner.Managers', 'Order.EffectiveDate_Year', 'Order.EffectiveDate_Month'); actuals_for_projection = foreach actuals_for_projection generate 'TargetActualsOwner.Managers' as 'TargetActualsOwner.Managers', 'Order.EffectiveDate_Year', 'Order.EffectiveDate_Month', sum('TotalPrice') as 'Total Price'; actuals_for_projection = fill actuals_for_projection by (dateCols=('Order.EffectiveDate_Year','Order.EffectiveDate_Month', \"Y-M\"), partition='TargetActualsOwner.Managers'); actuals_for_projection = timeseries actuals_for_projection generate 'Total Price' as 'Projected Total Price' with (partition='TargetActualsOwner.Managers', length=36, dateCols=('Order.EffectiveDate_Year','Order.EffectiveDate_Month', \"Y-M\"), seasonality = 0, ignoreLast = false); actuals_for_projection = foreach actuals_for_projection generate 'TargetActualsOwner.Managers' as 'TargetActualsOwner.Managers', 'Order.EffectiveDate_Year', 'Order.EffectiveDate_Month', 'Total Price' as 'Total Price', case when 'Total Price' > coalesce('Projected Total Price',0) then 'Total Price' when coalesce('Projected Total Price',0) >= 0 then 'Projected Total Price' else 0 end as 'Projected Total Price', month_last_day(toDate('Order.EffectiveDate_Year'+\"-\"+'Order.EffectiveDate_Month'+\"-27 00:00:00\",\"yyyy-MM-dd HH:mm:ss\")) as 'Month Last Day'; actuals_for_projection = filter actuals_for_projection by 'Month Last Day' > now(); actuals_for_projection = filter actuals_for_projection by toDate('Order.EffectiveDate_Year'+\"-\"+'Order.EffectiveDate_Month'+\"-01 00:00:00\",\"yyyy-MM-dd HH:mm:ss\") >= toDate(\"{{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.StartDate_Year\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Year\"),1900)).asObject()}}\"+\"-\"+\"{{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.StartDate_Month\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Month\"),\"01\")).asObject()}}\"+\"-\"+\"{{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.StartDate_Day\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Day\"),\"01\")).asObject()}}\"+\" 00:00:00\",\"yyyy-MM-dd HH:mm:ss\") && toDate('Order.EffectiveDate_Year'+\"-\"+'Order.EffectiveDate_Month'+\"-01 00:00:00\",\"yyyy-MM-dd HH:mm:ss\") <= toDate(\"{{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.EndDate_Year\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Year\"),3000)).asObject()}}\"+\"-\"+\"{{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.EndDate_Month\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Month\"),12)).asObject()}}\"+\"-\"+\"{{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.EndDate_Day\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Day\"),31)).asObject()}}\"+\" 00:00:00\",\"yyyy-MM-dd HH:mm:ss\"); actuals = filter actuals by date('Order.EffectiveDate_Year', 'Order.EffectiveDate_Month', 'Order.EffectiveDate_Day') in [dateRange([{{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.StartDate_Year\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Year\"),1900)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.StartDate_Month\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Month\"),01)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.StartDate_Day\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Day\"),01)).asObject()}}], [{{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.EndDate_Year\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Year\"),3000)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.EndDate_Month\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Month\"),12)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.EndDate_Day\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Day\"),31)).asObject()}}])]; actuals_for_join = group actuals by ('TargetActualsOwner.Managers', 'Order.EffectiveDate_Year', 'Order.EffectiveDate_Month') full, actuals_for_projection by ('TargetActualsOwner.Managers', 'Order.EffectiveDate_Year', 'Order.EffectiveDate_Month'); actuals_for_join = foreach actuals_for_join generate coalesce(actuals.'TargetActualsOwner.Managers', actuals_for_projection.'TargetActualsOwner.Managers') as 'TargetActualsOwner.Managers', coalesce(actuals.'Order.EffectiveDate_Year',actuals_for_projection.'Order.EffectiveDate_Year') as 'Order.EffectiveDate_Year', coalesce(actuals.'Order.EffectiveDate_Month',actuals_for_projection.'Order.EffectiveDate_Month') as 'Order.EffectiveDate_Month',  sum(actuals_for_projection.'Projected Total Price') as 'Projections', sum(actuals.'TotalPrice') as 'Actuals', coalesce(sum(actuals_for_projection.'Projected Total Price'),sum(actuals.'TotalPrice')) as 'Actuals & Projections'; forecasts = load \"MFG_Targets_AccountProductPeriodForecast\"; forecasts = filter forecasts by !({{column(Team_Members_1.selection, [\"AssignedTo.Id\"]).asEquality(\"Account.Owner.Id\")}}); forecasts = filter forecasts by {{coalesce(column(Targets_Vs_Actuals_f_1.selection, [\"AssignedTo.Id\"]), column(Team_Attainment_1.selection, [\"AssignedTo.Id\"]), column(PY_Team_Attainment_1.selection, [\"AssignedTo.Id\"]), column(PY_Targets_Vs_Actual_1.selection, [\"AssignedTo.Id\"]), column(Team_Members_1.selection, [\"AssignedTo.Id\"])).asEquality(\"TargetsAccount.Owner.Managers\")}}; forecasts = filter forecasts by date('Period.StartDate_Year', 'Period.StartDate_Month', 'Period.StartDate_Day') in [dateRange([{{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.StartDate_Year\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Year\"),1900)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.StartDate_Month\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Month\"),01)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.StartDate_Day\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Day\"),01)).asObject()}}], [{{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.EndDate_Year\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Year\"),3000)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.EndDate_Month\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Month\"),12)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.EndDate_Day\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Day\"),31)).asObject()}}])] || date('Period.EndDate_Year', 'Period.EndDate_Month', 'Period.EndDate_Day') in [dateRange([{{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.StartDate_Year\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Year\"),1900)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.StartDate_Month\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Month\"),01)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.StartDate_Day\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Day\"),01)).asObject()}}], [{{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.EndDate_Year\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Year\"),3000)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.EndDate_Month\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Month\"),12)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.EndDate_Day\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Day\"),31)).asObject()}}])]; forecast_start = foreach forecasts generate 'Id' as 'Id', case when string_to_number('Period.StartDate_Year') > string_to_number(\"{{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.StartDate_Year\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Year\"),1900)).asString()}}\") || ( (string_to_number('Period.StartDate_Year') == string_to_number(\"{{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.StartDate_Year\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Year\"),1900)).asString()}}\")) && (string_to_number('Period.StartDate_Month') > string_to_number(\"{{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.StartDate_Month\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Month\"),01)).asString()}}\"))) then 'Period.StartDate_Year' else \"{{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.StartDate_Year\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Year\"),1900)).asString()}}\" end as 'Date_Year', case when string_to_number('Period.StartDate_Year') > string_to_number(\"{{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.StartDate_Year\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Year\"),1900)).asString()}}\") || ( (string_to_number('Period.StartDate_Year') == string_to_number(\"{{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.StartDate_Year\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Year\"),1900)).asString()}}\")) && (string_to_number('Period.StartDate_Month') > string_to_number(\"{{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.StartDate_Month\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Month\"),01)).asString()}}\"))) then 'Period.StartDate_Month' else \"{{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.StartDate_Month\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Month\"),01)).asString()}}\" end as 'Date_Month', 'ForecastedDailyRevenue' as 'ForecastedDailyRevenue' , date_to_epoch(toDate('Period.StartDate_Year'+\"-\"+'Period.StartDate_Month'+\"-\"+'Period.StartDate_Day',\"yyyy-MM-dd\")) as 'StartDate', date_to_epoch(toDate('Period.EndDate_Year'+\"-\"+'Period.EndDate_Month'+\"-\"+'Period.EndDate_Day',\"yyyy-MM-dd\")) as 'EndDate'; forecast_end = foreach forecasts generate 'Id' as 'Id', case when string_to_number('Period.EndDate_Year') < string_to_number(\"{{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.EndDate_Year\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Year\"),3000)).asString()}}\") || ( (string_to_number('Period.EndDate_Year') == string_to_number(\"{{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.EndDate_Year\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Year\"),3000)).asString()}}\")) && (string_to_number('Period.EndDate_Month') < string_to_number(\"{{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.EndDate_Month\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Month\"),12)).asString()}}\"))) then 'Period.EndDate_Year' else \"{{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.EndDate_Year\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Year\"),3000)).asString()}}\" end as 'Date_Year', case when string_to_number('Period.EndDate_Year') < string_to_number(\"{{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.EndDate_Year\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Year\"),3000)).asString()}}\") || ( (string_to_number('Period.EndDate_Year') == string_to_number(\"{{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.EndDate_Year\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Year\"),3000)).asString()}}\")) && (string_to_number('Period.EndDate_Month') < string_to_number(\"{{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.EndDate_Month\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Month\"),12)).asString()}}\"))) then 'Period.EndDate_Month' else \"{{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.EndDate_Month\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Month\"),12)).asString()}}\" end as 'Date_Month',  'ForecastedDailyRevenue' as 'ForecastedDailyRevenue' , date_to_epoch(toDate('Period.StartDate_Year'+\"-\"+'Period.StartDate_Month'+\"-\"+'Period.StartDate_Day',\"yyyy-MM-dd\")) as 'StartDate', date_to_epoch(toDate('Period.EndDate_Year'+\"-\"+'Period.EndDate_Month'+\"-\"+'Period.EndDate_Day',\"yyyy-MM-dd\")) as 'EndDate'; forecast_for_fill = union forecast_start, forecast_end; forecast_for_fill = group forecast_for_fill by ('Id', 'Date_Year', 'Date_Month'); forecast_for_fill = foreach forecast_for_fill generate 'Id', 'Date_Year', 'Date_Month', first('ForecastedDailyRevenue') as 'ForecastedDailyRevenue', first('StartDate') as 'StartDate', first('EndDate') as 'EndDate'; Forecast_Filled = fill forecast_for_fill by (dateCols=('Date_Year', 'Date_Month', \"Y-M\"), partition='Id'); Forecast_Filled = group Forecast_Filled by ('Id', 'Date_Year', 'Date_Month'); Forecast_Filled = foreach Forecast_Filled generate 'Id', 'Date_Year', 'Date_Month', max(first('ForecastedDailyRevenue')) over ([..0] partition by 'Id' order by ('Date_Year' asc, 'Date_Month' asc)) as 'ForecastedDailyRevenue', max(first('StartDate')) over ([..0] partition by 'Id' order by ('Date_Year' asc, 'Date_Month' asc)) as 'StartDate', max(first('EndDate')) over ([..0] partition by 'Id' order by ('Date_Year' asc, 'Date_Month' asc)) as 'EndDate', date_to_epoch(toDate('Date_Year'+\"-\"+'Date_Month'+\"-01\",\"yyyy-MM-dd\")) as 'Date'; Forecast_Filled = filter Forecast_Filled by 'Date'>='StartDate' && 'Date'<='EndDate'; forecasts = foreach Forecast_Filled generate 'Id' as 'Id', 'Date_Year' as 'Period.EndDate_Year', 'Date_Month' as 'Period.EndDate_Month', month_days(toDate('Date'))*'ForecastedDailyRevenue' as 'ForecastedRevenueFinal'; result = group targets by all full, actuals_for_join by all full, forecasts by all;result = foreach result generate sum(targets.'PeriodTargetCurrencyValue') as 'sum_PeriodTargetCurrencyValue', sum(actuals_for_join.'Actuals') as 'sum_TotalPrice', sum(actuals_for_join.'Actuals')/sum(targets.'PeriodTargetCurrencyValue') as 'Current Attainment', sum(actuals_for_join.'Actuals & Projections') as 'sum_Projected Actuals', sum(actuals_for_join.'Actuals & Projections')/sum(targets.'PeriodTargetCurrencyValue') as 'Projected Attainment', sum(forecasts.'ForecastedRevenueFinal') as 'Forecasted Revenue';","receiveFacetSource":{"mode":"exclude","steps":["List_of_Main_Goals_1","Team_Attainment_1","Targets_Vs_Actuals_f_1","Team_projected_attai_1","PY_Team_Attainment_1","PY_Targets_Vs_Actual_1","TY_Account_level_tar_1","TY_Product_Targets_1","TY_Product_Targets___1","PY_Product_targets_1","Product_Family_Filte_1","Product_Name_Filter_1","PY_Product_targets___1","PY_Targets_by_Produc_1","TY_Products_by_Reps_1","PY_Targets_by_Accoun_1","PY_Targets_by_Accoun_2","TY_Accounts_by_Rep_1","Scatter_plot__of_Current__1","Parent_Account_Filte_1","Account_Filter_1","Account_Type_Filter_1","Account_Industry_Fil_1","Account_Geo_Filter_1"]},"selectMode":"single","strings":[],"type":"saql","useGlobal":true,"visualizationParameters":{"parameters":{"autoFitMode":"keepLabels","bins":{"breakpoints":{"high":100,"low":0},"bands":{"high":{"color":"#008000","label":""},"low":{"color":"#B22222","label":""},"medium":{"color":"#ffa500","label":""}}},"legend":{"descOrder":false,"showHeader":true,"show":true,"customSize":"auto","position":"right-top","inside":false},"axisMode":"multi","tooltip":{"content":{"legend":{"showBinLabel":true,"measures":[],"showNullValues":true,"customizeLegend":false,"showPercentage":true,"showDimensions":true,"showMeasures":true,"dimensions":[]}}},"visualizationType":"hbar","title":{"fontSize":14,"subtitleFontSize":11,"label":"","align":"center","subtitleLabel":""},"binValues":false,"trellis":{"flipLabels":false,"showGridLines":true,"size":[100,100],"enable":false,"type":"x","chartsPerLine":4},"showActionMenu":true,"measureAxis2":{"sqrtScale":false,"showTitle":true,"showAxis":true,"title":"","customDomain":{"showDomain":false}},"measureAxis1":{"sqrtScale":false,"showTitle":true,"showAxis":true,"title":"","customDomain":{"showDomain":false}},"valueType":"compactNumber","theme":"wave","compactDecimalDigits":-1,"dimensionAxis":{"showTitle":true,"customSize":"auto","showAxis":true,"title":"","icons":{"useIcons":false,"iconProps":{"fit":"cover","column":"","type":"round"}}},"applyConditionalFormatting":true},"type":"chart"}},"PY_Targets_by_Accoun_1":{"broadcastFacet":true,"groups":[],"label":"PY Targets by Account","numbers":[],"query":"targets = load \"MFG_AccountManagerPeriodicTargetDistribution\"; CYtargets = filter targets by !('AcctMgrTargetDstr.Account.Id' is null); CYtargets = filter CYtargets by date('Period.StartDate_Year', 'Period.StartDate_Month', 'Period.StartDate_Day') in [dateRange([{{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.StartDate_Year\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Year\"),1900)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.StartDate_Month\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Month\"),01)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.StartDate_Day\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Day\"),01)).asObject()}}], [{{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.EndDate_Year\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Year\"),3000)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.EndDate_Month\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Month\"),12)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.EndDate_Day\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Day\"),31)).asObject()}}])];  CYtargets = filter CYtargets by date('Period.EndDate_Year', 'Period.EndDate_Month', 'Period.EndDate_Day') in [dateRange([{{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.StartDate_Year\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Year\"),1900)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.StartDate_Month\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Month\"),01)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.StartDate_Day\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Day\"),01)).asObject()}}], [{{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.EndDate_Year\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Year\"),3000)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.EndDate_Month\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Month\"),12)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.EndDate_Day\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Day\"),31)).asObject()}}])]; CYtargets = filter CYtargets by {{column(Team_Members_1.selection, [\"AssignedTo.Id\"]).asEquality(\"AssignedTo.Managers\")}} && ({{column(Team_Members_1.selection, [\"AssignedTo.Id\"]).asEquality(\"AssignedTo.ManagerId\")}} || {{column(Team_Members_1.selection, [\"AssignedTo.Id\"]).asEquality(\"AssignedTo.ForecastRole.ParentRole.ForecastUserId\")}}); CYtargets = filter CYtargets by !({{column(Team_Members_1.selection, [\"AssignedTo.Id\"]).asEquality(\"AssignedTo.Id\")}}); CYtargets = filter CYtargets by {{column(List_of_Main_Goals_1.selection, [\"Self_AcctMgrTarget\"]).asEquality(\"ParentTargetNames\")}}; CYtargets = filter CYtargets by {{column(Target_Period_Split__1.selection, [\"Self_AcctMgrTarget\"]).asEquality(\"ParentTargetNames\")}};\nCYstartTargets = foreach CYtargets generate 'Id'+\"@#%\"+'Period.StartDate_Year'+'Period.StartDate_Month'+\"@#%\"+'AcctMgrTargetDstr.Account.Id'+\"!#%\"+'AcctMgrTargetDstr.Account.Name' as 'Id',  'Period.StartDate_Year' as 'Date_Year', 'Period.StartDate_Month' as 'Date_Month', 'MonthlyTargetCurrencyValue' as 'MonthlyTargetCurrencyValue', 'Period.StartDate_sec_epoch' as 'Min Start Sec Epoch', 'Period.EndDate_sec_epoch' as 'Max End Sec Epoch';\nCYendTargets = foreach CYtargets generate 'Id'+\"@#%\"+'Period.StartDate_Year'+'Period.StartDate_Month'+\"@#%\"+'AcctMgrTargetDstr.Account.Id'+\"!#%\"+'AcctMgrTargetDstr.Account.Name' as 'Id',  'Period.EndDate_Year' as 'Date_Year', 'Period.EndDate_Month' as 'Date_Month', 'MonthlyTargetCurrencyValue' as 'MonthlyTargetCurrencyValue', 'Period.StartDate_sec_epoch' as 'Min Start Sec Epoch', 'Period.EndDate_sec_epoch' as 'Max End Sec Epoch';\nCYTargetsForFill = union CYstartTargets, CYendTargets;\nCYTargetsForFill = foreach CYTargetsForFill generate 'Id' as 'Id', 'Date_Year' as 'Date_Year', 'Date_Month' as 'Date_Month', 'MonthlyTargetCurrencyValue' as 'MonthlyTargetCurrencyValue', 'Min Start Sec Epoch' as 'Min Start Sec Epoch', 'Max End Sec Epoch' as 'Max End Sec Epoch';\nCYTargetsFilled = fill CYTargetsForFill by (dateCols=('Date_Year','Date_Month', \"Y-M\"), partition='Id');\nCYTargetsFilled = group CYTargetsFilled by ('Id', 'Date_Year', 'Date_Month');\nCYTargetsFilled = foreach CYTargetsFilled generate substr('Id',1,index_of('Id',\"@#%\",1,1)-1) as 'Id', substr('Id', index_of('Id',\"@#%\",1,2)+3, index_of('Id',\"!#%\") - (index_of('Id',\"@#%\",1,2)+3)) as 'AcctMgrTargetDstr.Account.Id', substr('Id', index_of('Id',\"!#%\")+3) as 'AcctMgrTargetDstr.Account.Name','Date_Year', 'Date_Month', max(sum('MonthlyTargetCurrencyValue')) over([..] partition by 'Id') as 'MonthlyTargetCurrencyValue', max(sum('Min Start Sec Epoch')) over([..] partition by 'Id') as 'Min Start Sec Epoch', max(sum('Max End Sec Epoch')) over([..] partition by 'Id') as 'Max End Sec Epoch';\nCYTargetsFilled = filter CYTargetsFilled by toDate('Date_Year'+\"-\"+'Date_Month'+\"-01 23:59:59\",\"yyyy-MM-dd HH:mm:ss\") >= toDate('Min Start Sec Epoch');\nCYTargetsFilled = filter CYTargetsFilled by toDate('Date_Year'+\"-\"+'Date_Month'+\"-01 00:00:00\",\"yyyy-MM-dd HH:mm:ss\") <= toDate('Max End Sec Epoch'); targets = filter targets by !('AcctMgrTargetDstr.Account.Id' is null); targets = filter targets by date('Period.StartDate_Year', 'Period.StartDate_Month', 'Period.StartDate_Day') in [dateRange([{{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.StartDate_Year\"),1900).asObject()}}, {{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.StartDate_Month\"),01).asObject()}}, {{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.StartDate_Day\"),01).asObject()}}], [{{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.EndDate_Year\"),3000).asObject()}}, {{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.EndDate_Month\"),12).asObject()}}, {{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.EndDate_Day\"),31).asObject()}}])];  targets = filter targets by date('Period.EndDate_Year', 'Period.EndDate_Month', 'Period.EndDate_Day') in [dateRange([{{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.StartDate_Year\"),1900).asObject()}}, {{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.StartDate_Month\"),01).asObject()}}, {{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.StartDate_Day\"),01).asObject()}}], [{{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.EndDate_Year\"),3000).asObject()}}, {{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.EndDate_Month\"),12).asObject()}}, {{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.EndDate_Day\"),31).asObject()}}])]; targets = filter targets by {{column(Team_Members_1.selection, [\"AssignedTo.Id\"]).asEquality(\"AssignedTo.Managers\")}} && ({{column(Team_Members_1.selection, [\"AssignedTo.Id\"]).asEquality(\"AssignedTo.ManagerId\")}} || {{column(Team_Members_1.selection, [\"AssignedTo.Id\"]).asEquality(\"AssignedTo.ForecastRole.ParentRole.ForecastUserId\")}}); targets = filter targets by !({{column(Team_Members_1.selection, [\"AssignedTo.Id\"]).asEquality(\"AssignedTo.Id\")}}); targets = filter targets by {{column(List_of_Main_Goals_1.selection, [\"Self_AcctMgrTarget\"]).asEquality(\"ParentTargetNames\")}}; targets = filter targets by {{column(Target_Period_Split__1.selection, [\"Self_AcctMgrTarget\"]).asEquality(\"ParentTargetNames\")}}; \nstartTargets = foreach targets generate 'Id'+\"@#%\"+'Period.StartDate_Year'+'Period.StartDate_Month'+\"@#%\"+'AcctMgrTargetDstr.Account.Id'+\"!#%\"+'AcctMgrTargetDstr.Account.Name' as 'Id',  'Period.StartDate_Year' as 'Date_Year', 'Period.StartDate_Month' as 'Date_Month', 'MonthlyTargetCurrencyValue' as 'MonthlyTargetCurrencyValue', 'Period.StartDate_sec_epoch' as 'Min Start Sec Epoch', 'Period.EndDate_sec_epoch' as 'Max End Sec Epoch';\nendTargets = foreach targets generate 'Id'+\"@#%\"+'Period.StartDate_Year'+'Period.StartDate_Month'+\"@#%\"+'AcctMgrTargetDstr.Account.Id'+\"!#%\"+'AcctMgrTargetDstr.Account.Name' as 'Id',  'Period.EndDate_Year' as 'Date_Year', 'Period.EndDate_Month' as 'Date_Month', 'MonthlyTargetCurrencyValue' as 'MonthlyTargetCurrencyValue', 'Period.StartDate_sec_epoch' as 'Min Start Sec Epoch', 'Period.EndDate_sec_epoch' as 'Max End Sec Epoch';\nTargetsForFill = union startTargets, endTargets;\nTargetsForFill = foreach TargetsForFill generate 'Id' as 'Id', 'Date_Year' as 'Date_Year', 'Date_Month' as 'Date_Month', 'MonthlyTargetCurrencyValue' as 'MonthlyTargetCurrencyValue', 'Min Start Sec Epoch' as 'Min Start Sec Epoch', 'Max End Sec Epoch' as 'Max End Sec Epoch';\nTargetsFilled = fill TargetsForFill by (dateCols=('Date_Year','Date_Month', \"Y-M\"), partition='Id');\nTargetsFilled = group TargetsFilled by ('Id', 'Date_Year', 'Date_Month');\nTargetsFilled = foreach TargetsFilled generate substr('Id',1,index_of('Id',\"@#%\",1,1)-1) as 'Id', substr('Id', index_of('Id',\"@#%\",1,2)+3, index_of('Id',\"!#%\") - (index_of('Id',\"@#%\",1,2)+3)) as 'AcctMgrTargetDstr.Account.Id', substr('Id', index_of('Id',\"!#%\")+3) as 'AcctMgrTargetDstr.Account.Name','Date_Year', 'Date_Month', max(sum('MonthlyTargetCurrencyValue')) over([..] partition by 'Id') as 'MonthlyTargetCurrencyValue', max(sum('Min Start Sec Epoch')) over([..] partition by 'Id') as 'Min Start Sec Epoch', max(sum('Max End Sec Epoch')) over([..] partition by 'Id') as 'Max End Sec Epoch';\nTargetsFilled = filter TargetsFilled by toDate('Date_Year'+\"-\"+'Date_Month'+\"-01 23:59:59\",\"yyyy-MM-dd HH:mm:ss\") >= toDate('Min Start Sec Epoch');\nTargetsFilled = filter TargetsFilled by toDate('Date_Year'+\"-\"+'Date_Month'+\"-01 00:00:00\",\"yyyy-MM-dd HH:mm:ss\") <= toDate('Max End Sec Epoch');\n\nactuals = load \"MFG_TargetActuals\"; actuals = filter actuals by !({{column(Team_Members_1.selection, [\"AssignedTo.Id\"]).asEquality(\"TargetActualsOwner.Id\")}}); actuals = filter actuals by {{coalesce(column(Targets_Vs_Actuals_f_1.selection, [\"AssignedTo.Id\"]), column(Team_Attainment_1.selection, [\"AssignedTo.Id\"]), column(PY_Team_Attainment_1.selection, [\"AssignedTo.Id\"]), column(PY_Targets_Vs_Actual_1.selection, [\"AssignedTo.Id\"]), column(Team_Members_1.selection, [\"AssignedTo.Id\"])).asEquality(\"TargetActualsOwner_for_filter.Managers\")}}; \nactuals = filter actuals by 'Order.StatusCode' == \"Activated\";\nactuals_for_projection = group actuals by ('Order.Account.Id', 'Order.EffectiveDate_Year', 'Order.EffectiveDate_Month');\nactuals_for_projection = foreach actuals_for_projection generate 'Order.Account.Id' as 'Order.Account.Id', 'Order.EffectiveDate_Year', 'Order.EffectiveDate_Month', sum('TotalPrice') as 'Total Price';\nactuals_for_projection = fill actuals_for_projection by (dateCols=('Order.EffectiveDate_Year','Order.EffectiveDate_Month', \"Y-M\"), partition='Order.Account.Id');\nactuals_for_projection = timeseries actuals_for_projection generate 'Total Price' as 'Projected Total Price' with (partition='Order.Account.Id', length=36, dateCols=('Order.EffectiveDate_Year','Order.EffectiveDate_Month', \"Y-M\"), seasonality = 0, ignoreLast = false);\nactuals_for_projection = foreach actuals_for_projection generate 'Order.Account.Id' as 'Order.Account.Id', 'Order.EffectiveDate_Year', 'Order.EffectiveDate_Month', 'Total Price' as 'Total Price', case when 'Total Price' > coalesce('Projected Total Price',0) then 'Total Price' when coalesce('Projected Total Price',0) >= 0 then 'Projected Total Price' else 0 end as 'Projected Total Price', month_last_day(toDate('Order.EffectiveDate_Year'+\"-\"+'Order.EffectiveDate_Month'+\"-27 00:00:00\",\"yyyy-MM-dd HH:mm:ss\")) as 'Month Last Day'; actuals_for_projection = filter actuals_for_projection by 'Month Last Day' > now(); actuals_for_projection = filter actuals_for_projection by toDate('Order.EffectiveDate_Year'+\"-\"+'Order.EffectiveDate_Month'+\"-01 00:00:00\",\"yyyy-MM-dd HH:mm:ss\") >= toDate(\"{{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.StartDate_Year\"),1900).asObject()}}\"+\"-\"+\"{{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.StartDate_Month\"),\"01\").asObject()}}\"+\"-\"+\"{{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.StartDate_Day\"),\"01\").asObject()}}\"+\" 00:00:00\",\"yyyy-MM-dd HH:mm:ss\") && toDate('Order.EffectiveDate_Year'+\"-\"+'Order.EffectiveDate_Month'+\"-01 00:00:00\",\"yyyy-MM-dd HH:mm:ss\") <= toDate(\"{{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.EndDate_Year\"),3000).asObject()}}\"+\"-\"+\"{{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.EndDate_Month\"),12).asObject()}}\"+\"-\"+\"{{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.EndDate_Day\"),31).asObject()}}\"+\" 00:00:00\",\"yyyy-MM-dd HH:mm:ss\"); actuals = filter actuals by date('Order.EffectiveDate_Year', 'Order.EffectiveDate_Month', 'Order.EffectiveDate_Day') in [dateRange([{{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.StartDate_Year\"),1900).asObject()}}, {{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.StartDate_Month\"),01).asObject()}}, {{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.StartDate_Day\"),01).asObject()}}], [{{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.EndDate_Year\"),3000).asObject()}}, {{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.EndDate_Month\"),12).asObject()}}, {{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.EndDate_Day\"),31).asObject()}}])]; \nactuals_for_join = group actuals by ('Order.Account.Id', 'Order.EffectiveDate_Year', 'Order.EffectiveDate_Month') full, \nactuals_for_projection by ('Order.Account.Id', 'Order.EffectiveDate_Year', 'Order.EffectiveDate_Month');\nactuals_for_join = foreach actuals_for_join generate coalesce(actuals.'Order.Account.Id', actuals_for_projection.'Order.Account.Id') as 'Order.Account.Id', coalesce(actuals.'Order.EffectiveDate_Year',actuals_for_projection.'Order.EffectiveDate_Year') as 'Order.EffectiveDate_Year', coalesce(actuals.'Order.EffectiveDate_Month',actuals_for_projection.'Order.EffectiveDate_Month') as 'Order.EffectiveDate_Month',  sum(actuals_for_projection.'Projected Total Price') as 'Projections', sum(actuals.'TotalPrice') as 'Actuals', coalesce(sum(actuals_for_projection.'Projected Total Price'),sum(actuals.'TotalPrice')) as 'Actuals & Projection';\n\nresult = group CYTargetsFilled by ('AcctMgrTargetDstr.Account.Id') left, TargetsFilled by ('AcctMgrTargetDstr.Account.Id') left,  actuals_for_join by ('Order.Account.Id');\nresult = foreach result generate CYTargetsFilled.'AcctMgrTargetDstr.Account.Id' as 'AcctMgrTargetDstr.Account.Id', first(CYTargetsFilled.'AcctMgrTargetDstr.Account.Name') as 'AcctMgrTargetDstr.Account.Name', sum(CYTargetsFilled.'MonthlyTargetCurrencyValue') as 'TY Target Revenue', sum(TargetsFilled.'MonthlyTargetCurrencyValue') as 'PY Target Revenue', (sum(CYTargetsFilled.'MonthlyTargetCurrencyValue') - sum(TargetsFilled.'MonthlyTargetCurrencyValue'))/sum(TargetsFilled.'MonthlyTargetCurrencyValue') as 'Change from PY', coalesce(sum(actuals_for_join.'Actuals'),0) as 'PY Actual Revenue', coalesce(sum(actuals_for_join.'Actuals'),0)/sum(TargetsFilled.'MonthlyTargetCurrencyValue') as 'PY Attainment';","receiveFacetSource":{"mode":"exclude","steps":["List_of_Main_Goals_1","Period_Selection_1","Product_Name_Filter_1","PY_Product_targets_1","PY_Product_targets___1","PY_Targets_by_Produc_1","PY_Product_targets_a_1","TY_Product_Targets_1","TY_Product_Targets___1","TY_Products_by_Reps_1","TY_Product_Targets_V_1","Product_Family_Filte_1"]},"selectMode":"single","strings":[],"type":"saql","useGlobal":true,"visualizationParameters":{"parameters":{"autoFitMode":"keepLabels","bins":{"breakpoints":{"high":100,"low":0},"bands":{"high":{"color":"#008000","label":""},"low":{"color":"#B22222","label":""},"medium":{"color":"#ffa500","label":""}}},"legend":{"descOrder":false,"showHeader":true,"show":true,"customSize":"auto","position":"right-top","inside":false},"axisMode":"sync","tooltip":{"content":{"legend":{"showBinLabel":true,"measures":[],"showNullValues":true,"customizeLegend":false,"showPercentage":true,"showDimensions":true,"showMeasures":true,"dimensions":[]}}},"visualizationType":"hbar","title":{"fontSize":14,"subtitleFontSize":11,"label":"","align":"center","subtitleLabel":""},"binValues":false,"trellis":{"flipLabels":false,"showGridLines":true,"size":[100,100],"enable":false,"type":"x","chartsPerLine":4},"columnMap":{"trellis":[],"dimensionAxis":["AcctMgrTargetDstr.Account.Name"],"plots":["TY Target Revenue","PY Target Revenue","Change from PY","PY Actual Revenue","PY Attainment"]},"showActionMenu":true,"measureAxis2":{"sqrtScale":false,"showTitle":true,"showAxis":true,"title":"","customDomain":{"showDomain":false}},"measureAxis1":{"sqrtScale":false,"showTitle":true,"showAxis":true,"title":"","customDomain":{"showDomain":false}},"valueType":"compactNumber","theme":"wave","compactDecimalDigits":-1,"dimensionAxis":{"showTitle":true,"customSize":"auto","showAxis":true,"title":"","icons":{"useIcons":false,"iconProps":{"fit":"cover","column":"","type":"round"}}},"applyConditionalFormatting":true},"type":"chart"}},"PY_Targets_by_Accoun_2":{"broadcastFacet":true,"groups":[],"label":"PY Targets by Accounts And Reps","numbers":[],"query":"targets = load \"MFG_AccountManagerPeriodicTargetDistribution\"; targets = filter targets by !('AcctMgrTargetDstr.Account.Id' is null); targets = filter targets by date('Period.StartDate_Year', 'Period.StartDate_Month', 'Period.StartDate_Day') in [dateRange([{{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.StartDate_Year\"),1900).asObject()}}, {{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.StartDate_Month\"),01).asObject()}}, {{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.StartDate_Day\"),01).asObject()}}], [{{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.EndDate_Year\"),3000).asObject()}}, {{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.EndDate_Month\"),12).asObject()}}, {{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.EndDate_Day\"),31).asObject()}}])];  targets = filter targets by date('Period.EndDate_Year', 'Period.EndDate_Month', 'Period.EndDate_Day') in [dateRange([{{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.StartDate_Year\"),1900).asObject()}}, {{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.StartDate_Month\"),01).asObject()}}, {{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.StartDate_Day\"),01).asObject()}}], [{{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.EndDate_Year\"),3000).asObject()}}, {{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.EndDate_Month\"),12).asObject()}}, {{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.EndDate_Day\"),31).asObject()}}])]; targets = filter targets by {{column(Team_Members_1.selection, [\"AssignedTo.Id\"]).asEquality(\"AssignedTo.Managers\")}} && ({{column(Team_Members_1.selection, [\"AssignedTo.Id\"]).asEquality(\"AssignedTo.ManagerId\")}} || {{column(Team_Members_1.selection, [\"AssignedTo.Id\"]).asEquality(\"AssignedTo.ForecastRole.ParentRole.ForecastUserId\")}}); targets = filter targets by !({{column(Team_Members_1.selection, [\"AssignedTo.Id\"]).asEquality(\"AssignedTo.Id\")}}); targets = filter targets by {{column(List_of_Main_Goals_1.selection, [\"Self_AcctMgrTarget\"]).asEquality(\"ParentTargetNames\")}}; targets = filter targets by {{column(Target_Period_Split__1.selection, [\"Self_AcctMgrTarget\"]).asEquality(\"ParentTargetNames\")}}; \ntargets = group targets by ('AssignedTo.Name', 'AcctMgrTargetDstr.Account.Name');\ntargets = foreach targets generate 'AssignedTo.Name' as 'AssignedTo.Name', 'AcctMgrTargetDstr.Account.Name' as 'AcctMgrTargetDstr.Account.Name', sum('PeriodTargetCurrencyValue') as 'sum_PeriodTargetCurrencyValue';\ntargets = order targets by ('AssignedTo.Name' asc, 'AcctMgrTargetDstr.Account.Name' asc);","receiveFacetSource":{"mode":"exclude","steps":["List_of_Main_Goals_1","Period_Selection_1","Product_Name_Filter_1","PY_Product_targets_1","PY_Product_targets___1","PY_Targets_by_Produc_1","PY_Product_targets_a_1","TY_Product_Targets_1","TY_Product_Targets___1","TY_Products_by_Reps_1","TY_Product_Targets_V_1","Product_Family_Filte_1"]},"selectMode":"single","strings":[],"type":"saql","useGlobal":true,"visualizationParameters":{"parameters":{"autoFitMode":"keepLabels","legend":{"descOrder":false,"showHeader":true,"show":true,"customSize":"auto","position":"right-top","inside":false},"axisMode":"multi","totalSumMode":"none","tooltip":{"content":{"legend":{"showBinLabel":true,"measures":[],"showNullValues":true,"customizeLegend":false,"showPercentage":true,"showDimensions":true,"showMeasures":true,"dimensions":[]}}},"visualizationType":"stackhbar","title":{"fontSize":14,"subtitleFontSize":11,"label":"","align":"center","subtitleLabel":""},"trellis":{"flipLabels":false,"showGridLines":true,"size":[100,100],"enable":false,"type":"x","chartsPerLine":4},"columnMap":{"split":["AcctMgrTargetDstr.Account.Name"],"trellis":[],"dimensionAxis":["AssignedTo.Name"],"plots":["sum_PeriodTargetCurrencyValue"]},"showActionMenu":true,"measureAxis2":{"sqrtScale":false,"showTitle":true,"showAxis":true,"title":"","customDomain":{"showDomain":false}},"measureAxis1":{"sqrtScale":false,"showTitle":true,"showAxis":true,"title":"","customDomain":{"showDomain":false}},"normalize":false,"valueType":"compactNumber","theme":"wave","compactDecimalDigits":-1,"dimensionAxis":{"showTitle":true,"customSize":"auto","showAxis":true,"title":"","icons":{"useIcons":false,"iconProps":{"fit":"cover","column":"","type":"round"}}},"applyConditionalFormatting":true},"type":"chart"}},"TY_Account_level_tar_1":{"broadcastFacet":true,"groups":[],"label":"TY Account level targets","numbers":[],"query":"targets = load \"MFG_AccountManagerPeriodicTargetDistribution\";\ntargets = filter targets by !('AcctMgrTargetDstr.Account.Id' is null);targets = filter targets by date('Period.StartDate_Year', 'Period.StartDate_Month', 'Period.StartDate_Day') in [dateRange([{{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.StartDate_Year\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Year\"),1900)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.StartDate_Month\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Month\"),01)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.StartDate_Day\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Day\"),01)).asObject()}}], [{{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.EndDate_Year\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Year\"),3000)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.EndDate_Month\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Month\"),12)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.EndDate_Day\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Day\"),31)).asObject()}}])];  targets = filter targets by date('Period.EndDate_Year', 'Period.EndDate_Month', 'Period.EndDate_Day') in [dateRange([{{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.StartDate_Year\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Year\"),1900)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.StartDate_Month\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Month\"),01)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.StartDate_Day\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Day\"),01)).asObject()}}], [{{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.EndDate_Year\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Year\"),3000)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.EndDate_Month\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Month\"),12)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.EndDate_Day\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Day\"),31)).asObject()}}])]; \ntargets = filter targets by {{column(Team_Members_1.selection, [\"AssignedTo.Id\"]).asEquality(\"AssignedTo.Managers\")}} && ({{column(Team_Members_1.selection, [\"AssignedTo.Id\"]).asEquality(\"AssignedTo.ManagerId\")}} || {{column(Team_Members_1.selection, [\"AssignedTo.Id\"]).asEquality(\"AssignedTo.ForecastRole.ParentRole.ForecastUserId\")}}); targets = filter targets by !({{column(Team_Members_1.selection, [\"AssignedTo.Id\"]).asEquality(\"AssignedTo.Id\")}}); targets = filter targets by {{column(List_of_Main_Goals_1.selection, [\"Self_AcctMgrTarget\"]).asEquality(\"ParentTargetNames\")}}; targets = filter targets by {{column(Target_Period_Split__1.selection, [\"Self_AcctMgrTarget\"]).asEquality(\"ParentTargetNames\")}};\n\n\nstartTargets = foreach targets generate 'Id'+\"@#%\"+'Period.StartDate_Year'+'Period.StartDate_Month'+\"@#%\"+'AcctMgrTargetDstr.Account.Id'+\"!#%\"+'AcctMgrTargetDstr.Account.Name' as 'Id',  'Period.StartDate_Year' as 'Date_Year', 'Period.StartDate_Month' as 'Date_Month', 'MonthlyTargetCurrencyValue' as 'MonthlyTargetCurrencyValue', 'Period.StartDate_sec_epoch' as 'Min Start Sec Epoch', 'Period.EndDate_sec_epoch' as 'Max End Sec Epoch';\nendTargets = foreach targets generate 'Id'+\"@#%\"+'Period.StartDate_Year'+'Period.StartDate_Month'+\"@#%\"+'AcctMgrTargetDstr.Account.Id'+\"!#%\"+'AcctMgrTargetDstr.Account.Name' as 'Id',  'Period.EndDate_Year' as 'Date_Year', 'Period.EndDate_Month' as 'Date_Month', 'MonthlyTargetCurrencyValue' as 'MonthlyTargetCurrencyValue', 'Period.StartDate_sec_epoch' as 'Min Start Sec Epoch', 'Period.EndDate_sec_epoch' as 'Max End Sec Epoch';\nTargetsForFill = union startTargets, endTargets;\nTargetsForFill = foreach TargetsForFill generate 'Id' as 'Id', 'Date_Year' as 'Date_Year', 'Date_Month' as 'Date_Month', 'MonthlyTargetCurrencyValue' as 'MonthlyTargetCurrencyValue', 'Min Start Sec Epoch' as 'Min Start Sec Epoch', 'Max End Sec Epoch' as 'Max End Sec Epoch';\nTargetsFilled = fill TargetsForFill by (dateCols=('Date_Year','Date_Month', \"Y-M\"), partition='Id');\nTargetsFilled = group TargetsFilled by ('Id', 'Date_Year', 'Date_Month');\n\nTargetsFilled = foreach TargetsFilled generate substr('Id',1,index_of('Id',\"@#%\",1,1)-1) as 'Id', substr('Id', index_of('Id',\"@#%\",1,2)+3, index_of('Id',\"!#%\") - (index_of('Id',\"@#%\",1,2)+3)) as 'AcctMgrTargetDstr.Account.Id', substr('Id', index_of('Id',\"!#%\")+3) as 'AcctMgrTargetDstr.Account.Name','Date_Year', 'Date_Month', max(sum('MonthlyTargetCurrencyValue')) over([..] partition by 'Id') as 'MonthlyTargetCurrencyValue', max(sum('Min Start Sec Epoch')) over([..] partition by 'Id') as 'Min Start Sec Epoch', max(sum('Max End Sec Epoch')) over([..] partition by 'Id') as 'Max End Sec Epoch';\nTargetsFilled = filter TargetsFilled by toDate('Date_Year'+\"-\"+'Date_Month'+\"-01 23:59:59\",\"yyyy-MM-dd HH:mm:ss\") >= toDate('Min Start Sec Epoch');\nTargetsFilled = filter TargetsFilled by toDate('Date_Year'+\"-\"+'Date_Month'+\"-01 00:00:00\",\"yyyy-MM-dd HH:mm:ss\") <= toDate('Max End Sec Epoch');\n\nactuals = load \"MFG_TargetActuals\";actuals = filter actuals by !({{column(Team_Members_1.selection, [\"AssignedTo.Id\"]).asEquality(\"TargetActualsOwner.Id\")}}); actuals = filter actuals by {{column(Team_Members_1.selection, [\"AssignedTo.Id\"]).asEquality(\"TargetActualsOwner.Managers\")}}; actuals = filter actuals by 'Order.StatusCode' == \"Activated\"; \nactuals_for_projection = group actuals by ('Order.Account.Id', 'Order.EffectiveDate_Year', 'Order.EffectiveDate_Month');\nactuals_for_projection = foreach actuals_for_projection generate 'Order.Account.Id' as 'Order.Account.Id', 'Order.EffectiveDate_Year', 'Order.EffectiveDate_Month', sum('TotalPrice') as 'Total Price';\nactuals_for_projection = fill actuals_for_projection by (dateCols=('Order.EffectiveDate_Year','Order.EffectiveDate_Month', \"Y-M\"), partition='Order.Account.Id');\nactuals_for_projection = timeseries actuals_for_projection generate 'Total Price' as 'Projected Total Price' with (partition='Order.Account.Id', length=36, dateCols=('Order.EffectiveDate_Year','Order.EffectiveDate_Month', \"Y-M\"), seasonality = 0, ignoreLast = false);\nactuals_for_projection = foreach actuals_for_projection generate 'Order.Account.Id' as 'Order.Account.Id', 'Order.EffectiveDate_Year', 'Order.EffectiveDate_Month', 'Total Price' as 'Total Price', case when 'Total Price' > coalesce('Projected Total Price',0) then 'Total Price' when coalesce('Projected Total Price',0) >= 0 then 'Projected Total Price' else 0 end as 'Projected Total Price', month_last_day(toDate('Order.EffectiveDate_Year'+\"-\"+'Order.EffectiveDate_Month'+\"-27 00:00:00\",\"yyyy-MM-dd HH:mm:ss\")) as 'Month Last Day'; actuals_for_projection = filter actuals_for_projection by 'Month Last Day' > now(); actuals_for_projection = filter actuals_for_projection by toDate('Order.EffectiveDate_Year'+\"-\"+'Order.EffectiveDate_Month'+\"-01 00:00:00\",\"yyyy-MM-dd HH:mm:ss\") >= toDate(\"{{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.StartDate_Year\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Year\"),1900)).asObject()}}\"+\"-\"+\"{{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.StartDate_Month\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Month\"),\"01\")).asObject()}}\"+\"-\"+\"{{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.StartDate_Day\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Day\"),\"01\")).asObject()}}\"+\" 00:00:00\",\"yyyy-MM-dd HH:mm:ss\") && toDate('Order.EffectiveDate_Year'+\"-\"+'Order.EffectiveDate_Month'+\"-01 00:00:00\",\"yyyy-MM-dd HH:mm:ss\") <= toDate(\"{{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.EndDate_Year\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Year\"),3000)).asObject()}}\"+\"-\"+\"{{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.EndDate_Month\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Month\"),12)).asObject()}}\"+\"-\"+\"{{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.EndDate_Day\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Day\"),31)).asObject()}}\"+\" 00:00:00\",\"yyyy-MM-dd HH:mm:ss\"); actuals = filter actuals by date('Order.EffectiveDate_Year', 'Order.EffectiveDate_Month', 'Order.EffectiveDate_Day') in [dateRange([{{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.StartDate_Year\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Year\"),1900)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.StartDate_Month\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Month\"),01)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.StartDate_Day\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Day\"),01)).asObject()}}], [{{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.EndDate_Year\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Year\"),3000)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.EndDate_Month\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Month\"),12)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.EndDate_Day\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Day\"),31)).asObject()}}])];\nactuals_for_join = group actuals by ('Order.Account.Id', 'Order.EffectiveDate_Year', 'Order.EffectiveDate_Month') full, \nactuals_for_projection by ('Order.Account.Id', 'Order.EffectiveDate_Year', 'Order.EffectiveDate_Month');\nactuals_for_join = foreach actuals_for_join generate coalesce(actuals.'Order.Account.Id', actuals_for_projection.'Order.Account.Id') as 'Order.Account.Id', coalesce(actuals.'Order.EffectiveDate_Year',actuals_for_projection.'Order.EffectiveDate_Year') as 'Order.EffectiveDate_Year', coalesce(actuals.'Order.EffectiveDate_Month',actuals_for_projection.'Order.EffectiveDate_Month') as 'Order.EffectiveDate_Month',  sum(actuals_for_projection.'Projected Total Price') as 'Projections', sum(actuals.'TotalPrice') as 'Actuals', coalesce(sum(actuals_for_projection.'Projected Total Price'),sum(actuals.'TotalPrice')) as 'Actuals & Projection';\n\nresult = group TargetsFilled by ('AcctMgrTargetDstr.Account.Id') left, actuals_for_join by ('Order.Account.Id');\nresult = foreach result generate TargetsFilled.'AcctMgrTargetDstr.Account.Id' as 'AcctMgrTargetDstr.Account.Id', first(TargetsFilled.'AcctMgrTargetDstr.Account.Name') as 'AcctMgrTargetDstr.Account.Name', sum(TargetsFilled.'MonthlyTargetCurrencyValue') as 'Target Revenue', coalesce(sum(actuals_for_join.'Actuals'),0) as 'Actual Revenue', coalesce(sum(actuals_for_join.'Actuals'),0)/sum(TargetsFilled.'MonthlyTargetCurrencyValue') as 'Current Attainment', coalesce(sum(actuals_for_join.'Actuals & Projection'),0) as 'Projected Revenue', coalesce(sum(actuals_for_join.'Actuals & Projection'),0)/sum(TargetsFilled.'MonthlyTargetCurrencyValue') as 'Projected Attainment';","receiveFacetSource":{"mode":"exclude","steps":["List_of_Main_Goals_1","Period_Selection_1","Product_Name_Filter_1","PY_Product_targets_1","PY_Product_targets___1","PY_Targets_by_Produc_1","PY_Product_targets_a_1","TY_Product_Targets_1","TY_Product_Targets___1","TY_Products_by_Reps_1","TY_Product_Targets_V_1","Product_Family_Filte_1"]},"selectMode":"single","strings":[],"type":"saql","useGlobal":true,"visualizationParameters":{"parameters":{"autoFitMode":"keepLabels","bins":{"breakpoints":{"high":100,"low":0},"bands":{"high":{"color":"#008000","label":""},"low":{"color":"#B22222","label":""},"medium":{"color":"#ffa500","label":""}}},"legend":{"descOrder":false,"showHeader":true,"show":true,"customSize":"auto","position":"right-top","inside":false},"axisMode":"multi","tooltip":{"content":{"legend":{"showBinLabel":true,"measures":[],"showNullValues":true,"customizeLegend":false,"showPercentage":true,"showDimensions":true,"showMeasures":true,"dimensions":[]}}},"visualizationType":"hbar","title":{"fontSize":14,"subtitleFontSize":11,"label":"","align":"center","subtitleLabel":""},"binValues":false,"trellis":{"flipLabels":false,"showGridLines":true,"size":[100,100],"enable":false,"type":"x","chartsPerLine":4},"columnMap":{"trellis":[],"dimensionAxis":["AcctMgrTargetDstr.Account.Name"],"plots":["Target Revenue","Actual Revenue","Current Attainment","Projected Revenue","Projected Attainment"]},"showActionMenu":true,"measureAxis2":{"sqrtScale":false,"showTitle":true,"showAxis":true,"title":"","customDomain":{"showDomain":false}},"measureAxis1":{"sqrtScale":false,"showTitle":true,"showAxis":true,"title":"","customDomain":{"showDomain":false}},"valueType":"compactNumber","theme":"wave","compactDecimalDigits":-1,"dimensionAxis":{"showTitle":true,"customSize":"auto","showAxis":true,"title":"","icons":{"useIcons":false,"iconProps":{"fit":"cover","column":"","type":"round"}}},"applyConditionalFormatting":true},"type":"chart"}},"PY_Team_projected_at_1":{"broadcastFacet":true,"groups":["AssignedTo.Id"],"label":"PY Team projected attainment by team members","numbers":["Projected Attainment"," ","  "],"query":"targets = load \"MFG_AccountManagerPeriodicTargetDistribution\";targets = filter targets by date('Period.StartDate_Year', 'Period.StartDate_Month', 'Period.StartDate_Day') in [dateRange([{{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.StartDate_Year\"),1900).asObject()}}, {{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.StartDate_Month\"),01).asObject()}}, {{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.StartDate_Day\"),01).asObject()}}], [{{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.EndDate_Year\"),3000).asObject()}}, {{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.EndDate_Month\"),12).asObject()}}, {{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.EndDate_Day\"),31).asObject()}}])];  targets = filter targets by date('Period.EndDate_Year', 'Period.EndDate_Month', 'Period.EndDate_Day') in [dateRange([{{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.StartDate_Year\"),1900).asObject()}}, {{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.StartDate_Month\"),01).asObject()}}, {{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.StartDate_Day\"),01).asObject()}}], [{{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.EndDate_Year\"),3000).asObject()}}, {{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.EndDate_Month\"),12).asObject()}}, {{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.EndDate_Day\"),31).asObject()}}])]; \ntargets = filter targets by 'AcctMgrTargetDstr.ProductId' is null && 'AcctMgrTargetDstr.Account.Id' is null; targets = filter targets by {{column(Team_Members_1.selection, [\"AssignedTo.Id\"]).asEquality(\"AssignedTo.Managers\")}} && ({{column(Team_Members_1.selection, [\"AssignedTo.Id\"]).asEquality(\"AssignedTo.ManagerId\")}} || {{column(Team_Members_1.selection, [\"AssignedTo.Id\"]).asEquality(\"AssignedTo.ForecastRole.ParentRole.ForecastUserId\")}}); targets = filter targets by !({{column(Team_Members_1.selection, [\"AssignedTo.Id\"]).asEquality(\"AssignedTo.Id\")}}); targets = filter targets by {{column(List_of_Main_Goals_1.selection, [\"Self_AcctMgrTarget\"]).asEquality(\"ParentTargetNames\")}}; targets = filter targets by {{column(Target_Period_Split__1.selection, [\"Self_AcctMgrTarget\"]).asEquality(\"ParentTargetNames\")}};\n\nstartTargets = foreach targets generate 'Id'+\"@#%\"+'Period.StartDate_Year'+'Period.StartDate_Month'+\"@#%\"+'AssignedTo.Id'+\"!#%\"+'AssignedTo.Name' as 'Id',  'Period.StartDate_Year' as 'Date_Year', 'Period.StartDate_Month' as 'Date_Month', 'MonthlyTargetCurrencyValue' as 'MonthlyTargetCurrencyValue', 'Period.StartDate_sec_epoch' as 'Min Start Sec Epoch', 'Period.EndDate_sec_epoch' as 'Max End Sec Epoch';\nendTargets = foreach targets generate 'Id'+\"@#%\"+'Period.StartDate_Year'+'Period.StartDate_Month'+\"@#%\"+'AssignedTo.Id'+\"!#%\"+'AssignedTo.Name' as 'Id',  'Period.EndDate_Year' as 'Date_Year', 'Period.EndDate_Month' as 'Date_Month', 'MonthlyTargetCurrencyValue' as 'MonthlyTargetCurrencyValue', 'Period.StartDate_sec_epoch' as 'Min Start Sec Epoch', 'Period.EndDate_sec_epoch' as 'Max End Sec Epoch';\nTargetsForFill = union startTargets, endTargets;\nTargetsForFill = foreach TargetsForFill generate 'Id' as 'Id', 'Date_Year' as 'Date_Year', 'Date_Month' as 'Date_Month', 'MonthlyTargetCurrencyValue' as 'MonthlyTargetCurrencyValue', 'Min Start Sec Epoch' as 'Min Start Sec Epoch', 'Max End Sec Epoch' as 'Max End Sec Epoch';TargetsFilled = fill TargetsForFill by (dateCols=('Date_Year','Date_Month', \"Y-M\"), partition='Id');\nTargetsFilled = group TargetsFilled by ('Id', 'Date_Year', 'Date_Month');\n\nTargetsFilled = foreach TargetsFilled generate substr('Id',1,index_of('Id',\"@#%\",1,1)-1) as 'Id', substr('Id', index_of('Id',\"@#%\",1,2)+3, index_of('Id',\"!#%\") - (index_of('Id',\"@#%\",1,2)+3)) as 'AssignedTo.Id', substr('Id', index_of('Id',\"!#%\")+3) as 'AssignedTo.Name','Date_Year', 'Date_Month', max(sum('MonthlyTargetCurrencyValue')) over([..] partition by 'Id') as 'MonthlyTargetCurrencyValue', max(sum('Min Start Sec Epoch')) over([..] partition by 'Id') as 'Min Start Sec Epoch', max(sum('Max End Sec Epoch')) over([..] partition by 'Id') as 'Max End Sec Epoch';\nTargetsFilled = filter TargetsFilled by toDate('Date_Year'+\"-\"+'Date_Month'+\"-01 23:59:59\",\"yyyy-MM-dd HH:mm:ss\") >= toDate('Min Start Sec Epoch');\nTargetsFilled = filter TargetsFilled by toDate('Date_Year'+\"-\"+'Date_Month'+\"-01 00:00:00\",\"yyyy-MM-dd HH:mm:ss\") <= toDate('Max End Sec Epoch'); actuals = load \"MFG_TargetActuals\"; actuals = filter actuals by !({{column(Team_Members_1.selection, [\"AssignedTo.Id\"]).asEquality(\"TargetActualsOwner.Id\")}}); actuals = filter actuals by {{coalesce(column(Targets_Vs_Actuals_f_1.selection, [\"AssignedTo.Id\"]), column(Team_Attainment_1.selection, [\"AssignedTo.Id\"]), column(PY_Team_Attainment_1.selection, [\"AssignedTo.Id\"]), column(PY_Targets_Vs_Actual_1.selection, [\"AssignedTo.Id\"]), column(Team_Members_1.selection, [\"AssignedTo.Id\"])).asEquality(\"TargetActualsOwner_for_filter.Managers\")}}; \nactuals = filter actuals by 'Order.StatusCode' == \"Activated\";\nactuals_for_projection = group actuals by ('TargetActualsOwner.Managers', 'Order.EffectiveDate_Year', 'Order.EffectiveDate_Month');\nactuals_for_projection = foreach actuals_for_projection generate 'TargetActualsOwner.Managers' as 'TargetActualsOwner.Managers', 'Order.EffectiveDate_Year', 'Order.EffectiveDate_Month', sum('TotalPrice') as 'Total Price';\nactuals_for_projection = fill actuals_for_projection by (dateCols=('Order.EffectiveDate_Year','Order.EffectiveDate_Month', \"Y-M\"), partition='TargetActualsOwner.Managers');\n\nactuals_for_projection = timeseries actuals_for_projection generate 'Total Price' as 'Projected Total Price' with (partition='TargetActualsOwner.Managers', length=36, dateCols=('Order.EffectiveDate_Year','Order.EffectiveDate_Month', \"Y-M\"), seasonality = 0, ignoreLast = false);\nactuals_for_projection = foreach actuals_for_projection generate 'TargetActualsOwner.Managers' as 'TargetActualsOwner.Managers', 'Order.EffectiveDate_Year', 'Order.EffectiveDate_Month', 'Total Price' as 'Total Price', case when 'Total Price' > coalesce('Projected Total Price',0) then 'Total Price' when coalesce('Projected Total Price',0) >= 0 then 'Projected Total Price' else 0 end as 'Projected Total Price', month_last_day(toDate('Order.EffectiveDate_Year'+\"-\"+'Order.EffectiveDate_Month'+\"-27 00:00:00\",\"yyyy-MM-dd HH:mm:ss\")) as 'Month Last Day'; actuals_for_projection = filter actuals_for_projection by 'Month Last Day' > now(); actuals_for_projection = filter actuals_for_projection by toDate('Order.EffectiveDate_Year'+\"-\"+'Order.EffectiveDate_Month'+\"-01 00:00:00\",\"yyyy-MM-dd HH:mm:ss\") >= toDate(\"{{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.StartDate_Year\"),1900).asObject()}}\"+\"-\"+\"{{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.StartDate_Month\"),\"01\").asObject()}}\"+\"-\"+\"{{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.StartDate_Day\"),\"01\").asObject()}}\"+\" 00:00:00\",\"yyyy-MM-dd HH:mm:ss\") && toDate('Order.EffectiveDate_Year'+\"-\"+'Order.EffectiveDate_Month'+\"-01 00:00:00\",\"yyyy-MM-dd HH:mm:ss\") <= toDate(\"{{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.EndDate_Year\"),3000).asObject()}}\"+\"-\"+\"{{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.EndDate_Month\"),12).asObject()}}\"+\"-\"+\"{{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.EndDate_Day\"),31).asObject()}}\"+\" 00:00:00\",\"yyyy-MM-dd HH:mm:ss\"); actuals = filter actuals by date('Order.EffectiveDate_Year', 'Order.EffectiveDate_Month', 'Order.EffectiveDate_Day') in [dateRange([{{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.StartDate_Year\"),1900).asObject()}}, {{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.StartDate_Month\"),01).asObject()}}, {{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.StartDate_Day\"),01).asObject()}}], [{{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.EndDate_Year\"),3000).asObject()}}, {{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.EndDate_Month\"),12).asObject()}}, {{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.EndDate_Day\"),31).asObject()}}])]; actuals_for_join = group actuals by ('TargetActualsOwner.Managers', 'Order.EffectiveDate_Year', 'Order.EffectiveDate_Month') full, \nactuals_for_projection by ('TargetActualsOwner.Managers', 'Order.EffectiveDate_Year', 'Order.EffectiveDate_Month');\nactuals_for_join = foreach actuals_for_join generate coalesce(actuals.'TargetActualsOwner.Managers', actuals_for_projection.'TargetActualsOwner.Managers') as 'TargetActualsOwner.Managers', coalesce(actuals.'Order.EffectiveDate_Year',actuals_for_projection.'Order.EffectiveDate_Year') as 'Order.EffectiveDate_Year', coalesce(actuals.'Order.EffectiveDate_Month',actuals_for_projection.'Order.EffectiveDate_Month') as 'Order.EffectiveDate_Month',  sum(actuals_for_projection.'Projected Total Price') as 'Projections', sum(actuals.'TotalPrice') as 'Actuals', coalesce(sum(actuals_for_projection.'Projected Total Price'),sum(actuals.'TotalPrice')) as 'Actuals & Projection';\n\n\nresult = group TargetsFilled by ('AssignedTo.Id') left, actuals_for_join by ('TargetActualsOwner.Managers');\nresult = foreach result generate TargetsFilled.'AssignedTo.Id' as 'AssignedTo.Id', first(TargetsFilled.'AssignedTo.Name') as 'AssignedTo.Name', coalesce(sum(actuals_for_join.'Actuals & Projection'),0)/sum(TargetsFilled.'MonthlyTargetCurrencyValue') as 'Projected Attainment', 0/0 as ' ', 0/0 as '  ';","receiveFacetSource":{"mode":"exclude","steps":["List_of_Main_Goals_1","Period_Selection_1","TY_Account_level_tar_1","TY_Product_Targets_1","TY_Product_Targets___1","PY_Product_targets_1","Product_Family_Filte_1","Product_Name_Filter_1","PY_Product_targets___1","PY_Targets_by_Produc_1","TY_Products_by_Reps_1","TY_Accounts_by_Rep_1","PY_Targets_by_Accoun_1","PY_Targets_by_Accoun_2","Parent_Account_Filte_1","Account_Filter_1","Account_Type_Filter_1","Account_Industry_Fil_1","Account_Geo_Filter_1"]},"selectMode":"none","start":"[]","strings":["AssignedTo.Id","AssignedTo.Name"],"type":"saql","useGlobal":true,"visualizationParameters":{"parameters":{"autoFitMode":"keepLabels","bins":{"breakpoints":{"high":100,"low":0},"bands":{"high":{"color":"#008000","label":""},"low":{"color":"#B22222","label":""},"medium":{"color":"#ffa500","label":""}}},"legend":{"descOrder":false,"showHeader":true,"show":true,"customSize":"auto","position":"right-top","inside":false},"axisMode":"multi","tooltip":{"content":{"legend":{"showBinLabel":true,"measures":[],"showNullValues":true,"customizeLegend":false,"showPercentage":true,"showDimensions":true,"showMeasures":true,"dimensions":[]}}},"visualizationType":"hbar","title":{"fontSize":14,"subtitleFontSize":11,"label":"","align":"center","subtitleLabel":""},"binValues":false,"trellis":{"flipLabels":false,"showGridLines":true,"size":[100,100],"enable":false,"type":"x","chartsPerLine":4},"showActionMenu":true,"measureAxis2":{"sqrtScale":false,"showTitle":true,"showAxis":true,"title":"","customDomain":{"showDomain":false}},"measureAxis1":{"sqrtScale":false,"showTitle":true,"showAxis":true,"title":"","customDomain":{"showDomain":false}},"valueType":"compactNumber","theme":"wave","compactDecimalDigits":-1,"dimensionAxis":{"showTitle":true,"customSize":"auto","showAxis":true,"title":"","icons":{"useIcons":false,"iconProps":{"fit":"cover","column":"","type":"round"}}},"applyConditionalFormatting":true},"type":"chart"}},"TY_Product_Targets___1":{"broadcastFacet":true,"groups":["AcctMgrTargetDstr.Product.Id"],"label":"TY Product Targets (QTY)","numbers":["Target#","Actuals#","Current Attainment","Projected Actuals#","Projected Attainment"],"query":"targets = load \"MFG_AccountManagerPeriodicTargetDistribution\"; targets = filter targets by !('AcctMgrTargetDstr.ProductId' is null); targets = filter targets by date('Period.StartDate_Year', 'Period.StartDate_Month', 'Period.StartDate_Day') in [dateRange([{{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.StartDate_Year\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Year\"),1900)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.StartDate_Month\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Month\"),01)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.StartDate_Day\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Day\"),01)).asObject()}}], [{{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.EndDate_Year\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Year\"),3000)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.EndDate_Month\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Month\"),12)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.EndDate_Day\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Day\"),31)).asObject()}}])]; targets = filter targets by date('Period.EndDate_Year', 'Period.EndDate_Month', 'Period.EndDate_Day') in [dateRange([{{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.StartDate_Year\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Year\"),1900)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.StartDate_Month\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Month\"),01)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.StartDate_Day\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Day\"),01)).asObject()}}], [{{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.EndDate_Year\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Year\"),3000)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.EndDate_Month\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Month\"),12)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.EndDate_Day\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Day\"),31)).asObject()}}])]; targets = filter targets by {{column(Team_Members_1.selection, [\"AssignedTo.Id\"]).asEquality(\"AssignedTo.Managers\")}} && ({{column(Team_Members_1.selection, [\"AssignedTo.Id\"]).asEquality(\"AssignedTo.ManagerId\")}} || {{column(Team_Members_1.selection, [\"AssignedTo.Id\"]).asEquality(\"AssignedTo.ForecastRole.ParentRole.ForecastUserId\")}}); targets = filter targets by !({{column(Team_Members_1.selection, [\"AssignedTo.Id\"]).asEquality(\"AssignedTo.Id\")}}); targets = filter targets by {{column(List_of_Main_Goals_1.selection, [\"Self_AcctMgrTarget\"]).asEquality(\"ParentTargetNames\")}}; targets = filter targets by {{column(Target_Period_Split__1.selection, [\"Self_AcctMgrTarget\"]).asEquality(\"ParentTargetNames\")}}; startTargets = foreach targets generate 'Id'+\"@#%\"+'Period.StartDate_Year'+'Period.StartDate_Month'+\"@#%\"+'AcctMgrTargetDstr.Product.Id'+\"!#%\"+'AcctMgrTargetDstr.Product.Name' as 'Id',  'Period.StartDate_Year' as 'Date_Year', 'Period.StartDate_Month' as 'Date_Month', 'MonthlyTargetValue' as 'TargetValue', 'Period.StartDate_sec_epoch' as 'Min Start Sec Epoch', 'Period.EndDate_sec_epoch' as 'Max End Sec Epoch'; endTargets = foreach targets generate 'Id'+\"@#%\"+'Period.StartDate_Year'+'Period.StartDate_Month'+\"@#%\"+'AcctMgrTargetDstr.Product.Id'+\"!#%\"+'AcctMgrTargetDstr.Product.Name' as 'Id',  'Period.EndDate_Year' as 'Date_Year', 'Period.EndDate_Month' as 'Date_Month', 'MonthlyTargetValue' as 'TargetValue', 'Period.StartDate_sec_epoch' as 'Min Start Sec Epoch', 'Period.EndDate_sec_epoch' as 'Max End Sec Epoch'; TargetsForFill = union startTargets, endTargets; TargetsForFill = foreach TargetsForFill generate 'Id' as 'Id', 'Date_Year' as 'Date_Year', 'Date_Month' as 'Date_Month', 'TargetValue' as 'TargetValue', 'Min Start Sec Epoch' as 'Min Start Sec Epoch', 'Max End Sec Epoch' as 'Max End Sec Epoch'; TargetsFilled = fill TargetsForFill by (dateCols=('Date_Year','Date_Month', \"Y-M\"), partition='Id'); TargetsFilled = group TargetsFilled by ('Id', 'Date_Year', 'Date_Month'); TargetsFilled = foreach TargetsFilled generate substr('Id',1,index_of('Id',\"@#%\",1,1)-1) as 'Id', substr('Id', index_of('Id',\"@#%\",1,2)+3, index_of('Id',\"!#%\") - (index_of('Id',\"@#%\",1,2)+3)) as 'AcctMgrTargetDstr.Product.Id', substr('Id', index_of('Id',\"!#%\")+3) as 'AcctMgrTargetDstr.Product.Name','Date_Year', 'Date_Month', max(sum('TargetValue')) over([..] partition by 'Id') as 'TargetValue', max(sum('Min Start Sec Epoch')) over([..] partition by 'Id') as 'Min Start Sec Epoch', max(sum('Max End Sec Epoch')) over([..] partition by 'Id') as 'Max End Sec Epoch'; TargetsFilled = filter TargetsFilled by toDate('Date_Year'+\"-\"+'Date_Month'+\"-01 23:59:59\",\"yyyy-MM-dd HH:mm:ss\") >= toDate('Min Start Sec Epoch'); TargetsFilled = filter TargetsFilled by toDate('Date_Year'+\"-\"+'Date_Month'+\"-01 00:00:00\",\"yyyy-MM-dd HH:mm:ss\") <= toDate('Max End Sec Epoch'); actuals = load \"MFG_TargetActuals\"; actuals = filter actuals by !({{column(Team_Members_1.selection, [\"AssignedTo.Id\"]).asEquality(\"TargetActualsOwner.Id\")}}); actuals = filter actuals by {{column(Team_Members_1.selection, [\"AssignedTo.Id\"]).asEquality(\"TargetActualsOwner.Managers\")}}; actuals = filter actuals by 'Order.StatusCode' == \"Activated\"; actuals_for_projection = group actuals by ('Product2Id', 'Order.EffectiveDate_Year', 'Order.EffectiveDate_Month'); actuals_for_projection = foreach actuals_for_projection generate 'Product2Id' as 'Product2Id', 'Order.EffectiveDate_Year', 'Order.EffectiveDate_Month', sum('Quantity') as 'ActualsValue';actuals_for_projection = fill actuals_for_projection by (dateCols=('Order.EffectiveDate_Year','Order.EffectiveDate_Month', \"Y-M\"), partition='Product2Id'); actuals_for_projection = timeseries actuals_for_projection generate 'ActualsValue' as 'ProjectedActualsValue' with (partition='Product2Id', length=36, dateCols=('Order.EffectiveDate_Year','Order.EffectiveDate_Month', \"Y-M\"), seasonality = 0, ignoreLast = false);actuals_for_projection = foreach actuals_for_projection generate 'Product2Id' as 'Product2Id', 'Order.EffectiveDate_Year', 'Order.EffectiveDate_Month', 'ActualsValue' as 'ActualsValue', case when 'ActualsValue' > coalesce('ProjectedActualsValue',0) then 'ActualsValue' when coalesce('ProjectedActualsValue',0) >= 0 then 'ProjectedActualsValue' else 0 end as 'ProjectedActualsValue', month_last_day(toDate('Order.EffectiveDate_Year'+\"-\"+'Order.EffectiveDate_Month'+\"-27 00:00:00\",\"yyyy-MM-dd HH:mm:ss\")) as 'Month Last Day'; actuals_for_projection = filter actuals_for_projection by 'Month Last Day' > now(); actuals_for_projection = filter actuals_for_projection by toDate('Order.EffectiveDate_Year'+\"-\"+'Order.EffectiveDate_Month'+\"-01 00:00:00\",\"yyyy-MM-dd HH:mm:ss\") >= toDate(\"{{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.StartDate_Year\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Year\"),1900)).asObject()}}\"+\"-\"+\"{{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.StartDate_Month\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Month\"),\"01\")).asObject()}}\"+\"-\"+\"{{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.StartDate_Day\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Day\"),\"01\")).asObject()}}\"+\" 00:00:00\",\"yyyy-MM-dd HH:mm:ss\") && toDate('Order.EffectiveDate_Year'+\"-\"+'Order.EffectiveDate_Month'+\"-01 00:00:00\",\"yyyy-MM-dd HH:mm:ss\") <= toDate(\"{{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.EndDate_Year\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Year\"),3000)).asObject()}}\"+\"-\"+\"{{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.EndDate_Month\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Month\"),12)).asObject()}}\"+\"-\"+\"{{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.EndDate_Day\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Day\"),31)).asObject()}}\"+\" 00:00:00\",\"yyyy-MM-dd HH:mm:ss\"); actuals = filter actuals by date('Order.EffectiveDate_Year', 'Order.EffectiveDate_Month', 'Order.EffectiveDate_Day') in [dateRange([{{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.StartDate_Year\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Year\"),1900)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.StartDate_Month\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Month\"),01)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.StartDate_Day\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Day\"),01)).asObject()}}], [{{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.EndDate_Year\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Year\"),3000)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.EndDate_Month\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Month\"),12)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.EndDate_Day\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Day\"),31)).asObject()}}])]; actuals_for_join = group actuals by ('Product2Id', 'Order.EffectiveDate_Year', 'Order.EffectiveDate_Month') full, actuals_for_projection by ('Product2Id', 'Order.EffectiveDate_Year', 'Order.EffectiveDate_Month'); actuals_for_join = foreach actuals_for_join generate coalesce(actuals.'Product2Id', actuals_for_projection.'Product2Id') as 'Product2Id', coalesce(actuals.'Order.EffectiveDate_Year',actuals_for_projection.'Order.EffectiveDate_Year') as 'Order.EffectiveDate_Year', coalesce(actuals.'Order.EffectiveDate_Month',actuals_for_projection.'Order.EffectiveDate_Month') as 'Order.EffectiveDate_Month',  sum(actuals_for_projection.'ProjectedActualsValue') as 'Projections', sum(actuals.'Quantity') as 'Actuals', coalesce(sum(actuals_for_projection.'ProjectedActualsValue'),sum(actuals.'Quantity')) as 'Actuals & Projection'; result = group TargetsFilled by ('AcctMgrTargetDstr.Product.Id') left, actuals_for_join by ('Product2Id');result = foreach result generate TargetsFilled.'AcctMgrTargetDstr.Product.Id' as 'AcctMgrTargetDstr.Product.Id', first(TargetsFilled.'AcctMgrTargetDstr.Product.Name') as 'AcctMgrTargetDstr.Product.Name', sum(TargetsFilled.'TargetValue') as 'Target#', coalesce(sum(actuals_for_join.'Actuals'),0) as 'Actuals#', coalesce(sum(actuals_for_join.'Actuals'),0)/sum(TargetsFilled.'TargetValue') as 'Current Attainment', coalesce(sum(actuals_for_join.'Actuals & Projection'),0) as 'Projected Actuals#', coalesce(sum(actuals_for_join.'Actuals & Projection'),0)/sum(TargetsFilled.'TargetValue') as 'Projected Attainment';","receiveFacetSource":{"mode":"exclude","steps":["List_of_Main_Goals_1","Period_Selection_1","TY_Account_level_tar_1","TY_Accounts_by_Rep_1","Account_Targets_Vs_A_1","PY_Targets_by_Accoun_1","PY_Targets_by_Accoun_2","PY_Account_targets_a_1","Parent_Account_Filte_1","Account_Filter_1","Account_Type_Filter_1","Account_Industry_Fil_1","Account_Geo_Filter_1"]},"selectMode":"single","strings":["AcctMgrTargetDstr.Product.Id","AcctMgrTargetDstr.Product.Name"],"type":"saql","useGlobal":true,"visualizationParameters":{"parameters":{"autoFitMode":"keepLabels","bins":{"breakpoints":{"high":100,"low":0},"bands":{"high":{"color":"#008000","label":""},"low":{"color":"#B22222","label":""},"medium":{"color":"#ffa500","label":""}}},"legend":{"descOrder":false,"showHeader":true,"show":true,"customSize":"auto","position":"right-top","inside":false},"axisMode":"multi","tooltip":{"content":{"legend":{"showBinLabel":true,"measures":[],"showNullValues":true,"customizeLegend":false,"showPercentage":true,"showDimensions":true,"showMeasures":true,"dimensions":[]}}},"visualizationType":"hbar","title":{"fontSize":14,"subtitleFontSize":11,"label":"","align":"center","subtitleLabel":""},"binValues":false,"trellis":{"flipLabels":false,"showGridLines":true,"size":[100,100],"enable":false,"type":"x","chartsPerLine":4},"showActionMenu":true,"measureAxis2":{"sqrtScale":false,"showTitle":true,"showAxis":true,"title":"","customDomain":{"showDomain":false}},"measureAxis1":{"sqrtScale":false,"showTitle":true,"showAxis":true,"title":"","customDomain":{"showDomain":false}},"valueType":"compactNumber","theme":"wave","compactDecimalDigits":-1,"dimensionAxis":{"showTitle":true,"customSize":"auto","showAxis":true,"title":"","icons":{"useIcons":false,"iconProps":{"fit":"cover","column":"","type":"round"}}},"applyConditionalFormatting":true},"type":"chart"}},"Target_Period_Split__1":{"broadcastFacet":false,"groups":[],"label":"Target Period Split Selection","numbers":[],"query":"q = load \"MFG_AccountManagerPeriodicTargetDistribution\";\nq = filter q by 'AcctMgrTargetDstr.ProductId' is null && 'AcctMgrTargetDstr.Account.Id' is null; \nq = filter q by {{column(Team_Members_1.selection, [\"AssignedTo.Id\"]).asEquality(\"AssignedTo.Id\")}};\nq = group q by ('TargetPeriodName', 'Period.StartDate_Year', 'Period.StartDate_Month', 'Period.StartDate_Day', 'Period.EndDate_Year', 'Period.EndDate_Month', 'Period.EndDate_Day');\nq = foreach q generate 'TargetPeriodName' as 'TargetPeriodName', first('Self_AcctMgrTarget') as 'Self_AcctMgrTarget', 'Period.StartDate_Year' as 'Period.StartDate_Year','Period.StartDate_Month' as 'Period.StartDate_Month', 'Period.StartDate_Day' as 'Period.StartDate_Day', 'Period.EndDate_Year' as 'Period.EndDate_Year' ,'Period.EndDate_Month' as 'Period.EndDate_Month', 'Period.EndDate_Day' as 'Period.EndDate_Day', count() as 'count';\nq = order q by ('TargetPeriodName' asc, 'Period.StartDate_Year' asc, 'Period.StartDate_Month' asc, 'Period.EndDate_Year' asc, 'Period.EndDate_Month' asc);\nq = limit q 2500;","receiveFacetSource":{"mode":"all","steps":[]},"selectMode":"single","start":"[]","strings":[],"type":"saql","useGlobal":true,"visualizationParameters":{"parameters":{"autoFitMode":"keepLabels","bins":{"breakpoints":{"high":100,"low":0},"bands":{"high":{"color":"#008000","label":""},"low":{"color":"#B22222","label":""},"medium":{"color":"#ffa500","label":""}}},"legend":{"descOrder":false,"showHeader":true,"show":true,"customSize":"auto","position":"right-top","inside":false},"axisMode":"multi","tooltip":{"content":{"legend":{"showBinLabel":true,"measures":[],"showNullValues":true,"customizeLegend":false,"showPercentage":true,"showDimensions":true,"showMeasures":true,"dimensions":[]}}},"visualizationType":"hbar","title":{"fontSize":14,"subtitleFontSize":11,"label":"","align":"center","subtitleLabel":""},"binValues":false,"trellis":{"flipLabels":false,"showGridLines":true,"size":[100,100],"enable":false,"type":"x","chartsPerLine":4},"showActionMenu":true,"measureAxis2":{"sqrtScale":false,"showTitle":true,"showAxis":true,"title":"","customDomain":{"showDomain":false}},"measureAxis1":{"sqrtScale":false,"showTitle":true,"showAxis":true,"title":"","customDomain":{"showDomain":false}},"valueType":"compactNumber","theme":"wave","compactDecimalDigits":-1,"dimensionAxis":{"showTitle":true,"customSize":"auto","showAxis":true,"title":"","icons":{"useIcons":false,"iconProps":{"fit":"cover","column":"","type":"round"}}},"applyConditionalFormatting":true},"type":"chart"}},"Team_Attainment_1":{"broadcastFacet":true,"groups":[],"label":"Team Attainment","numbers":[],"query":"targets = load \"MFG_AccountManagerPeriodicTargetDistribution\"; targets = filter targets by date('Period.StartDate_Year', 'Period.StartDate_Month', 'Period.StartDate_Day') in [dateRange([{{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.StartDate_Year\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Year\"),1900)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.StartDate_Month\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Month\"),01)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.StartDate_Day\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Day\"),01)).asObject()}}], [{{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.EndDate_Year\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Year\"),3000)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.EndDate_Month\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Month\"),12)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.EndDate_Day\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Day\"),31)).asObject()}}])];  targets = filter targets by date('Period.EndDate_Year', 'Period.EndDate_Month', 'Period.EndDate_Day') in [dateRange([{{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.StartDate_Year\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Year\"),1900)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.StartDate_Month\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Month\"),01)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.StartDate_Day\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Day\"),01)).asObject()}}], [{{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.EndDate_Year\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Year\"),3000)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.EndDate_Month\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Month\"),12)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.EndDate_Day\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Day\"),31)).asObject()}}])]; \ntargets = filter targets by 'AcctMgrTargetDstr.ProductId' is null && 'AcctMgrTargetDstr.Account.Id' is null; \ntargets = filter targets by {{column(Team_Members_1.selection, [\"AssignedTo.Id\"]).asEquality(\"AssignedTo.Managers\")}} && ({{column(Team_Members_1.selection, [\"AssignedTo.Id\"]).asEquality(\"AssignedTo.ManagerId\")}} || {{column(Team_Members_1.selection, [\"AssignedTo.Id\"]).asEquality(\"AssignedTo.ForecastRole.ParentRole.ForecastUserId\")}}); targets = filter targets by !({{column(Team_Members_1.selection, [\"AssignedTo.Id\"]).asEquality(\"AssignedTo.Id\")}}); targets = filter targets by {{column(List_of_Main_Goals_1.selection, [\"Self_AcctMgrTarget\"]).asEquality(\"ParentTargetNames\")}}; targets = filter targets by {{column(Target_Period_Split__1.selection, [\"Self_AcctMgrTarget\"]).asEquality(\"ParentTargetNames\")}}; \nactuals = load \"MFG_TargetActuals\"; actuals = filter actuals by 'Order.StatusCode' == \"Activated\"; actuals = filter actuals by date('Order.EffectiveDate_Year', 'Order.EffectiveDate_Month', 'Order.EffectiveDate_Day') in [dateRange([{{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.StartDate_Year\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Year\"),1900)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.StartDate_Month\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Month\"),01)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.StartDate_Day\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Day\"),01)).asObject()}}], [{{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.EndDate_Year\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Year\"),3000)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.EndDate_Month\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Month\"),12)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.EndDate_Day\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Day\"),31)).asObject()}}])]; \nactuals = filter actuals by !({{column(Team_Members_1.selection, [\"AssignedTo.Id\"]).asEquality(\"TargetActualsOwner.Id\")}});\nresult = group targets by 'AssignedTo.Id' left, actuals by 'TargetActualsOwner.Managers';\nresult = foreach result generate targets.'AssignedTo.Id' as 'AssignedTo.Id', first(targets.'AssignedTo.Name') as 'AssignedTo.Name', first(targets.'AssignedTo.SmallPhotoUrl') as 'AssignedTo.SmallPhotoUrl', sum(targets.'PeriodTargetCurrencyValue') as 'PeriodTargetCurrencyValue', coalesce(sum(actuals.'TotalPrice'),0) as 'TotalPrice';\nresult = group result by 'AssignedTo.Id';\nresult = foreach result generate 'AssignedTo.Id', first('AssignedTo.Name') as 'AssignedTo.Name', first('AssignedTo.SmallPhotoUrl') as 'AssignedTo.SmallPhotoUrl', sum('TotalPrice')/sum('PeriodTargetCurrencyValue') as 'Attainment'; result = order result by 'Attainment' desc;","receiveFacetSource":{"mode":"exclude","steps":["List_of_Main_Goals_1","TY_Account_level_tar_1","TY_Product_Targets_1","TY_Product_Targets___1","PY_Product_targets_1","Product_Family_Filte_1","Product_Name_Filter_1","PY_Product_targets___1","PY_Targets_by_Produc_1","TY_Products_by_Reps_1","TY_Accounts_by_Rep_1","PY_Targets_by_Accoun_2","PY_Targets_by_Accoun_1","Parent_Account_Filte_1","Account_Filter_1","Account_Type_Filter_1","Account_Industry_Fil_1","Account_Geo_Filter_1"]},"selectMode":"single","start":"[]","strings":[],"type":"saql","useGlobal":true,"visualizationParameters":{"parameters":{"max":1,"tooltip":{"content":{"legend":{"showBinLabel":true,"measures":[],"showNullValues":true,"customizeLegend":false,"showPercentage":true,"showDimensions":true,"showMeasures":true,"dimensions":[]}}},"visualizationType":"polargauge","medium":33,"title":{"fontSize":14,"subtitleFontSize":11,"label":"","align":"center","subtitleLabel":""},"trellis":{"flipLabels":false,"showGridLines":false,"size":[50,50],"enable":true,"type":"y","chartsPerLine":4},"icons":{"useIcons":false,"iconProps":{"fit":"cover","column":""}},"inner":80,"colors":{"mediumColor2":"#F29946","mediumColor1":"#FED444","lowColor1":"#F71979","lowColor2":"#CC203D","highColor1":"#7BDE4E","highColor2":"#169913"},"columnMap":{"trellis":["AssignedTo.Name"],"plots":["Attainment"]},"high":66,"showActionMenu":true,"min":0,"valueType":"percent","theme":"wave","applyConditionalFormatting":true},"type":"chart"}},"PY_Product_targets_1":{"broadcastFacet":true,"groups":[],"label":"PY Product targets","numbers":[],"query":"targets = load \"MFG_AccountManagerPeriodicTargetDistribution\";\nCYtargets = filter targets by !('AcctMgrTargetDstr.ProductId' is null);CYtargets = filter CYtargets by date('Period.StartDate_Year', 'Period.StartDate_Month', 'Period.StartDate_Day') in [dateRange([{{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.StartDate_Year\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Year\"),1900)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.StartDate_Month\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Month\"),01)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.StartDate_Day\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Day\"),01)).asObject()}}], [{{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.EndDate_Year\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Year\"),3000)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.EndDate_Month\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Month\"),12)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.EndDate_Day\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Day\"),31)).asObject()}}])];  CYtargets = filter CYtargets by date('Period.EndDate_Year', 'Period.EndDate_Month', 'Period.EndDate_Day') in [dateRange([{{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.StartDate_Year\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Year\"),1900)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.StartDate_Month\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Month\"),01)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.StartDate_Day\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Day\"),01)).asObject()}}], [{{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.EndDate_Year\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Year\"),3000)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.EndDate_Month\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Month\"),12)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.EndDate_Day\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Day\"),31)).asObject()}}])]; CYtargets = filter CYtargets by {{column(Team_Members_1.selection, [\"AssignedTo.Id\"]).asEquality(\"AssignedTo.Managers\")}} && ({{column(Team_Members_1.selection, [\"AssignedTo.Id\"]).asEquality(\"AssignedTo.ManagerId\")}} || {{column(Team_Members_1.selection, [\"AssignedTo.Id\"]).asEquality(\"AssignedTo.ForecastRole.ParentRole.ForecastUserId\")}}); CYtargets = filter CYtargets by !({{column(Team_Members_1.selection, [\"AssignedTo.Id\"]).asEquality(\"AssignedTo.Id\")}}); CYtargets = filter CYtargets by {{column(List_of_Main_Goals_1.selection, [\"Self_AcctMgrTarget\"]).asEquality(\"ParentTargetNames\")}}; CYtargets = filter CYtargets by {{column(Target_Period_Split__1.selection, [\"Self_AcctMgrTarget\"]).asEquality(\"ParentTargetNames\")}};\nCYstartTargets = foreach CYtargets generate 'Id'+\"@#%\"+'Period.StartDate_Year'+'Period.StartDate_Month'+\"@#%\"+'AcctMgrTargetDstr.ProductId'+\"!#%\"+'AcctMgrTargetDstr.Product.Name' as 'Id',  'Period.StartDate_Year' as 'Date_Year', 'Period.StartDate_Month' as 'Date_Month', 'MonthlyTargetCurrencyValue' as 'MonthlyTargetCurrencyValue', 'Period.StartDate_sec_epoch' as 'Min Start Sec Epoch', 'Period.EndDate_sec_epoch' as 'Max End Sec Epoch';\nCYendTargets = foreach CYtargets generate 'Id'+\"@#%\"+'Period.StartDate_Year'+'Period.StartDate_Month'+\"@#%\"+'AcctMgrTargetDstr.ProductId'+\"!#%\"+'AcctMgrTargetDstr.Product.Name' as 'Id',  'Period.EndDate_Year' as 'Date_Year', 'Period.EndDate_Month' as 'Date_Month', 'MonthlyTargetCurrencyValue' as 'MonthlyTargetCurrencyValue', 'Period.StartDate_sec_epoch' as 'Min Start Sec Epoch', 'Period.EndDate_sec_epoch' as 'Max End Sec Epoch';\nCYTargetsForFill = union CYstartTargets, CYendTargets;\nCYTargetsForFill = foreach CYTargetsForFill generate 'Id' as 'Id', 'Date_Year' as 'Date_Year', 'Date_Month' as 'Date_Month', 'MonthlyTargetCurrencyValue' as 'MonthlyTargetCurrencyValue', 'Min Start Sec Epoch' as 'Min Start Sec Epoch', 'Max End Sec Epoch' as 'Max End Sec Epoch';\nCYTargetsFilled = fill CYTargetsForFill by (dateCols=('Date_Year','Date_Month', \"Y-M\"), partition='Id');\nCYTargetsFilled = group CYTargetsFilled by ('Id', 'Date_Year', 'Date_Month');\nCYTargetsFilled = foreach CYTargetsFilled generate substr('Id',1,index_of('Id',\"@#%\",1,1)-1) as 'Id', substr('Id', index_of('Id',\"@#%\",1,2)+3, index_of('Id',\"!#%\") - (index_of('Id',\"@#%\",1,2)+3)) as 'AcctMgrTargetDstr.ProductId', substr('Id', index_of('Id',\"!#%\")+3) as 'AcctMgrTargetDstr.Product.Name','Date_Year', 'Date_Month', max(sum('MonthlyTargetCurrencyValue')) over([..] partition by 'Id') as 'MonthlyTargetCurrencyValue', max(sum('Min Start Sec Epoch')) over([..] partition by 'Id') as 'Min Start Sec Epoch', max(sum('Max End Sec Epoch')) over([..] partition by 'Id') as 'Max End Sec Epoch';\nCYTargetsFilled = filter CYTargetsFilled by toDate('Date_Year'+\"-\"+'Date_Month'+\"-01 23:59:59\",\"yyyy-MM-dd HH:mm:ss\") >= toDate('Min Start Sec Epoch');\nCYTargetsFilled = filter CYTargetsFilled by toDate('Date_Year'+\"-\"+'Date_Month'+\"-01 00:00:00\",\"yyyy-MM-dd HH:mm:ss\") <= toDate('Max End Sec Epoch');\ntargets = filter targets by !('AcctMgrTargetDstr.ProductId' is null);targets = filter targets by date('Period.StartDate_Year', 'Period.StartDate_Month', 'Period.StartDate_Day') in [dateRange([{{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.StartDate_Year\"),1900).asObject()}}, {{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.StartDate_Month\"),01).asObject()}}, {{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.StartDate_Day\"),01).asObject()}}], [{{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.EndDate_Year\"),3000).asObject()}}, {{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.EndDate_Month\"),12).asObject()}}, {{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.EndDate_Day\"),31).asObject()}}])];  targets = filter targets by date('Period.EndDate_Year', 'Period.EndDate_Month', 'Period.EndDate_Day') in [dateRange([{{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.StartDate_Year\"),1900).asObject()}}, {{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.StartDate_Month\"),01).asObject()}}, {{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.StartDate_Day\"),01).asObject()}}], [{{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.EndDate_Year\"),3000).asObject()}}, {{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.EndDate_Month\"),12).asObject()}}, {{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.EndDate_Day\"),31).asObject()}}])]; targets = filter targets by {{column(Team_Members_1.selection, [\"AssignedTo.Id\"]).asEquality(\"AssignedTo.Managers\")}} && ({{column(Team_Members_1.selection, [\"AssignedTo.Id\"]).asEquality(\"AssignedTo.ManagerId\")}} || {{column(Team_Members_1.selection, [\"AssignedTo.Id\"]).asEquality(\"AssignedTo.ForecastRole.ParentRole.ForecastUserId\")}}); targets = filter targets by !({{column(Team_Members_1.selection, [\"AssignedTo.Id\"]).asEquality(\"AssignedTo.Id\")}}); targets = filter targets by {{column(List_of_Main_Goals_1.selection, [\"Self_AcctMgrTarget\"]).asEquality(\"ParentTargetNames\")}}; targets = filter targets by {{column(Target_Period_Split__1.selection, [\"Self_AcctMgrTarget\"]).asEquality(\"ParentTargetNames\")}};\nstartTargets = foreach targets generate 'Id'+\"@#%\"+'Period.StartDate_Year'+'Period.StartDate_Month'+\"@#%\"+'AcctMgrTargetDstr.ProductId'+\"!#%\"+'AcctMgrTargetDstr.Product.Name' as 'Id',  'Period.StartDate_Year' as 'Date_Year', 'Period.StartDate_Month' as 'Date_Month', 'MonthlyTargetCurrencyValue' as 'MonthlyTargetCurrencyValue', 'Period.StartDate_sec_epoch' as 'Min Start Sec Epoch', 'Period.EndDate_sec_epoch' as 'Max End Sec Epoch';\nendTargets = foreach targets generate 'Id'+\"@#%\"+'Period.StartDate_Year'+'Period.StartDate_Month'+\"@#%\"+'AcctMgrTargetDstr.ProductId'+\"!#%\"+'AcctMgrTargetDstr.Product.Name' as 'Id',  'Period.EndDate_Year' as 'Date_Year', 'Period.EndDate_Month' as 'Date_Month', 'MonthlyTargetCurrencyValue' as 'MonthlyTargetCurrencyValue', 'Period.StartDate_sec_epoch' as 'Min Start Sec Epoch', 'Period.EndDate_sec_epoch' as 'Max End Sec Epoch';\nTargetsForFill = union startTargets, endTargets;\nTargetsForFill = foreach TargetsForFill generate 'Id' as 'Id', 'Date_Year' as 'Date_Year', 'Date_Month' as 'Date_Month', 'MonthlyTargetCurrencyValue' as 'MonthlyTargetCurrencyValue', 'Min Start Sec Epoch' as 'Min Start Sec Epoch', 'Max End Sec Epoch' as 'Max End Sec Epoch';\nTargetsFilled = fill TargetsForFill by (dateCols=('Date_Year','Date_Month', \"Y-M\"), partition='Id');\nTargetsFilled = group TargetsFilled by ('Id', 'Date_Year', 'Date_Month');\nTargetsFilled = foreach TargetsFilled generate substr('Id',1,index_of('Id',\"@#%\",1,1)-1) as 'Id', substr('Id', index_of('Id',\"@#%\",1,2)+3, index_of('Id',\"!#%\") - (index_of('Id',\"@#%\",1,2)+3)) as 'AcctMgrTargetDstr.ProductId', substr('Id', index_of('Id',\"!#%\")+3) as 'AcctMgrTargetDstr.Product.Name','Date_Year', 'Date_Month', max(sum('MonthlyTargetCurrencyValue')) over([..] partition by 'Id') as 'MonthlyTargetCurrencyValue', max(sum('Min Start Sec Epoch')) over([..] partition by 'Id') as 'Min Start Sec Epoch', max(sum('Max End Sec Epoch')) over([..] partition by 'Id') as 'Max End Sec Epoch';\nTargetsFilled = filter TargetsFilled by toDate('Date_Year'+\"-\"+'Date_Month'+\"-01 23:59:59\",\"yyyy-MM-dd HH:mm:ss\") >= toDate('Min Start Sec Epoch');\nTargetsFilled = filter TargetsFilled by toDate('Date_Year'+\"-\"+'Date_Month'+\"-01 00:00:00\",\"yyyy-MM-dd HH:mm:ss\") <= toDate('Max End Sec Epoch');\nactuals = load \"MFG_TargetActuals\";actuals = filter actuals by !({{column(Team_Members_1.selection, [\"AssignedTo.Id\"]).asEquality(\"TargetActualsOwner.Id\")}}); actuals = filter actuals by {{coalesce(column(Targets_Vs_Actuals_f_1.selection, [\"AssignedTo.Id\"]), column(Team_Attainment_1.selection, [\"AssignedTo.Id\"]), column(PY_Team_Attainment_1.selection, [\"AssignedTo.Id\"]), column(PY_Targets_Vs_Actual_1.selection, [\"AssignedTo.Id\"]), column(Team_Members_1.selection, [\"AssignedTo.Id\"])).asEquality(\"TargetActualsOwner_for_filter.Managers\")}}; \nactuals = filter actuals by 'Order.StatusCode' == \"Activated\";\nactuals_for_projection = group actuals by ('Product2Id', 'Order.EffectiveDate_Year', 'Order.EffectiveDate_Month');\nactuals_for_projection = foreach actuals_for_projection generate 'Product2Id' as 'Product2Id', 'Order.EffectiveDate_Year', 'Order.EffectiveDate_Month', sum('TotalPrice') as 'Total Price';\nactuals_for_projection = fill actuals_for_projection by (dateCols=('Order.EffectiveDate_Year','Order.EffectiveDate_Month', \"Y-M\"), partition='Product2Id');\nactuals_for_projection = timeseries actuals_for_projection generate 'Total Price' as 'Projected Total Price' with (partition='Product2Id', length=36, dateCols=('Order.EffectiveDate_Year','Order.EffectiveDate_Month', \"Y-M\"), seasonality = 0, ignoreLast = false);\nactuals_for_projection = foreach actuals_for_projection generate 'Product2Id' as 'Product2Id', 'Order.EffectiveDate_Year', 'Order.EffectiveDate_Month', 'Total Price' as 'Total Price', case when 'Total Price' > coalesce('Projected Total Price',0) then 'Total Price' when coalesce('Projected Total Price',0) >= 0 then 'Projected Total Price' else 0 end as 'Projected Total Price', month_last_day(toDate('Order.EffectiveDate_Year'+\"-\"+'Order.EffectiveDate_Month'+\"-27 00:00:00\",\"yyyy-MM-dd HH:mm:ss\")) as 'Month Last Day'; actuals_for_projection = filter actuals_for_projection by 'Month Last Day' > now(); actuals_for_projection = filter actuals_for_projection by toDate('Order.EffectiveDate_Year'+\"-\"+'Order.EffectiveDate_Month'+\"-01 00:00:00\",\"yyyy-MM-dd HH:mm:ss\") >= toDate(\"{{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.StartDate_Year\"),1900).asObject()}}\"+\"-\"+\"{{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.StartDate_Month\"),\"01\").asObject()}}\"+\"-\"+\"{{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.StartDate_Day\"),\"01\").asObject()}}\"+\" 00:00:00\",\"yyyy-MM-dd HH:mm:ss\") && toDate('Order.EffectiveDate_Year'+\"-\"+'Order.EffectiveDate_Month'+\"-01 00:00:00\",\"yyyy-MM-dd HH:mm:ss\") <= toDate(\"{{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.EndDate_Year\"),3000).asObject()}}\"+\"-\"+\"{{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.EndDate_Month\"),12).asObject()}}\"+\"-\"+\"{{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.EndDate_Day\"),31).asObject()}}\"+\" 00:00:00\",\"yyyy-MM-dd HH:mm:ss\"); actuals = filter actuals by date('Order.EffectiveDate_Year', 'Order.EffectiveDate_Month', 'Order.EffectiveDate_Day') in [dateRange([{{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.StartDate_Year\"),1900).asObject()}}, {{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.StartDate_Month\"),01).asObject()}}, {{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.StartDate_Day\"),01).asObject()}}], [{{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.EndDate_Year\"),3000).asObject()}}, {{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.EndDate_Month\"),12).asObject()}}, {{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.EndDate_Day\"),31).asObject()}}])]; \nactuals_for_join = group actuals by ('Product2Id', 'Order.EffectiveDate_Year', 'Order.EffectiveDate_Month') full, \nactuals_for_projection by ('Product2Id', 'Order.EffectiveDate_Year', 'Order.EffectiveDate_Month');\nactuals_for_join = foreach actuals_for_join generate coalesce(actuals.'Product2Id', actuals_for_projection.'Product2Id') as 'Product2Id', coalesce(actuals.'Order.EffectiveDate_Year',actuals_for_projection.'Order.EffectiveDate_Year') as 'Order.EffectiveDate_Year', coalesce(actuals.'Order.EffectiveDate_Month',actuals_for_projection.'Order.EffectiveDate_Month') as 'Order.EffectiveDate_Month',  sum(actuals_for_projection.'Projected Total Price') as 'Projections', sum(actuals.'TotalPrice') as 'Actuals', coalesce(sum(actuals_for_projection.'Projected Total Price'),sum(actuals.'TotalPrice')) as 'Actuals & Projection';\nresult = group CYTargetsFilled by ('AcctMgrTargetDstr.ProductId') left, TargetsFilled by ('AcctMgrTargetDstr.ProductId') left,  actuals_for_join by ('Product2Id');\nresult = foreach result generate CYTargetsFilled.'AcctMgrTargetDstr.ProductId' as 'AcctMgrTargetDstr.ProductId', first(CYTargetsFilled.'AcctMgrTargetDstr.Product.Name') as 'AcctMgrTargetDstr.Product.Name', sum(CYTargetsFilled.'MonthlyTargetCurrencyValue') as 'TY Target Revenue', sum(TargetsFilled.'MonthlyTargetCurrencyValue') as 'PY Target Revenue', (sum(CYTargetsFilled.'MonthlyTargetCurrencyValue') - sum(TargetsFilled.'MonthlyTargetCurrencyValue'))/sum(TargetsFilled.'MonthlyTargetCurrencyValue') as 'Change from PY', coalesce(sum(actuals_for_join.'Actuals'),0) as 'PY Actual Revenue', coalesce(sum(actuals_for_join.'Actuals'),0)/sum(TargetsFilled.'MonthlyTargetCurrencyValue') as 'PY Attainment';","receiveFacetSource":{"mode":"exclude","steps":["List_of_Main_Goals_1","Period_Selection_1","TY_Account_level_tar_1","TY_Accounts_by_Rep_1","Account_Targets_Vs_A_1","PY_Targets_by_Accoun_1","PY_Targets_by_Accoun_2","PY_Account_targets_a_1","Parent_Account_Filte_1","Account_Filter_1","Account_Type_Filter_1","Account_Industry_Fil_1","Account_Geo_Filter_1"]},"selectMode":"single","strings":[],"type":"saql","useGlobal":true,"visualizationParameters":{"parameters":{"autoFitMode":"keepLabels","bins":{"breakpoints":{"high":100,"low":0},"bands":{"high":{"color":"#008000","label":""},"low":{"color":"#B22222","label":""},"medium":{"color":"#ffa500","label":""}}},"legend":{"descOrder":false,"showHeader":true,"show":true,"customSize":"auto","position":"right-top","inside":false},"axisMode":"multi","tooltip":{"content":{"legend":{"showBinLabel":true,"measures":[],"showNullValues":true,"customizeLegend":false,"showPercentage":true,"showDimensions":true,"showMeasures":true,"dimensions":[]}}},"visualizationType":"hbar","title":{"fontSize":14,"subtitleFontSize":11,"label":"","align":"center","subtitleLabel":""},"binValues":false,"trellis":{"flipLabels":false,"showGridLines":true,"size":[100,100],"enable":false,"type":"x","chartsPerLine":4},"columnMap":{"trellis":[],"dimensionAxis":["AcctMgrTargetDstr.Product.Name"],"plots":["TY Target Revenue","PY Target Revenue","Change from PY","PY Actual Revenue","PY Attainment"]},"showActionMenu":true,"measureAxis2":{"sqrtScale":false,"showTitle":true,"showAxis":true,"title":"","customDomain":{"showDomain":false}},"measureAxis1":{"sqrtScale":false,"showTitle":true,"showAxis":true,"title":"","customDomain":{"showDomain":false}},"valueType":"compactNumber","theme":"wave","compactDecimalDigits":-1,"dimensionAxis":{"showTitle":true,"customSize":"auto","showAxis":true,"title":"","icons":{"useIcons":false,"iconProps":{"fit":"cover","column":"","type":"round"}}},"applyConditionalFormatting":true},"type":"chart"}},"Projections_Toggle_1":{"broadcastFacet":true,"columns":{"PYProjection":{"type":"string"},"Projection":{"type":"string"},"Display":{"type":"string"}},"label":"Projections Toggle","selectMode":"singlerequired","start":"{\"Display\":[\"On\"]}","type":"staticflex","values":["{\"Display\":\"On\",\"Projection\":\"ProjectionProjection\",\"PYProjection\":\"PYProjectionProjection\"}","{\"Display\":\"Off\",\"Projection\":\"NoProjection\",\"PYProjection\":\"PYNoProjection\"}"]},"Scatter_plot__of_Current__1":{"broadcastFacet":true,"groups":["AssignedTo.Id"],"label":"Scatter plot of Current Targets Vs PY Actuals for each Team Member","numbers":["TY Target Revenue","PY Actual Revenue"],"query":"targets = load \"MFG_AccountManagerPeriodicTargetDistribution\"; targets = filter targets by date('Period.StartDate_Year', 'Period.StartDate_Month', 'Period.StartDate_Day') in [dateRange([{{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.StartDate_Year\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Year\"),1900)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.StartDate_Month\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Month\"),01)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.StartDate_Day\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Day\"),01)).asObject()}}], [{{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.EndDate_Year\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Year\"),3000)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.EndDate_Month\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Month\"),12)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.EndDate_Day\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Day\"),31)).asObject()}}])];  targets = filter targets by date('Period.EndDate_Year', 'Period.EndDate_Month', 'Period.EndDate_Day') in [dateRange([{{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.StartDate_Year\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Year\"),1900)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.StartDate_Month\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Month\"),01)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.StartDate_Day\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Day\"),01)).asObject()}}], [{{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.EndDate_Year\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Year\"),3000)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.EndDate_Month\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Month\"),12)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.EndDate_Day\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Day\"),31)).asObject()}}])]; \ntargets = filter targets by 'AcctMgrTargetDstr.ProductId' is null && 'AcctMgrTargetDstr.Account.Id' is null; \ntargets = filter targets by {{column(Team_Members_1.selection, [\"AssignedTo.Id\"]).asEquality(\"AssignedTo.Managers\")}} && ({{column(Team_Members_1.selection, [\"AssignedTo.Id\"]).asEquality(\"AssignedTo.ManagerId\")}} || {{column(Team_Members_1.selection, [\"AssignedTo.Id\"]).asEquality(\"AssignedTo.ForecastRole.ParentRole.ForecastUserId\")}}); targets = filter targets by !({{column(Team_Members_1.selection, [\"AssignedTo.Id\"]).asEquality(\"AssignedTo.Id\")}}); targets = filter targets by {{column(List_of_Main_Goals_1.selection, [\"Self_AcctMgrTarget\"]).asEquality(\"ParentTargetNames\")}}; targets = filter targets by {{column(Target_Period_Split__1.selection, [\"Self_AcctMgrTarget\"]).asEquality(\"ParentTargetNames\")}}; \nactuals = load \"MFG_TargetActuals\"; actuals = filter actuals by 'Order.StatusCode' == \"Activated\"; actuals = filter actuals by date('Order.EffectiveDate_Year', 'Order.EffectiveDate_Month', 'Order.EffectiveDate_Day') in [dateRange([{{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.StartDate_Year\"),1900).asObject()}}, {{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.StartDate_Month\"),01).asObject()}}, {{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.StartDate_Day\"),01).asObject()}}], [{{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.EndDate_Year\"),3000).asObject()}}, {{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.EndDate_Month\"),12).asObject()}}, {{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.EndDate_Day\"),31).asObject()}}])]; \nactuals = filter actuals by !({{column(Team_Members_1.selection, [\"AssignedTo.Id\"]).asEquality(\"TargetActualsOwner.Id\")}});\nresult = group targets by 'AssignedTo.Id' left, actuals by 'TargetActualsOwner.Managers';\nresult = foreach result generate targets.'AssignedTo.Id' as 'AssignedTo.Id', first(targets.'AssignedTo.Name') as 'AssignedTo.Name', sum(targets.'PeriodTargetCurrencyValue') as 'PeriodTargetCurrencyValue', sum(actuals.'TotalPrice') as 'TotalPrice';\nresult = group result by 'AssignedTo.Id';\nresult = foreach result generate 'AssignedTo.Id' as 'AssignedTo.Id', first('AssignedTo.Name') as 'AssignedTo.Name', sum('PeriodTargetCurrencyValue') as 'TY Target Revenue', coalesce(sum('TotalPrice'),0) as 'PY Actual Revenue';","receiveFacetSource":{"mode":"exclude","steps":["List_of_Main_Goals_1","Period_Selection_1","TY_Account_level_tar_1","TY_Product_Targets_1","TY_Product_Targets___1","PY_Product_targets_1","Product_Family_Filte_1","Product_Name_Filter_1","PY_Product_targets___1","PY_Targets_by_Produc_1","TY_Products_by_Reps_1","TY_Accounts_by_Rep_1","PY_Targets_by_Accoun_2","PY_Targets_by_Accoun_1","Parent_Account_Filte_1","Account_Filter_1","Account_Type_Filter_1","Account_Industry_Fil_1","Account_Geo_Filter_1"]},"selectMode":"single","start":"[]","strings":["AssignedTo.Id","AssignedTo.Name"],"type":"saql","useGlobal":true,"visualizationParameters":{"parameters":{"radiusRatio":5,"columnMap":{"r":[],"x":["sum_TotalPrice"],"y":["sum_PeriodTargetCurrencyValue"],"trellis":[],"plots":["AssignedTo.Id"]},"showActionMenu":true,"legend":{"descOrder":false,"showHeader":true,"show":true,"customSize":"auto","position":"right-top","inside":false},"tooltip":{"content":{"legend":{"showBinLabel":true,"measures":[],"showNullValues":true,"customizeLegend":false,"showPercentage":true,"showDimensions":true,"showMeasures":true,"dimensions":[]}}},"x":{"sqrtScale":false,"showZero":true,"showTitle":true,"showAxis":true,"title":"","customDomain":{"showDomain":false}},"visualizationType":"scatter","y":{"sqrtScale":false,"showZero":true,"showTitle":true,"showAxis":true,"title":"","customDomain":{"showDomain":false}},"theme":"wave","title":{"fontSize":14,"subtitleFontSize":11,"label":"","align":"center","subtitleLabel":""},"trellis":{"flipLabels":false,"showGridLines":true,"size":[100,100],"enable":false,"type":"x","chartsPerLine":4},"applyConditionalFormatting":true},"type":"chart"}},"Targets_Vs_Actuals___1":{"broadcastFacet":true,"groups":[],"label":"Targets Vs Actuals (MoM) ","numbers":[],"query":"targets = load \"MFG_AccountManagerPeriodicTargetDistribution\";targets = filter targets by date('Period.StartDate_Year', 'Period.StartDate_Month', 'Period.StartDate_Day') in [dateRange([{{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.StartDate_Year\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Year\"),1900)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.StartDate_Month\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Month\"),01)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.StartDate_Day\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Day\"),01)).asObject()}}], [{{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.EndDate_Year\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Year\"),3000)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.EndDate_Month\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Month\"),12)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.EndDate_Day\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Day\"),31)).asObject()}}])];  targets = filter targets by date('Period.EndDate_Year', 'Period.EndDate_Month', 'Period.EndDate_Day') in [dateRange([{{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.StartDate_Year\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Year\"),1900)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.StartDate_Month\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Month\"),01)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.StartDate_Day\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Day\"),01)).asObject()}}], [{{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.EndDate_Year\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Year\"),3000)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.EndDate_Month\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Month\"),12)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.EndDate_Day\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Day\"),31)).asObject()}}])]; \ntargets = filter targets by 'AcctMgrTargetDstr.ProductId' is null && 'AcctMgrTargetDstr.Account.Id' is null; targets = filter targets by {{column(Team_Members_1.selection, [\"AssignedTo.Id\"]).asEquality(\"AssignedTo.Managers\")}} && ({{column(Team_Members_1.selection, [\"AssignedTo.Id\"]).asEquality(\"AssignedTo.ManagerId\")}} || {{column(Team_Members_1.selection, [\"AssignedTo.Id\"]).asEquality(\"AssignedTo.ForecastRole.ParentRole.ForecastUserId\")}}); targets = filter targets by !({{column(Team_Members_1.selection, [\"AssignedTo.Id\"]).asEquality(\"AssignedTo.Id\")}}); targets = filter targets by {{column(List_of_Main_Goals_1.selection, [\"Self_AcctMgrTarget\"]).asEquality(\"ParentTargetNames\")}}; targets = filter targets by {{column(Target_Period_Split__1.selection, [\"Self_AcctMgrTarget\"]).asEquality(\"ParentTargetNames\")}};\n\nstartTargets = foreach targets generate 'Id'+'Period.StartDate_Year'+'Period.StartDate_Month'+\"@#%\"+'AssignedTo.Id'+\"@#%\"+'AssignedTo.Name' as 'Id',  'Period.StartDate_Year' as 'Date_Year', 'Period.StartDate_Month' as 'Date_Month', 'MonthlyTargetCurrencyValue' as 'MonthlyTargetCurrencyValue', 'Period.StartDate_sec_epoch' as 'Min Start Sec Epoch', 'Period.EndDate_sec_epoch' as 'Max End Sec Epoch';\nendTargets = foreach targets generate 'Id'+'Period.StartDate_Year'+'Period.StartDate_Month'+\"@#%\"+'AssignedTo.Id'+\"@#%\"+'AssignedTo.Name' as 'Id',  'Period.EndDate_Year' as 'Date_Year', 'Period.EndDate_Month' as 'Date_Month', 'MonthlyTargetCurrencyValue' as 'MonthlyTargetCurrencyValue', 'Period.StartDate_sec_epoch' as 'Min Start Sec Epoch', 'Period.EndDate_sec_epoch' as 'Max End Sec Epoch';\nTargetsForFill = union startTargets, endTargets;\nTargetsForFill = foreach TargetsForFill generate 'Id' as 'Id', 'Date_Year' as 'Date_Year', 'Date_Month' as 'Date_Month', 'MonthlyTargetCurrencyValue' as 'MonthlyTargetCurrencyValue', 'Min Start Sec Epoch' as 'Min Start Sec Epoch', 'Max End Sec Epoch' as 'Max End Sec Epoch';\nTargetsFilled = fill TargetsForFill by (dateCols=('Date_Year','Date_Month', \"Y-M\"), partition='Id');\nTargetsFilled = group TargetsFilled by ('Id', 'Date_Year', 'Date_Month');\nTargetsFilled = foreach TargetsFilled generate 'Id', 'Date_Year', 'Date_Month', max(sum('MonthlyTargetCurrencyValue')) over([..] partition by 'Id') as 'MonthlyTargetCurrencyValue', max(sum('Min Start Sec Epoch')) over([..] partition by 'Id') as 'Min Start Sec Epoch', max(sum('Max End Sec Epoch')) over([..] partition by 'Id') as 'Max End Sec Epoch';\n\nTargetsFilled = filter TargetsFilled by toDate('Date_Year'+\"-\"+'Date_Month'+\"-01 23:59:59\",\"yyyy-MM-dd HH:mm:ss\") >= toDate('Min Start Sec Epoch');\nTargetsFilled = filter TargetsFilled by toDate('Date_Year'+\"-\"+'Date_Month'+\"-01 00:00:00\",\"yyyy-MM-dd HH:mm:ss\") <= toDate('Max End Sec Epoch');\n\nactuals = load \"MFG_TargetActuals\"; actuals = filter actuals by !({{column(Team_Members_1.selection, [\"AssignedTo.Id\"]).asEquality(\"TargetActualsOwner.Id\")}}); actuals = filter actuals by {{coalesce(column(Targets_Vs_Actuals_f_1.selection, [\"AssignedTo.Id\"]), column(Team_Attainment_1.selection, [\"AssignedTo.Id\"]), column(PY_Team_Attainment_1.selection, [\"AssignedTo.Id\"]), column(PY_Targets_Vs_Actual_1.selection, [\"AssignedTo.Id\"]), column(Team_Members_1.selection, [\"AssignedTo.Id\"])).asEquality(\"TargetActualsOwner.Managers\")}}; \nactuals = filter actuals by 'Order.StatusCode' == \"Activated\";\nactuals_for_projection = group actuals by ('TargetActualsOwner.Managers', 'Order.EffectiveDate_Year', 'Order.EffectiveDate_Month');\nactuals_for_projection = foreach actuals_for_projection generate 'TargetActualsOwner.Managers' as 'TargetActualsOwner.Managers', 'Order.EffectiveDate_Year', 'Order.EffectiveDate_Month', sum('TotalPrice') as 'Total Price';\nactuals_for_projection = fill actuals_for_projection by (dateCols=('Order.EffectiveDate_Year','Order.EffectiveDate_Month', \"Y-M\"), partition='TargetActualsOwner.Managers');\n\nactuals_for_projection = timeseries actuals_for_projection generate 'Total Price' as 'Projected Total Price' with (partition='TargetActualsOwner.Managers', length=36, dateCols=('Order.EffectiveDate_Year','Order.EffectiveDate_Month', \"Y-M\"), seasonality = 0, ignoreLast = false);\nactuals_for_projection = foreach actuals_for_projection generate 'TargetActualsOwner.Managers' as 'TargetActualsOwner.Managers', 'Order.EffectiveDate_Year', 'Order.EffectiveDate_Month', 'Total Price' as 'Total Price', case when 'Total Price' > coalesce('Projected Total Price',0) then 'Total Price' when coalesce('Projected Total Price',0) >= 0 then 'Projected Total Price' else 0 end as 'Projected Total Price', month_last_day(toDate('Order.EffectiveDate_Year'+\"-\"+'Order.EffectiveDate_Month'+\"-27 00:00:00\",\"yyyy-MM-dd HH:mm:ss\")) as 'Month Last Day'; actuals_for_projection = filter actuals_for_projection by toDate('Order.EffectiveDate_Year'+\"-\"+'Order.EffectiveDate_Month'+\"-01 00:00:00\",\"yyyy-MM-dd HH:mm:ss\") >= toDate(\"{{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.StartDate_Year\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Year\"),1900)).asObject()}}\"+\"-\"+\"{{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.StartDate_Month\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Month\"),\"01\")).asObject()}}\"+\"-\"+\"{{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.StartDate_Day\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Day\"),\"01\")).asObject()}}\"+\" 00:00:00\",\"yyyy-MM-dd HH:mm:ss\") && toDate('Order.EffectiveDate_Year'+\"-\"+'Order.EffectiveDate_Month'+\"-01 00:00:00\",\"yyyy-MM-dd HH:mm:ss\") <= toDate(\"{{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.EndDate_Year\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Year\"),3000)).asObject()}}\"+\"-\"+\"{{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.EndDate_Month\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Month\"),12)).asObject()}}\"+\"-\"+\"{{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.EndDate_Day\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Day\"),31)).asObject()}}\"+\" 00:00:00\",\"yyyy-MM-dd HH:mm:ss\");  actuals_for_projection_filtered = filter actuals_for_projection by 'Month Last Day' > now(); actuals = filter actuals by date('Order.EffectiveDate_Year', 'Order.EffectiveDate_Month', 'Order.EffectiveDate_Day') in [dateRange([{{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.StartDate_Year\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Year\"),1900)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.StartDate_Month\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Month\"),01)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.StartDate_Day\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Day\"),01)).asObject()}}], [{{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.EndDate_Year\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Year\"),3000)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.EndDate_Month\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Month\"),12)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.EndDate_Day\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Day\"),31)).asObject()}}])]; actuals_for_join = group actuals by ('TargetActualsOwner.Managers', 'Order.EffectiveDate_Year', 'Order.EffectiveDate_Month') full, actuals_for_projection by ('TargetActualsOwner.Managers', 'Order.EffectiveDate_Year', 'Order.EffectiveDate_Month')full, actuals_for_projection_filtered by ('TargetActualsOwner.Managers', 'Order.EffectiveDate_Year', 'Order.EffectiveDate_Month'); actuals_for_join = foreach actuals_for_join generate coalesce(actuals.'TargetActualsOwner.Managers', actuals_for_projection_filtered.'TargetActualsOwner.Managers') as 'TargetActualsOwner.Managers', coalesce(actuals.'Order.EffectiveDate_Year',actuals_for_projection.'Order.EffectiveDate_Year') as 'Order.EffectiveDate_Year', coalesce(actuals.'Order.EffectiveDate_Month',actuals_for_projection.'Order.EffectiveDate_Month') as 'Order.EffectiveDate_Month',  sum(actuals_for_projection_filtered.'Projected Total Price') as 'Projections', sum(actuals.'TotalPrice') as 'Actuals', coalesce(sum(actuals_for_projection_filtered.'Projected Total Price'),sum(actuals.'TotalPrice')) as 'Actuals & Projection'; forecasts = load \"MFG_Targets_AccountProductPeriodForecast\"; forecasts = filter forecasts by !({{column(Team_Members_1.selection, [\"AssignedTo.Id\"]).asEquality(\"Account.Owner.Id\")}}); forecasts = filter forecasts by {{coalesce(column(Targets_Vs_Actuals_f_1.selection, [\"AssignedTo.Id\"]), column(Team_Attainment_1.selection, [\"AssignedTo.Id\"]), column(PY_Team_Attainment_1.selection, [\"AssignedTo.Id\"]), column(PY_Targets_Vs_Actual_1.selection, [\"AssignedTo.Id\"]), column(Team_Members_1.selection, [\"AssignedTo.Id\"])).asEquality(\"TargetsAccount.Owner.Managers\")}}; forecasts = filter forecasts by date('Period.StartDate_Year', 'Period.StartDate_Month', 'Period.StartDate_Day') in [dateRange([{{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.StartDate_Year\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Year\"),1900)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.StartDate_Month\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Month\"),01)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.StartDate_Day\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Day\"),01)).asObject()}}], [{{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.EndDate_Year\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Year\"),3000)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.EndDate_Month\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Month\"),12)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.EndDate_Day\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Day\"),31)).asObject()}}])] || date('Period.EndDate_Year', 'Period.EndDate_Month', 'Period.EndDate_Day') in [dateRange([{{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.StartDate_Year\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Year\"),1900)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.StartDate_Month\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Month\"),01)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.StartDate_Day\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Day\"),01)).asObject()}}], [{{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.EndDate_Year\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Year\"),3000)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.EndDate_Month\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Month\"),12)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.EndDate_Day\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Day\"),31)).asObject()}}])]; forecast_start = foreach forecasts generate 'Id' as 'Id', case when string_to_number('Period.StartDate_Year') > string_to_number(\"{{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.StartDate_Year\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Year\"),1900)).asString()}}\") || ( (string_to_number('Period.StartDate_Year') == string_to_number(\"{{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.StartDate_Year\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Year\"),1900)).asString()}}\")) && (string_to_number('Period.StartDate_Month') > string_to_number(\"{{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.StartDate_Month\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Month\"),01)).asString()}}\"))) then 'Period.StartDate_Year' else \"{{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.StartDate_Year\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Year\"),1900)).asString()}}\" end as 'Date_Year', case when string_to_number('Period.StartDate_Year') > string_to_number(\"{{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.StartDate_Year\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Year\"),1900)).asString()}}\") || ( (string_to_number('Period.StartDate_Year') == string_to_number(\"{{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.StartDate_Year\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Year\"),1900)).asString()}}\")) && (string_to_number('Period.StartDate_Month') > string_to_number(\"{{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.StartDate_Month\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Month\"),01)).asString()}}\"))) then 'Period.StartDate_Month' else \"{{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.StartDate_Month\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Month\"),01)).asString()}}\" end as 'Date_Month', 'ForecastedDailyRevenue' as 'ForecastedDailyRevenue' , date_to_epoch(toDate('Period.StartDate_Year'+\"-\"+'Period.StartDate_Month'+\"-\"+'Period.StartDate_Day',\"yyyy-MM-dd\")) as 'StartDate', date_to_epoch(toDate('Period.EndDate_Year'+\"-\"+'Period.EndDate_Month'+\"-\"+'Period.EndDate_Day',\"yyyy-MM-dd\")) as 'EndDate'; forecast_end = foreach forecasts generate 'Id' as 'Id', case when string_to_number('Period.EndDate_Year') < string_to_number(\"{{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.EndDate_Year\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Year\"),3000)).asString()}}\") || ( (string_to_number('Period.EndDate_Year') == string_to_number(\"{{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.EndDate_Year\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Year\"),3000)).asString()}}\")) && (string_to_number('Period.EndDate_Month') < string_to_number(\"{{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.EndDate_Month\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Month\"),12)).asString()}}\"))) then 'Period.EndDate_Year' else \"{{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.EndDate_Year\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Year\"),3000)).asString()}}\" end as 'Date_Year', case when string_to_number('Period.EndDate_Year') < string_to_number(\"{{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.EndDate_Year\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Year\"),3000)).asString()}}\") || ( (string_to_number('Period.EndDate_Year') == string_to_number(\"{{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.EndDate_Year\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Year\"),3000)).asString()}}\")) && (string_to_number('Period.EndDate_Month') < string_to_number(\"{{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.EndDate_Month\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Month\"),12)).asString()}}\"))) then 'Period.EndDate_Month' else \"{{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.EndDate_Month\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Month\"),12)).asString()}}\" end as 'Date_Month',  'ForecastedDailyRevenue' as 'ForecastedDailyRevenue' , date_to_epoch(toDate('Period.StartDate_Year'+\"-\"+'Period.StartDate_Month'+\"-\"+'Period.StartDate_Day',\"yyyy-MM-dd\")) as 'StartDate', date_to_epoch(toDate('Period.EndDate_Year'+\"-\"+'Period.EndDate_Month'+\"-\"+'Period.EndDate_Day',\"yyyy-MM-dd\")) as 'EndDate'; forecast_for_fill = union forecast_start, forecast_end; forecast_for_fill = group forecast_for_fill by ('Id', 'Date_Year', 'Date_Month'); forecast_for_fill = foreach forecast_for_fill generate 'Id', 'Date_Year', 'Date_Month', first('ForecastedDailyRevenue') as 'ForecastedDailyRevenue', first('StartDate') as 'StartDate', first('EndDate') as 'EndDate'; Forecast_Filled = fill forecast_for_fill by (dateCols=('Date_Year', 'Date_Month', \"Y-M\"), partition='Id'); Forecast_Filled = group Forecast_Filled by ('Id', 'Date_Year', 'Date_Month'); Forecast_Filled = foreach Forecast_Filled generate 'Id', 'Date_Year', 'Date_Month', max(first('ForecastedDailyRevenue')) over ([..0] partition by 'Id' order by ('Date_Year' asc, 'Date_Month' asc)) as 'ForecastedDailyRevenue', max(first('StartDate')) over ([..0] partition by 'Id' order by ('Date_Year' asc, 'Date_Month' asc)) as 'StartDate', max(first('EndDate')) over ([..0] partition by 'Id' order by ('Date_Year' asc, 'Date_Month' asc)) as 'EndDate', date_to_epoch(toDate('Date_Year'+\"-\"+'Date_Month'+\"-01\",\"yyyy-MM-dd\")) as 'Date'; Forecast_Filled = filter Forecast_Filled by 'Date'>='StartDate' && 'Date'<='EndDate'; forecasts = foreach Forecast_Filled generate 'Id' as 'Id', 'Date_Year' as 'Period.EndDate_Year', 'Date_Month' as 'Period.EndDate_Month', month_days(toDate('Date'))*'ForecastedDailyRevenue' as 'ForecastedRevenueFinal'; result = group TargetsFilled by ('Date_Year','Date_Month') full, actuals_for_join by ('Order.EffectiveDate_Year','Order.EffectiveDate_Month') full, forecasts by ('Period.EndDate_Year','Period.EndDate_Month'); result = foreach result generate coalesce(TargetsFilled.'Date_Year', actuals_for_join.'Order.EffectiveDate_Year', forecasts.'Period.EndDate_Year')+\"~~~\"+coalesce(TargetsFilled.'Date_Month', actuals_for_join.'Order.EffectiveDate_Month', forecasts.'Period.EndDate_Month') as 'Period.StartDate_Year~~~Period.StartDate_Month', {{cell(Cummulative___Over_t_1.selection, 0, \"TargetProjection\").asObject()}} as 'Target Revenue', {{cell(Cummulative___Over_t_1.selection, 0, \"ActualsProjection\").asObject()}} as 'Actual Revenue', {{cell(Cummulative___Over_t_1.selection, 0, \"ForecastProjection\").asObject()}} as 'Forecasted Revenue' {{cell(Cummulative___Over_t_1.selection, 0, cell(Projections_Toggle_1.selection, 0,\"Projection\")).asObject()}};","receiveFacetSource":{"mode":"exclude","steps":["List_of_Main_Goals_1","TY_Account_level_tar_1","TY_Product_Targets_1","TY_Product_Targets___1","PY_Product_targets_1","Product_Family_Filte_1","Product_Name_Filter_1","PY_Product_targets___1","PY_Targets_by_Produc_1","TY_Products_by_Reps_1","TY_Accounts_by_Rep_1","PY_Targets_by_Accoun_2","PY_Targets_by_Accoun_1","Parent_Account_Filte_1","Account_Filter_1","Account_Type_Filter_1","Account_Industry_Fil_1","Account_Geo_Filter_1"]},"selectMode":"none","strings":[],"type":"saql","useGlobal":true,"visualizationParameters":{"parameters":{"stack":false,"showPoints":false,"legend":{"descOrder":false,"showHeader":true,"show":true,"customSize":"auto","position":"right-top","inside":false},"axisMode":"sync","tooltip":{"content":{"legend":{"showBinLabel":true,"measures":[],"showNullValues":true,"customizeLegend":false,"showPercentage":true,"showDimensions":true,"showMeasures":true,"dimensions":[]}}},"visualizationType":"time-combo","missingValue":"connect","timeAxis":{"showTitle":true,"showAxis":true,"title":""},"title":{"fontSize":14,"subtitleFontSize":11,"label":"","align":"center","subtitleLabel":""},"trellis":{"flipLabels":false,"showGridLines":true,"size":[100,100],"enable":false,"type":"x","chartsPerLine":4},"plots":{"Actual Revenue":{"mark":"bar"},"Forecasted Revenue":{"mark":"bar"},"Projected Revenue":{"mark":"line"},"Target Revenue":{"mark":"bar"}},"columnMap":{"timeAxis":["Period.StartDate_Year~~~Period.StartDate_Month"],"trellis":[],"plots":["Target","Actuals","Forecasted Revenue","Projections"]},"showActionMenu":true,"measureAxis2":{"sqrtScale":false,"showTitle":true,"showAxis":true,"title":"","customDomain":{"showDomain":false}},"measureAxis1":{"sqrtScale":false,"showTitle":true,"showAxis":true,"title":"","customDomain":{"showDomain":false}},"valueType":"compactNumber","valueTypeOnLine":"none","theme":"wave","compactDecimalDigits":-1,"applyConditionalFormatting":true},"type":"chart"}},"PY_Targets_by_Produc_1":{"broadcastFacet":true,"groups":[],"label":"PY Targets by Products And Reps","numbers":[],"query":"targets = load \"MFG_AccountManagerPeriodicTargetDistribution\";\ntargets = filter targets by !('AcctMgrTargetDstr.ProductId' is null);targets = filter targets by date('Period.StartDate_Year', 'Period.StartDate_Month', 'Period.StartDate_Day') in [dateRange([{{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.StartDate_Year\"),1900).asObject()}}, {{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.StartDate_Month\"),01).asObject()}}, {{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.StartDate_Day\"),01).asObject()}}], [{{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.EndDate_Year\"),3000).asObject()}}, {{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.EndDate_Month\"),12).asObject()}}, {{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.EndDate_Day\"),31).asObject()}}])];  targets = filter targets by date('Period.EndDate_Year', 'Period.EndDate_Month', 'Period.EndDate_Day') in [dateRange([{{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.StartDate_Year\"),1900).asObject()}}, {{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.StartDate_Month\"),01).asObject()}}, {{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.StartDate_Day\"),01).asObject()}}], [{{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.EndDate_Year\"),3000).asObject()}}, {{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.EndDate_Month\"),12).asObject()}}, {{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.EndDate_Day\"),31).asObject()}}])]; targets = filter targets by {{column(Team_Members_1.selection, [\"AssignedTo.Id\"]).asEquality(\"AssignedTo.Managers\")}} && ({{column(Team_Members_1.selection, [\"AssignedTo.Id\"]).asEquality(\"AssignedTo.ManagerId\")}} || {{column(Team_Members_1.selection, [\"AssignedTo.Id\"]).asEquality(\"AssignedTo.ForecastRole.ParentRole.ForecastUserId\")}}); targets = filter targets by !({{column(Team_Members_1.selection, [\"AssignedTo.Id\"]).asEquality(\"AssignedTo.Id\")}}); targets = filter targets by {{column(List_of_Main_Goals_1.selection, [\"Self_AcctMgrTarget\"]).asEquality(\"ParentTargetNames\")}}; targets = filter targets by {{column(Target_Period_Split__1.selection, [\"Self_AcctMgrTarget\"]).asEquality(\"ParentTargetNames\")}};\ntargets = group targets by ('AssignedTo.Name', 'AcctMgrTargetDstr.Product.Name');\ntargets = foreach targets generate 'AssignedTo.Name' as 'AssignedTo.Name', 'AcctMgrTargetDstr.Product.Name' as 'AcctMgrTargetDstr.Product.Name', sum('PeriodTargetCurrencyValue') as 'sum_PeriodTargetCurrencyValue';\ntargets = order targets by ('AssignedTo.Name' asc, 'AcctMgrTargetDstr.Product.Name' asc);","receiveFacetSource":{"mode":"exclude","steps":["List_of_Main_Goals_1","Period_Selection_1","TY_Account_level_tar_1","TY_Accounts_by_Rep_1","Account_Targets_Vs_A_1","PY_Targets_by_Accoun_1","PY_Targets_by_Accoun_2","PY_Account_targets_a_1","Parent_Account_Filte_1","Account_Filter_1","Account_Type_Filter_1","Account_Industry_Fil_1","Account_Geo_Filter_1"]},"selectMode":"single","strings":[],"type":"saql","useGlobal":true,"visualizationParameters":{"parameters":{"autoFitMode":"none","legend":{"descOrder":false,"showHeader":true,"show":true,"customSize":"auto","position":"right-top","inside":false},"axisMode":"multi","totalSumMode":"none","tooltip":{"content":{"legend":{"showBinLabel":true,"measures":[],"showNullValues":true,"customizeLegend":false,"showPercentage":true,"showDimensions":true,"showMeasures":true,"dimensions":[]}}},"visualizationType":"stackhbar","title":{"fontSize":14,"subtitleFontSize":11,"label":"","align":"center","subtitleLabel":""},"trellis":{"flipLabels":false,"showGridLines":true,"size":[100,100],"enable":false,"type":"x","chartsPerLine":4},"columnMap":{"split":["AcctMgrTargetDstr.Product.Name"],"trellis":[],"dimensionAxis":["AssignedTo.Name"],"plots":["sum_PeriodTargetCurrencyValue"]},"showActionMenu":true,"measureAxis2":{"sqrtScale":false,"showTitle":true,"showAxis":true,"title":"","customDomain":{"showDomain":false}},"measureAxis1":{"sqrtScale":false,"showTitle":true,"showAxis":true,"title":"","customDomain":{"showDomain":false}},"normalize":false,"valueType":"compactNumber","theme":"wave","compactDecimalDigits":-1,"dimensionAxis":{"showTitle":true,"customSize":"auto","showAxis":true,"title":"","icons":{"useIcons":false,"iconProps":{"fit":"cover","column":"","type":"round"}}},"applyConditionalFormatting":true},"type":"chart"}},"Targets_Vs_Actuals_f_1":{"broadcastFacet":true,"groups":[],"label":"Targets Vs Actuals for each Team Member","numbers":[],"query":"targets = load \"MFG_AccountManagerPeriodicTargetDistribution\"; targets = filter targets by date('Period.StartDate_Year', 'Period.StartDate_Month', 'Period.StartDate_Day') in [dateRange([{{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.StartDate_Year\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Year\"),1900)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.StartDate_Month\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Month\"),01)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.StartDate_Day\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Day\"),01)).asObject()}}], [{{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.EndDate_Year\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Year\"),3000)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.EndDate_Month\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Month\"),12)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.EndDate_Day\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Day\"),31)).asObject()}}])];  targets = filter targets by date('Period.EndDate_Year', 'Period.EndDate_Month', 'Period.EndDate_Day') in [dateRange([{{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.StartDate_Year\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Year\"),1900)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.StartDate_Month\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Month\"),01)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.StartDate_Day\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Day\"),01)).asObject()}}], [{{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.EndDate_Year\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Year\"),3000)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.EndDate_Month\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Month\"),12)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.EndDate_Day\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Day\"),31)).asObject()}}])]; \ntargets = filter targets by 'AcctMgrTargetDstr.ProductId' is null && 'AcctMgrTargetDstr.Account.Id' is null; \ntargets = filter targets by {{column(Team_Members_1.selection, [\"AssignedTo.Id\"]).asEquality(\"AssignedTo.Managers\")}} && ({{column(Team_Members_1.selection, [\"AssignedTo.Id\"]).asEquality(\"AssignedTo.ManagerId\")}} || {{column(Team_Members_1.selection, [\"AssignedTo.Id\"]).asEquality(\"AssignedTo.ForecastRole.ParentRole.ForecastUserId\")}}); targets = filter targets by !({{column(Team_Members_1.selection, [\"AssignedTo.Id\"]).asEquality(\"AssignedTo.Id\")}}); targets = filter targets by {{column(List_of_Main_Goals_1.selection, [\"Self_AcctMgrTarget\"]).asEquality(\"ParentTargetNames\")}}; targets = filter targets by {{column(Target_Period_Split__1.selection, [\"Self_AcctMgrTarget\"]).asEquality(\"ParentTargetNames\")}}; \nactuals = load \"MFG_TargetActuals\"; actuals = filter actuals by 'Order.StatusCode' == \"Activated\"; actuals = filter actuals by date('Order.EffectiveDate_Year', 'Order.EffectiveDate_Month', 'Order.EffectiveDate_Day') in [dateRange([{{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.StartDate_Year\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Year\"),1900)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.StartDate_Month\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Month\"),01)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.StartDate_Day\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Day\"),01)).asObject()}}], [{{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.EndDate_Year\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Year\"),3000)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.EndDate_Month\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Month\"),12)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.EndDate_Day\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Day\"),31)).asObject()}}])]; \nactuals = filter actuals by !({{column(Team_Members_1.selection, [\"AssignedTo.Id\"]).asEquality(\"TargetActualsOwner.Id\")}});\nresult = group targets by 'AssignedTo.Id' left, actuals by 'TargetActualsOwner.Managers';\nresult = foreach result generate targets.'AssignedTo.Id' as 'AssignedTo.Id', first(targets.'AssignedTo.Name') as 'AssignedTo.Name', sum(targets.'PeriodTargetCurrencyValue') as 'PeriodTargetCurrencyValue', sum(actuals.'TotalPrice') as 'TotalPrice';\nresult = group result by 'AssignedTo.Id';\nresult = foreach result generate 'AssignedTo.Id' as 'AssignedTo.Id', first('AssignedTo.Name') as 'AssignedTo.Name', sum('PeriodTargetCurrencyValue') as 'Target Revenue', sum('TotalPrice') as 'Actual Revenue';","receiveFacetSource":{"mode":"exclude","steps":["List_of_Main_Goals_1","PY_Targets_by_Accoun_2","PY_Targets_by_Accoun_1","TY_Accounts_by_Rep_1","TY_Product_Targets_1","TY_Product_Targets___1","PY_Product_targets_1","Product_Family_Filte_1","Product_Name_Filter_1","PY_Product_targets___1","PY_Targets_by_Produc_1","TY_Products_by_Reps_1","TY_Account_level_tar_1","Parent_Account_Filte_1","Account_Filter_1","Account_Type_Filter_1","Account_Industry_Fil_1","Account_Geo_Filter_1"]},"selectMode":"single","start":"[]","strings":[],"type":"saql","useGlobal":true,"visualizationParameters":{"parameters":{"autoFitMode":"keepLabels","bins":{"breakpoints":{"high":100,"low":0},"bands":{"high":{"color":"#008000","label":""},"low":{"color":"#B22222","label":""},"medium":{"color":"#ffa500","label":""}}},"legend":{"descOrder":false,"showHeader":true,"show":true,"customSize":"auto","position":"right-top","inside":false},"axisMode":"multi","tooltip":{"content":{"legend":{"showBinLabel":true,"measures":[],"showNullValues":true,"customizeLegend":false,"showPercentage":true,"showDimensions":true,"showMeasures":true,"dimensions":[]}}},"visualizationType":"hbar","title":{"fontSize":14,"subtitleFontSize":11,"label":"","align":"center","subtitleLabel":""},"binValues":false,"trellis":{"flipLabels":false,"showGridLines":true,"size":[100,100],"enable":false,"type":"x","chartsPerLine":4},"columnMap":{"trellis":[],"dimensionAxis":["AssignedTo.Name"],"plots":["Target Revenue","Actual Revenue"]},"showActionMenu":true,"measureAxis2":{"sqrtScale":false,"showTitle":true,"showAxis":true,"title":"","customDomain":{"showDomain":false}},"measureAxis1":{"sqrtScale":false,"showTitle":true,"showAxis":true,"title":"","customDomain":{"showDomain":false}},"valueType":"compactNumber","theme":"wave","compactDecimalDigits":-1,"dimensionAxis":{"showTitle":true,"customSize":"auto","showAxis":true,"title":"","icons":{"useIcons":false,"iconProps":{"fit":"cover","column":"","type":"round"}}},"applyConditionalFormatting":true},"type":"chart"}},"Self_Current_Attainm_1":{"broadcastFacet":true,"groups":[],"label":"Self Current Attainment","numbers":[],"query":"targets = load \"MFG_AccountManagerPeriodicTargetDistribution\"; targets = filter targets by date('Period.StartDate_Year', 'Period.StartDate_Month', 'Period.StartDate_Day') in [dateRange([{{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.StartDate_Year\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Year\"),1900)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.StartDate_Month\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Month\"),01)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.StartDate_Day\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Day\"),01)).asObject()}}], [{{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.EndDate_Year\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Year\"),3000)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.EndDate_Month\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Month\"),12)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.EndDate_Day\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Day\"),31)).asObject()}}])];  targets = filter targets by date('Period.EndDate_Year', 'Period.EndDate_Month', 'Period.EndDate_Day') in [dateRange([{{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.StartDate_Year\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Year\"),1900)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.StartDate_Month\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Month\"),01)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.StartDate_Day\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Day\"),01)).asObject()}}], [{{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.EndDate_Year\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Year\"),3000)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.EndDate_Month\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Month\"),12)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.EndDate_Day\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Day\"),31)).asObject()}}])]; \ntargets = filter targets by 'AcctMgrTargetDstr.ProductId' is null && 'AcctMgrTargetDstr.Account.Id' is null; \ntargets = filter targets by {{column(Team_Members_1.selection, [\"AssignedTo.Id\"]).asEquality(\"AssignedTo.Id\")}}; targets = filter targets by {{column(Target_Period_Split__1.selection, [\"Self_AcctMgrTarget\"]).asEquality(\"ParentTargetNames\")}}; \nactuals = load \"MFG_TargetActuals\";\nactuals = filter actuals by {{column(Team_Members_1.selection, [\"AssignedTo.Id\"]).asEquality(\"TargetActualsOwner.Managers\")}}; actuals = filter actuals by 'Order.StatusCode' == \"Activated\"; actuals_for_projection = group actuals by ('TargetActualsOwner.Managers', 'Order.EffectiveDate_Year', 'Order.EffectiveDate_Month'); actuals_for_projection = foreach actuals_for_projection generate 'TargetActualsOwner.Managers' as 'TargetActualsOwner.Managers', 'Order.EffectiveDate_Year', 'Order.EffectiveDate_Month', sum('TotalPrice') as 'Total Price'; actuals_for_projection = fill actuals_for_projection by (dateCols=('Order.EffectiveDate_Year','Order.EffectiveDate_Month', \"Y-M\"), partition='TargetActualsOwner.Managers'); actuals_for_projection = timeseries actuals_for_projection generate 'Total Price' as 'Projected Total Price' with (partition='TargetActualsOwner.Managers', length=36, dateCols=('Order.EffectiveDate_Year','Order.EffectiveDate_Month', \"Y-M\"), seasonality = 0, ignoreLast = false); actuals_for_projection = foreach actuals_for_projection generate 'TargetActualsOwner.Managers' as 'TargetActualsOwner.Managers', 'Order.EffectiveDate_Year', 'Order.EffectiveDate_Month', 'Total Price' as 'Total Price', case when 'Total Price' > coalesce('Projected Total Price',0) then 'Total Price' when coalesce('Projected Total Price',0) >= 0 then 'Projected Total Price' else 0 end as 'Projected Total Price', month_last_day(toDate('Order.EffectiveDate_Year'+\"-\"+'Order.EffectiveDate_Month'+\"-27 00:00:00\",\"yyyy-MM-dd HH:mm:ss\")) as 'Month Last Day'; actuals_for_projection = filter actuals_for_projection by 'Month Last Day' > now(); actuals_for_projection = filter actuals_for_projection by toDate('Order.EffectiveDate_Year'+\"-\"+'Order.EffectiveDate_Month'+\"-01 00:00:00\",\"yyyy-MM-dd HH:mm:ss\") >= toDate(\"{{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.StartDate_Year\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Year\"),1900)).asObject()}}\"+\"-\"+\"{{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.StartDate_Month\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Month\"),\"01\")).asObject()}}\"+\"-\"+\"{{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.StartDate_Day\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Day\"),\"01\")).asObject()}}\"+\" 00:00:00\",\"yyyy-MM-dd HH:mm:ss\") && toDate('Order.EffectiveDate_Year'+\"-\"+'Order.EffectiveDate_Month'+\"-01 00:00:00\",\"yyyy-MM-dd HH:mm:ss\") <= toDate(\"{{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.EndDate_Year\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Year\"),3000)).asObject()}}\"+\"-\"+\"{{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.EndDate_Month\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Month\"),12)).asObject()}}\"+\"-\"+\"{{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.EndDate_Day\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Day\"),31)).asObject()}}\"+\" 00:00:00\",\"yyyy-MM-dd HH:mm:ss\"); actuals = filter actuals by date('Order.EffectiveDate_Year', 'Order.EffectiveDate_Month', 'Order.EffectiveDate_Day') in [dateRange([{{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.StartDate_Year\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Year\"),1900)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.StartDate_Month\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Month\"),01)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.StartDate_Day\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Day\"),01)).asObject()}}], [{{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.EndDate_Year\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Year\"),3000)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.EndDate_Month\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Month\"),12)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.EndDate_Day\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Day\"),31)).asObject()}}])]; actuals_for_join = group actuals by ('TargetActualsOwner.Managers', 'Order.EffectiveDate_Year', 'Order.EffectiveDate_Month') full, actuals_for_projection by ('TargetActualsOwner.Managers', 'Order.EffectiveDate_Year', 'Order.EffectiveDate_Month'); actuals_for_join = foreach actuals_for_join generate coalesce(actuals.'TargetActualsOwner.Managers', actuals_for_projection.'TargetActualsOwner.Managers') as 'TargetActualsOwner.Managers', coalesce(actuals.'Order.EffectiveDate_Year',actuals_for_projection.'Order.EffectiveDate_Year') as 'Order.EffectiveDate_Year', coalesce(actuals.'Order.EffectiveDate_Month',actuals_for_projection.'Order.EffectiveDate_Month') as 'Order.EffectiveDate_Month',  sum(actuals_for_projection.'Projected Total Price') as 'Projections', sum(actuals.'TotalPrice') as 'Actuals', coalesce(sum(actuals_for_projection.'Projected Total Price'),sum(actuals.'TotalPrice')) as 'Actuals & Projections'; forecasts = load \"MFG_Targets_AccountProductPeriodForecast\"; forecasts = filter forecasts by {{column(Team_Members_1.selection, [\"AssignedTo.Id\"]).asEquality(\"TargetsAccount.Owner.Managers\")}}; forecasts = filter forecasts by date('Period.StartDate_Year', 'Period.StartDate_Month', 'Period.StartDate_Day') in [dateRange([{{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.StartDate_Year\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Year\"),1900)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.StartDate_Month\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Month\"),01)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.StartDate_Day\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Day\"),01)).asObject()}}], [{{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.EndDate_Year\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Year\"),3000)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.EndDate_Month\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Month\"),12)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.EndDate_Day\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Day\"),31)).asObject()}}])] || date('Period.EndDate_Year', 'Period.EndDate_Month', 'Period.EndDate_Day') in [dateRange([{{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.StartDate_Year\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Year\"),1900)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.StartDate_Month\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Month\"),01)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.StartDate_Day\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Day\"),01)).asObject()}}], [{{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.EndDate_Year\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Year\"),3000)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.EndDate_Month\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Month\"),12)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.EndDate_Day\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Day\"),31)).asObject()}}])]; forecast_start = foreach forecasts generate 'Id' as 'Id', case when string_to_number('Period.StartDate_Year') > string_to_number(\"{{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.StartDate_Year\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Year\"),1900)).asString()}}\") || ( (string_to_number('Period.StartDate_Year') == string_to_number(\"{{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.StartDate_Year\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Year\"),1900)).asString()}}\")) && (string_to_number('Period.StartDate_Month') > string_to_number(\"{{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.StartDate_Month\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Month\"),01)).asString()}}\"))) then 'Period.StartDate_Year' else \"{{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.StartDate_Year\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Year\"),1900)).asString()}}\" end as 'Date_Year', case when string_to_number('Period.StartDate_Year') > string_to_number(\"{{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.StartDate_Year\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Year\"),1900)).asString()}}\") || ( (string_to_number('Period.StartDate_Year') == string_to_number(\"{{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.StartDate_Year\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Year\"),1900)).asString()}}\")) && (string_to_number('Period.StartDate_Month') > string_to_number(\"{{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.StartDate_Month\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Month\"),01)).asString()}}\"))) then 'Period.StartDate_Month' else \"{{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.StartDate_Month\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Month\"),01)).asString()}}\" end as 'Date_Month', 'ForecastedDailyRevenue' as 'ForecastedDailyRevenue' , date_to_epoch(toDate('Period.StartDate_Year'+\"-\"+'Period.StartDate_Month'+\"-\"+'Period.StartDate_Day',\"yyyy-MM-dd\")) as 'StartDate', date_to_epoch(toDate('Period.EndDate_Year'+\"-\"+'Period.EndDate_Month'+\"-\"+'Period.EndDate_Day',\"yyyy-MM-dd\")) as 'EndDate'; forecast_end = foreach forecasts generate 'Id' as 'Id', case when string_to_number('Period.EndDate_Year') < string_to_number(\"{{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.EndDate_Year\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Year\"),3000)).asString()}}\") || ( (string_to_number('Period.EndDate_Year') == string_to_number(\"{{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.EndDate_Year\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Year\"),3000)).asString()}}\")) && (string_to_number('Period.EndDate_Month') < string_to_number(\"{{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.EndDate_Month\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Month\"),12)).asString()}}\"))) then 'Period.EndDate_Year' else \"{{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.EndDate_Year\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Year\"),3000)).asString()}}\" end as 'Date_Year', case when string_to_number('Period.EndDate_Year') < string_to_number(\"{{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.EndDate_Year\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Year\"),3000)).asString()}}\") || ( (string_to_number('Period.EndDate_Year') == string_to_number(\"{{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.EndDate_Year\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Year\"),3000)).asString()}}\")) && (string_to_number('Period.EndDate_Month') < string_to_number(\"{{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.EndDate_Month\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Month\"),12)).asString()}}\"))) then 'Period.EndDate_Month' else \"{{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.EndDate_Month\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Month\"),12)).asString()}}\" end as 'Date_Month',  'ForecastedDailyRevenue' as 'ForecastedDailyRevenue' , date_to_epoch(toDate('Period.StartDate_Year'+\"-\"+'Period.StartDate_Month'+\"-\"+'Period.StartDate_Day',\"yyyy-MM-dd\")) as 'StartDate', date_to_epoch(toDate('Period.EndDate_Year'+\"-\"+'Period.EndDate_Month'+\"-\"+'Period.EndDate_Day',\"yyyy-MM-dd\")) as 'EndDate'; forecast_for_fill = union forecast_start, forecast_end; forecast_for_fill = group forecast_for_fill by ('Id', 'Date_Year', 'Date_Month'); forecast_for_fill = foreach forecast_for_fill generate 'Id', 'Date_Year', 'Date_Month', first('ForecastedDailyRevenue') as 'ForecastedDailyRevenue', first('StartDate') as 'StartDate', first('EndDate') as 'EndDate'; Forecast_Filled = fill forecast_for_fill by (dateCols=('Date_Year', 'Date_Month', \"Y-M\"), partition='Id'); Forecast_Filled = group Forecast_Filled by ('Id', 'Date_Year', 'Date_Month'); Forecast_Filled = foreach Forecast_Filled generate 'Id', 'Date_Year', 'Date_Month', max(first('ForecastedDailyRevenue')) over ([..0] partition by 'Id' order by ('Date_Year' asc, 'Date_Month' asc)) as 'ForecastedDailyRevenue', max(first('StartDate')) over ([..0] partition by 'Id' order by ('Date_Year' asc, 'Date_Month' asc)) as 'StartDate', max(first('EndDate')) over ([..0] partition by 'Id' order by ('Date_Year' asc, 'Date_Month' asc)) as 'EndDate', date_to_epoch(toDate('Date_Year'+\"-\"+'Date_Month'+\"-01\",\"yyyy-MM-dd\")) as 'Date'; Forecast_Filled = filter Forecast_Filled by 'Date'>='StartDate' && 'Date'<='EndDate'; forecasts = foreach Forecast_Filled generate 'Id' as 'Id', 'Date_Year' as 'Period.EndDate_Year', 'Date_Month' as 'Period.EndDate_Month', month_days(toDate('Date'))*'ForecastedDailyRevenue' as 'ForecastedRevenueFinal'; result = group targets by all full, actuals_for_join by all full, forecasts by all;result = foreach result generate sum(targets.'PeriodTargetCurrencyValue') as 'sum_PeriodTargetCurrencyValue', sum(actuals_for_join.'Actuals') as 'sum_TotalPrice', sum(actuals_for_join.'Actuals')/sum(targets.'PeriodTargetCurrencyValue') as 'Current Attainment', sum(actuals_for_join.'Actuals & Projections') as 'sum_Projected Actuals', sum(actuals_for_join.'Actuals & Projections')/sum(targets.'PeriodTargetCurrencyValue') as 'Projected Attainment', sum(forecasts.'ForecastedRevenueFinal') as 'Forecasted Revenue';","receiveFacetSource":{"mode":"exclude","steps":["Team_Attainment_1","Targets_Vs_Actuals_f_1","Team_projected_attai_1","PY_Team_Attainment_1","PY_Targets_Vs_Actual_1","TY_Account_level_tar_1","TY_Product_Targets_1","TY_Product_Targets___1","PY_Product_targets_1","Product_Family_Filte_1","Product_Name_Filter_1","PY_Product_targets___1","PY_Targets_by_Produc_1","TY_Products_by_Reps_1","PY_Targets_by_Accoun_1","PY_Targets_by_Accoun_2","TY_Accounts_by_Rep_1","Scatter_plot__of_Current__1","Parent_Account_Filte_1","Account_Filter_1","Account_Type_Filter_1","Account_Industry_Fil_1","Account_Geo_Filter_1"]},"selectMode":"single","strings":[],"type":"saql","useGlobal":true,"visualizationParameters":{"parameters":{"autoFitMode":"keepLabels","bins":{"breakpoints":{"high":100,"low":0},"bands":{"high":{"color":"#008000","label":""},"low":{"color":"#B22222","label":""},"medium":{"color":"#ffa500","label":""}}},"legend":{"descOrder":false,"showHeader":true,"show":true,"customSize":"auto","position":"right-top","inside":false},"axisMode":"multi","tooltip":{"content":{"legend":{"showBinLabel":true,"measures":[],"showNullValues":true,"customizeLegend":false,"showPercentage":true,"showDimensions":true,"showMeasures":true,"dimensions":[]}}},"visualizationType":"hbar","title":{"fontSize":14,"subtitleFontSize":11,"label":"","align":"center","subtitleLabel":""},"binValues":false,"trellis":{"flipLabels":false,"showGridLines":true,"size":[100,100],"enable":false,"type":"x","chartsPerLine":4},"showActionMenu":true,"measureAxis2":{"sqrtScale":false,"showTitle":true,"showAxis":true,"title":"","customDomain":{"showDomain":false}},"measureAxis1":{"sqrtScale":false,"showTitle":true,"showAxis":true,"title":"","customDomain":{"showDomain":false}},"valueType":"compactNumber","theme":"wave","compactDecimalDigits":-1,"dimensionAxis":{"showTitle":true,"customSize":"auto","showAxis":true,"title":"","icons":{"useIcons":false,"iconProps":{"fit":"cover","column":"","type":"round"}}},"applyConditionalFormatting":true},"type":"chart"}},"Period_Selection_1":{"broadcastFacet":true,"groups":[],"label":"Period Selection","numbers":[],"query":"q = load \"MFG_AccountManagerPeriodicTargetDistribution\";\nq = group q by ('AcctMgrTarget.Period.FullyQualifiedLabel', 'AcctMgrTarget.Period.StartDate_Year', 'AcctMgrTarget.Period.StartDate_Month', 'AcctMgrTarget.Period.StartDate_Day', 'AcctMgrTarget.Period.EndDate_Year', 'AcctMgrTarget.Period.EndDate_Month', 'AcctMgrTarget.Period.EndDate_Day');\nq = foreach q generate 'AcctMgrTarget.Period.FullyQualifiedLabel' as 'AcctMgrTarget.Period.FullyQualifiedLabel', \n'AcctMgrTarget.Period.StartDate_Year' as 'AcctMgrTarget.Period.StartDate_Year' , 'AcctMgrTarget.Period.StartDate_Month' as 'AcctMgrTarget.Period.StartDate_Month', 'AcctMgrTarget.Period.StartDate_Day' as 'AcctMgrTarget.Period.StartDate_Day', 'AcctMgrTarget.Period.EndDate_Year' as 'AcctMgrTarget.Period.EndDate_Year', 'AcctMgrTarget.Period.EndDate_Month' as 'AcctMgrTarget.Period.EndDate_Month', 'AcctMgrTarget.Period.EndDate_Day' as 'AcctMgrTarget.Period.EndDate_Day', count() as 'count';\nq = order q by 'AcctMgrTarget.Period.FullyQualifiedLabel' desc;\nq = limit q 2000;","receiveFacetSource":{"mode":"all","steps":[]},"selectMode":"singlerequired","start":"[]","strings":[],"type":"saql","useGlobal":true,"visualizationParameters":{"parameters":{"autoFitMode":"keepLabels","bins":{"breakpoints":{"high":100,"low":0},"bands":{"high":{"color":"#008000","label":""},"low":{"color":"#B22222","label":""},"medium":{"color":"#ffa500","label":""}}},"legend":{"descOrder":false,"showHeader":true,"show":true,"customSize":"auto","position":"right-top","inside":false},"axisMode":"multi","tooltip":{"content":{"legend":{"showBinLabel":true,"measures":[],"showNullValues":true,"customizeLegend":false,"showPercentage":true,"showDimensions":true,"showMeasures":true,"dimensions":[]}}},"visualizationType":"hbar","title":{"fontSize":14,"subtitleFontSize":11,"label":"","align":"center","subtitleLabel":""},"binValues":false,"trellis":{"flipLabels":false,"showGridLines":true,"size":[100,100],"enable":false,"type":"x","chartsPerLine":4},"showActionMenu":true,"measureAxis2":{"sqrtScale":false,"showTitle":true,"showAxis":true,"title":"","customDomain":{"showDomain":false}},"measureAxis1":{"sqrtScale":false,"showTitle":true,"showAxis":true,"title":"","customDomain":{"showDomain":false}},"valueType":"compactNumber","theme":"wave","compactDecimalDigits":-1,"dimensionAxis":{"showTitle":true,"customSize":"auto","showAxis":true,"title":"","icons":{"useIcons":false,"iconProps":{"fit":"cover","column":"","type":"round"}}},"applyConditionalFormatting":true},"type":"chart"}},"Account_Targets_Vs_A_1":{"broadcastFacet":false,"groups":[],"label":"Account Targets Vs Actuals Over Time","numbers":[],"query":"targets = load \"MFG_AccountManagerPeriodicTargetDistribution\";\ntargets = filter targets by !('AcctMgrTargetDstr.Account.Id' is null);targets = filter targets by date('Period.StartDate_Year', 'Period.StartDate_Month', 'Period.StartDate_Day') in [dateRange([{{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.StartDate_Year\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Year\"),1900)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.StartDate_Month\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Month\"),01)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.StartDate_Day\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Day\"),01)).asObject()}}], [{{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.EndDate_Year\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Year\"),3000)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.EndDate_Month\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Month\"),12)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.EndDate_Day\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Day\"),31)).asObject()}}])];  targets = filter targets by date('Period.EndDate_Year', 'Period.EndDate_Month', 'Period.EndDate_Day') in [dateRange([{{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.StartDate_Year\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Year\"),1900)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.StartDate_Month\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Month\"),01)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.StartDate_Day\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Day\"),01)).asObject()}}], [{{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.EndDate_Year\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Year\"),3000)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.EndDate_Month\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Month\"),12)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.EndDate_Day\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Day\"),31)).asObject()}}])]; \ntargets = filter targets by {{column(Team_Members_1.selection, [\"AssignedTo.Id\"]).asEquality(\"AssignedTo.Managers\")}} && ({{column(Team_Members_1.selection, [\"AssignedTo.Id\"]).asEquality(\"AssignedTo.ManagerId\")}} || {{column(Team_Members_1.selection, [\"AssignedTo.Id\"]).asEquality(\"AssignedTo.ForecastRole.ParentRole.ForecastUserId\")}}); targets = filter targets by !({{column(Team_Members_1.selection, [\"AssignedTo.Id\"]).asEquality(\"AssignedTo.Id\")}}); targets = filter targets by {{column(List_of_Main_Goals_1.selection, [\"Self_AcctMgrTarget\"]).asEquality(\"ParentTargetNames\")}}; targets = filter targets by {{column(Target_Period_Split__1.selection, [\"Self_AcctMgrTarget\"]).asEquality(\"ParentTargetNames\")}};\nstartTargets = foreach targets generate 'Id'+'Period.StartDate_Year'+'Period.StartDate_Month'+\"@#%\"+'AcctMgrTargetDstr.Account.Id'+\"!#%\"+'AcctMgrTargetDstr.Account.Name' as 'Id',  'Period.StartDate_Year' as 'Date_Year', 'Period.StartDate_Month' as 'Date_Month', 'MonthlyTargetCurrencyValue' as 'MonthlyTargetCurrencyValue', 'Period.StartDate_sec_epoch' as 'Min Start Sec Epoch', 'Period.EndDate_sec_epoch' as 'Max End Sec Epoch';\nendTargets = foreach targets generate 'Id'+'Period.StartDate_Year'+'Period.StartDate_Month'+\"@#%\"+'AcctMgrTargetDstr.Account.Id'+\"!#%\"+'AcctMgrTargetDstr.Account.Name' as 'Id',  'Period.EndDate_Year' as 'Date_Year', 'Period.EndDate_Month' as 'Date_Month', 'MonthlyTargetCurrencyValue' as 'MonthlyTargetCurrencyValue', 'Period.StartDate_sec_epoch' as 'Min Start Sec Epoch', 'Period.EndDate_sec_epoch' as 'Max End Sec Epoch';\nTargetsForFill = union startTargets, endTargets;\nTargetsForFill = foreach TargetsForFill generate 'Id' as 'Id', 'Date_Year' as 'Date_Year', 'Date_Month' as 'Date_Month', 'MonthlyTargetCurrencyValue' as 'MonthlyTargetCurrencyValue', 'Min Start Sec Epoch' as 'Min Start Sec Epoch', 'Max End Sec Epoch' as 'Max End Sec Epoch';\nTargetsFilled = fill TargetsForFill by (dateCols=('Date_Year','Date_Month', \"Y-M\"), partition='Id');\nTargetsFilled = group TargetsFilled by ('Id', 'Date_Year', 'Date_Month');\nTargetsFilled = foreach TargetsFilled generate substr('Id',1,index_of('Id',\"@#%\",1,1)-1) as 'Id', substr('Id', index_of('Id',\"@#%\",1,1)+3, index_of('Id',\"!#%\") - (index_of('Id',\"@#%\",1,1)+3)) as 'AcctMgrTargetDstr.Account.Id', substr('Id', index_of('Id',\"!#%\")+3) as 'AcctMgrTargetDstr.Account.Name','Date_Year', 'Date_Month', max(sum('MonthlyTargetCurrencyValue')) over([..] partition by 'Id') as 'MonthlyTargetCurrencyValue', max(sum('Min Start Sec Epoch')) over([..] partition by 'Id') as 'Min Start Sec Epoch', max(sum('Max End Sec Epoch')) over([..] partition by 'Id') as 'Max End Sec Epoch';\nTargetsFilled = filter TargetsFilled by toDate('Date_Year'+\"-\"+'Date_Month'+\"-01 23:59:59\",\"yyyy-MM-dd HH:mm:ss\") >= toDate('Min Start Sec Epoch');\nTargetsFilled = filter TargetsFilled by toDate('Date_Year'+\"-\"+'Date_Month'+\"-01 00:00:00\",\"yyyy-MM-dd HH:mm:ss\") <= toDate('Max End Sec Epoch');\nactuals = load \"MFG_TargetActuals\"; actuals = filter actuals by !({{column(Team_Members_1.selection, [\"AssignedTo.Id\"]).asEquality(\"TargetActualsOwner.Id\")}}); actuals = filter actuals by {{column(Team_Members_1.selection, [\"AssignedTo.Id\"]).asEquality(\"TargetActualsOwner.Managers\")}}; actuals = filter actuals by 'Order.StatusCode' == \"Activated\";\nactuals_for_projection = group actuals by ('Order.Account.Id', 'Order.EffectiveDate_Year', 'Order.EffectiveDate_Month');\nactuals_for_projection = foreach actuals_for_projection generate 'Order.Account.Id' as 'Order.Account.Id', 'Order.EffectiveDate_Year', 'Order.EffectiveDate_Month', sum('TotalPrice') as 'Total Price';\nactuals_for_projection = fill actuals_for_projection by (dateCols=('Order.EffectiveDate_Year','Order.EffectiveDate_Month', \"Y-M\"), partition='Order.Account.Id');\nactuals_for_projection = timeseries actuals_for_projection generate 'Total Price' as 'Projected Total Price' with (partition='Order.Account.Id', length=36, dateCols=('Order.EffectiveDate_Year','Order.EffectiveDate_Month', \"Y-M\"), seasonality = 0, ignoreLast = false);\nactuals_for_projection = foreach actuals_for_projection generate 'Order.Account.Id' as 'Order.Account.Id', 'Order.EffectiveDate_Year', 'Order.EffectiveDate_Month', 'Total Price' as 'Total Price', case when 'Total Price' > coalesce('Projected Total Price',0) then 'Total Price' when coalesce('Projected Total Price',0) >= 0 then 'Projected Total Price' else 0 end as 'Projected Total Price', month_last_day(toDate('Order.EffectiveDate_Year'+\"-\"+'Order.EffectiveDate_Month'+\"-27 00:00:00\",\"yyyy-MM-dd HH:mm:ss\")) as 'Month Last Day'; actuals_for_projection = filter actuals_for_projection by 'Month Last Day' > now(); actuals_for_projection = filter actuals_for_projection by toDate('Order.EffectiveDate_Year'+\"-\"+'Order.EffectiveDate_Month'+\"-01 00:00:00\",\"yyyy-MM-dd HH:mm:ss\") >= toDate(\"{{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.StartDate_Year\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Year\"),1900)).asObject()}}\"+\"-\"+\"{{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.StartDate_Month\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Month\"),\"01\")).asObject()}}\"+\"-\"+\"{{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.StartDate_Day\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Day\"),\"01\")).asObject()}}\"+\" 00:00:00\",\"yyyy-MM-dd HH:mm:ss\") && toDate('Order.EffectiveDate_Year'+\"-\"+'Order.EffectiveDate_Month'+\"-01 00:00:00\",\"yyyy-MM-dd HH:mm:ss\") <= toDate(\"{{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.EndDate_Year\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Year\"),3000)).asObject()}}\"+\"-\"+\"{{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.EndDate_Month\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Month\"),12)).asObject()}}\"+\"-\"+\"{{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.EndDate_Day\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Day\"),31)).asObject()}}\"+\" 00:00:00\",\"yyyy-MM-dd HH:mm:ss\"); actuals = filter actuals by date('Order.EffectiveDate_Year', 'Order.EffectiveDate_Month', 'Order.EffectiveDate_Day') in [dateRange([{{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.StartDate_Year\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Year\"),1900)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.StartDate_Month\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Month\"),01)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.StartDate_Day\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Day\"),01)).asObject()}}], [{{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.EndDate_Year\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Year\"),3000)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.EndDate_Month\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Month\"),12)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.EndDate_Day\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Day\"),31)).asObject()}}])];\nactuals_for_join = group actuals by ('Order.Account.Id', 'Order.EffectiveDate_Year', 'Order.EffectiveDate_Month') full, \nactuals_for_projection by ('Order.Account.Id', 'Order.EffectiveDate_Year', 'Order.EffectiveDate_Month');\nactuals_for_join = foreach actuals_for_join generate coalesce(actuals.'Order.Account.Id', actuals_for_projection.'Order.Account.Id') as 'Order.Account.Id', coalesce(actuals.'Order.EffectiveDate_Year',actuals_for_projection.'Order.EffectiveDate_Year') as 'Order.EffectiveDate_Year', coalesce(actuals.'Order.EffectiveDate_Month',actuals_for_projection.'Order.EffectiveDate_Month') as 'Order.EffectiveDate_Month',  sum(actuals_for_projection.'Projected Total Price') as 'Projections', sum(actuals.'TotalPrice') as 'Actuals', coalesce(sum(actuals_for_projection.'Projected Total Price'),sum(actuals.'TotalPrice')) as 'Actuals & Projection';\n\nresult = group TargetsFilled by ('AcctMgrTargetDstr.Account.Id', 'Date_Year','Date_Month') left, \nactuals_for_join by ('Order.Account.Id','Order.EffectiveDate_Year','Order.EffectiveDate_Month');\n\nresult = foreach result generate TargetsFilled.'AcctMgrTargetDstr.Account.Id' as 'AcctMgrTargetDstr.Account.Id', TargetsFilled.'Date_Year' as 'Date_Year', TargetsFilled.'Date_Month' as  'Date_Month', sum(TargetsFilled.'MonthlyTargetCurrencyValue') as 'MonthlyTargetCurrencyValue', coalesce(sum(actuals_for_join.'Actuals'),0) as 'Actuals',  sum(actuals_for_join.'Projections') as 'Projections', coalesce(sum(actuals_for_join.'Actuals & Projection'),0) as 'Actuals & Projection';\n\nresult = group result by ('Date_Year', 'Date_Month');\nresult = foreach result generate 'Date_Year'+\"~~~\"+'Date_Month' as 'Period.StartDate_Year~~~Period.StartDate_Month', sum(sum('MonthlyTargetCurrencyValue')) over([..0] partition by all order by ('Date_Year' asc, 'Date_Month' asc)) as 'Target Revenue', sum(sum('Actuals')) over([..0] partition by all order by ('Date_Year' asc, 'Date_Month' asc)) as 'Actual Revenue' ,case when coalesce(sum(sum('Projections')) over([..0] partition by all order by ('Date_Year' asc, 'Date_Month' asc)),0) > 0 then sum(sum('Actuals & Projection')) over([..0] partition by all order by ('Date_Year' asc, 'Date_Month' asc)) else sum(sum('Projections')) over([..0] partition by all order by ('Date_Year' asc, 'Date_Month' asc)) end as 'Projected Revenue';","receiveFacetSource":{"mode":"exclude","steps":["List_of_Main_Goals_1","Period_Selection_1","Product_Name_Filter_1","PY_Product_targets_1","PY_Product_targets___1","PY_Targets_by_Produc_1","PY_Product_targets_a_1","TY_Product_Targets_1","TY_Product_Targets___1","TY_Products_by_Reps_1","TY_Product_Targets_V_1","Product_Family_Filte_1"]},"selectMode":"none","strings":[],"type":"saql","useGlobal":true,"visualizationParameters":{"parameters":{"stack":false,"showPoints":true,"legend":{"descOrder":false,"showHeader":true,"show":true,"customSize":"auto","position":"right-top","inside":false},"axisMode":"sync","tooltip":{"content":{"legend":{"showBinLabel":true,"measures":[],"showNullValues":true,"customizeLegend":false,"showPercentage":true,"showDimensions":true,"showMeasures":true,"dimensions":[]}}},"visualizationType":"time-combo","missingValue":"connect","timeAxis":{"showTitle":true,"showAxis":true,"title":""},"title":{"fontSize":14,"subtitleFontSize":11,"label":"","align":"center","subtitleLabel":""},"trellis":{"flipLabels":false,"showGridLines":true,"size":[100,100],"enable":false,"type":"x","chartsPerLine":4},"plots":{"Actual Revenue":{"mark":"bar"},"Projected Revenue":{"mark":"line"},"Target Revenue":{"mark":"bar"}},"columnMap":{"timeAxis":["Period.StartDate_Year~~~Period.StartDate_Month"],"trellis":[],"plots":["Target Revenue","Actual Revenue","Projected Revenue"]},"showActionMenu":true,"measureAxis2":{"sqrtScale":false,"showTitle":true,"showAxis":true,"title":"","customDomain":{"showDomain":false}},"measureAxis1":{"sqrtScale":false,"showTitle":true,"showAxis":true,"title":"","customDomain":{"showDomain":false}},"valueType":"compactNumber","valueTypeOnLine":"none","theme":"wave","compactDecimalDigits":-1,"applyConditionalFormatting":true},"type":"chart"}},"Attaintment___Actual_1":{"broadcastFacet":true,"columns":{"Projection":{"type":"string"},"Display":{"type":"string"}},"label":"Attaintment / Actuals Toggle","selectMode":"singlerequired","type":"staticflex","values":["{\"Display\":\"Attainment\",\"Projection\":\"sum('Attainment') as 'Current Attainment'\"}","{\"Display\":\"Actual Revenue\",\"Projection\":\"sum('Actuals') as 'Actual Revenue'\"}"]},"PY_Product_targets___1":{"broadcastFacet":true,"groups":["AcctMgrTargetDstr.ProductId"],"label":"PY Product targets (QTY)","numbers":["TY Target#","PY Target#","Change from PY","PY Actuals#","PY Attainment"],"query":"targets = load \"MFG_AccountManagerPeriodicTargetDistribution\"; CYtargets = filter targets by !('AcctMgrTargetDstr.ProductId' is null); CYtargets = filter CYtargets by date('Period.StartDate_Year', 'Period.StartDate_Month', 'Period.StartDate_Day') in [dateRange([{{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.StartDate_Year\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Year\"),1900)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.StartDate_Month\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Month\"),01)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.StartDate_Day\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Day\"),01)).asObject()}}], [{{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.EndDate_Year\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Year\"),3000)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.EndDate_Month\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Month\"),12)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.EndDate_Day\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Day\"),31)).asObject()}}])]; CYtargets = filter CYtargets by date('Period.EndDate_Year', 'Period.EndDate_Month', 'Period.EndDate_Day') in [dateRange([{{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.StartDate_Year\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Year\"),1900)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.StartDate_Month\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Month\"),01)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.StartDate_Day\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Day\"),01)).asObject()}}], [{{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.EndDate_Year\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Year\"),3000)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.EndDate_Month\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Month\"),12)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.EndDate_Day\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Day\"),31)).asObject()}}])]; CYtargets = filter CYtargets by {{column(Team_Members_1.selection, [\"AssignedTo.Id\"]).asEquality(\"AssignedTo.Managers\")}} && ({{column(Team_Members_1.selection, [\"AssignedTo.Id\"]).asEquality(\"AssignedTo.ManagerId\")}} || {{column(Team_Members_1.selection, [\"AssignedTo.Id\"]).asEquality(\"AssignedTo.ForecastRole.ParentRole.ForecastUserId\")}}); CYtargets = filter CYtargets by !({{column(Team_Members_1.selection, [\"AssignedTo.Id\"]).asEquality(\"AssignedTo.Id\")}}); CYtargets = filter CYtargets by {{column(List_of_Main_Goals_1.selection, [\"Self_AcctMgrTarget\"]).asEquality(\"ParentTargetNames\")}}; CYtargets = filter CYtargets by {{column(Target_Period_Split__1.selection, [\"Self_AcctMgrTarget\"]).asEquality(\"ParentTargetNames\")}}; CYstartTargets = foreach CYtargets generate 'Id'+\"@#%\"+'Period.StartDate_Year'+'Period.StartDate_Month'+\"@#%\"+'AcctMgrTargetDstr.ProductId'+\"!#%\"+'AcctMgrTargetDstr.Product.Name' as 'Id',  'Period.StartDate_Year' as 'Date_Year', 'Period.StartDate_Month' as 'Date_Month', 'MonthlyTargetValue' as 'TargetValue', 'Period.StartDate_sec_epoch' as 'Min Start Sec Epoch', 'Period.EndDate_sec_epoch' as 'Max End Sec Epoch'; CYendTargets = foreach CYtargets generate 'Id'+\"@#%\"+'Period.StartDate_Year'+'Period.StartDate_Month'+\"@#%\"+'AcctMgrTargetDstr.ProductId'+\"!#%\"+'AcctMgrTargetDstr.Product.Name' as 'Id',  'Period.EndDate_Year' as 'Date_Year', 'Period.EndDate_Month' as 'Date_Month', 'MonthlyTargetValue' as 'TargetValue', 'Period.StartDate_sec_epoch' as 'Min Start Sec Epoch', 'Period.EndDate_sec_epoch' as 'Max End Sec Epoch'; CYTargetsForFill = union CYstartTargets, CYendTargets; CYTargetsForFill = foreach CYTargetsForFill generate 'Id' as 'Id', 'Date_Year' as 'Date_Year', 'Date_Month' as 'Date_Month', 'TargetValue' as 'TargetValue', 'Min Start Sec Epoch' as 'Min Start Sec Epoch', 'Max End Sec Epoch' as 'Max End Sec Epoch'; CYTargetsFilled = fill CYTargetsForFill by (dateCols=('Date_Year','Date_Month', \"Y-M\"), partition='Id'); CYTargetsFilled = group CYTargetsFilled by ('Id', 'Date_Year', 'Date_Month'); CYTargetsFilled = foreach CYTargetsFilled generate substr('Id',1,index_of('Id',\"@#%\",1,1)-1) as 'Id', substr('Id', index_of('Id',\"@#%\",1,2)+3, index_of('Id',\"!#%\") - (index_of('Id',\"@#%\",1,2)+3)) as 'AcctMgrTargetDstr.ProductId', substr('Id', index_of('Id',\"!#%\")+3) as 'AcctMgrTargetDstr.Product.Name','Date_Year', 'Date_Month', max(sum('TargetValue')) over([..] partition by 'Id') as 'TargetValue', max(sum('Min Start Sec Epoch')) over([..] partition by 'Id') as 'Min Start Sec Epoch', max(sum('Max End Sec Epoch')) over([..] partition by 'Id') as 'Max End Sec Epoch'; CYTargetsFilled = filter CYTargetsFilled by toDate('Date_Year'+\"-\"+'Date_Month'+\"-01 23:59:59\",\"yyyy-MM-dd HH:mm:ss\") >= toDate('Min Start Sec Epoch'); CYTargetsFilled = filter CYTargetsFilled by toDate('Date_Year'+\"-\"+'Date_Month'+\"-01 00:00:00\",\"yyyy-MM-dd HH:mm:ss\") <= toDate('Max End Sec Epoch'); targets = filter targets by !('AcctMgrTargetDstr.ProductId' is null); targets = filter targets by date('Period.StartDate_Year', 'Period.StartDate_Month', 'Period.StartDate_Day') in [dateRange([{{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.StartDate_Year\"),1900).asObject()}}, {{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.StartDate_Month\"),01).asObject()}}, {{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.StartDate_Day\"),01).asObject()}}], [{{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.EndDate_Year\"),3000).asObject()}}, {{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.EndDate_Month\"),12).asObject()}}, {{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.EndDate_Day\"),31).asObject()}}])]; targets = filter targets by date('Period.EndDate_Year', 'Period.EndDate_Month', 'Period.EndDate_Day') in [dateRange([{{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.StartDate_Year\"),1900).asObject()}}, {{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.StartDate_Month\"),01).asObject()}}, {{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.StartDate_Day\"),01).asObject()}}], [{{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.EndDate_Year\"),3000).asObject()}}, {{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.EndDate_Month\"),12).asObject()}}, {{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.EndDate_Day\"),31).asObject()}}])]; targets = filter targets by {{column(Team_Members_1.selection, [\"AssignedTo.Id\"]).asEquality(\"AssignedTo.Managers\")}} && ({{column(Team_Members_1.selection, [\"AssignedTo.Id\"]).asEquality(\"AssignedTo.ManagerId\")}} || {{column(Team_Members_1.selection, [\"AssignedTo.Id\"]).asEquality(\"AssignedTo.ForecastRole.ParentRole.ForecastUserId\")}}); targets = filter targets by !({{column(Team_Members_1.selection, [\"AssignedTo.Id\"]).asEquality(\"AssignedTo.Id\")}}); targets = filter targets by {{column(List_of_Main_Goals_1.selection, [\"Self_AcctMgrTarget\"]).asEquality(\"ParentTargetNames\")}}; targets = filter targets by {{column(Target_Period_Split__1.selection, [\"Self_AcctMgrTarget\"]).asEquality(\"ParentTargetNames\")}}; startTargets = foreach targets generate 'Id'+\"@#%\"+'Period.StartDate_Year'+'Period.StartDate_Month'+\"@#%\"+'AcctMgrTargetDstr.ProductId'+\"!#%\"+'AcctMgrTargetDstr.Product.Name' as 'Id',  'Period.StartDate_Year' as 'Date_Year', 'Period.StartDate_Month' as 'Date_Month', 'MonthlyTargetValue' as 'TargetValue', 'Period.StartDate_sec_epoch' as 'Min Start Sec Epoch', 'Period.EndDate_sec_epoch' as 'Max End Sec Epoch'; endTargets = foreach targets generate 'Id'+\"@#%\"+'Period.StartDate_Year'+'Period.StartDate_Month'+\"@#%\"+'AcctMgrTargetDstr.ProductId'+\"!#%\"+'AcctMgrTargetDstr.Product.Name' as 'Id',  'Period.EndDate_Year' as 'Date_Year', 'Period.EndDate_Month' as 'Date_Month', 'MonthlyTargetValue' as 'TargetValue', 'Period.StartDate_sec_epoch' as 'Min Start Sec Epoch', 'Period.EndDate_sec_epoch' as 'Max End Sec Epoch'; TargetsForFill = union startTargets, endTargets; TargetsForFill = foreach TargetsForFill generate 'Id' as 'Id', 'Date_Year' as 'Date_Year', 'Date_Month' as 'Date_Month', 'TargetValue' as 'TargetValue', 'Min Start Sec Epoch' as 'Min Start Sec Epoch', 'Max End Sec Epoch' as 'Max End Sec Epoch'; TargetsFilled = fill TargetsForFill by (dateCols=('Date_Year','Date_Month', \"Y-M\"), partition='Id'); TargetsFilled = group TargetsFilled by ('Id', 'Date_Year', 'Date_Month'); TargetsFilled = foreach TargetsFilled generate substr('Id',1,index_of('Id',\"@#%\",1,1)-1) as 'Id', substr('Id', index_of('Id',\"@#%\",1,2)+3, index_of('Id',\"!#%\") - (index_of('Id',\"@#%\",1,2)+3)) as 'AcctMgrTargetDstr.ProductId', substr('Id', index_of('Id',\"!#%\")+3) as 'AcctMgrTargetDstr.Product.Name','Date_Year', 'Date_Month', max(sum('TargetValue')) over([..] partition by 'Id') as 'TargetValue', max(sum('Min Start Sec Epoch')) over([..] partition by 'Id') as 'Min Start Sec Epoch', max(sum('Max End Sec Epoch')) over([..] partition by 'Id') as 'Max End Sec Epoch'; TargetsFilled = filter TargetsFilled by toDate('Date_Year'+\"-\"+'Date_Month'+\"-01 23:59:59\",\"yyyy-MM-dd HH:mm:ss\") >= toDate('Min Start Sec Epoch'); TargetsFilled = filter TargetsFilled by toDate('Date_Year'+\"-\"+'Date_Month'+\"-01 00:00:00\",\"yyyy-MM-dd HH:mm:ss\") <= toDate('Max End Sec Epoch'); actuals = load \"MFG_TargetActuals\"; actuals = filter actuals by !({{column(Team_Members_1.selection, [\"AssignedTo.Id\"]).asEquality(\"TargetActualsOwner.Id\")}}); actuals = filter actuals by {{coalesce(column(Targets_Vs_Actuals_f_1.selection, [\"AssignedTo.Id\"]), column(Team_Attainment_1.selection, [\"AssignedTo.Id\"]), column(PY_Team_Attainment_1.selection, [\"AssignedTo.Id\"]), column(PY_Targets_Vs_Actual_1.selection, [\"AssignedTo.Id\"]), column(Team_Members_1.selection, [\"AssignedTo.Id\"])).asEquality(\"TargetActualsOwner_for_filter.Managers\")}}; actuals = filter actuals by 'Order.StatusCode' == \"Activated\"; actuals_for_projection = group actuals by ('Product2Id', 'Order.EffectiveDate_Year', 'Order.EffectiveDate_Month'); actuals_for_projection = foreach actuals_for_projection generate 'Product2Id' as 'Product2Id', 'Order.EffectiveDate_Year', 'Order.EffectiveDate_Month', sum('Quantity') as 'ActualsValue'; actuals_for_projection = fill actuals_for_projection by (dateCols=('Order.EffectiveDate_Year','Order.EffectiveDate_Month', \"Y-M\"), partition='Product2Id'); actuals_for_projection = timeseries actuals_for_projection generate 'ActualsValue' as 'ProjectedActualsValue' with (partition='Product2Id', length=36, dateCols=('Order.EffectiveDate_Year','Order.EffectiveDate_Month', \"Y-M\"), seasonality = 0, ignoreLast = false); actuals_for_projection = foreach actuals_for_projection generate 'Product2Id' as 'Product2Id', 'Order.EffectiveDate_Year', 'Order.EffectiveDate_Month', 'ActualsValue' as 'ActualsValue', case when 'ActualsValue' > coalesce('ProjectedActualsValue',0) then 'ActualsValue' when coalesce('ProjectedActualsValue',0) >= 0 then 'ProjectedActualsValue' else 0 end as 'ProjectedActualsValue', month_last_day(toDate('Order.EffectiveDate_Year'+\"-\"+'Order.EffectiveDate_Month'+\"-27 00:00:00\",\"yyyy-MM-dd HH:mm:ss\")) as 'Month Last Day'; actuals_for_projection = filter actuals_for_projection by 'Month Last Day' > now(); actuals_for_projection = filter actuals_for_projection by toDate('Order.EffectiveDate_Year'+\"-\"+'Order.EffectiveDate_Month'+\"-01 00:00:00\",\"yyyy-MM-dd HH:mm:ss\") >= toDate(\"{{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.StartDate_Year\"),1900).asObject()}}\"+\"-\"+\"{{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.StartDate_Month\"),\"01\").asObject()}}\"+\"-\"+\"{{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.StartDate_Day\"),\"01\").asObject()}}\"+\" 00:00:00\",\"yyyy-MM-dd HH:mm:ss\") && toDate('Order.EffectiveDate_Year'+\"-\"+'Order.EffectiveDate_Month'+\"-01 00:00:00\",\"yyyy-MM-dd HH:mm:ss\") <= toDate(\"{{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.EndDate_Year\"),3000).asObject()}}\"+\"-\"+\"{{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.EndDate_Month\"),12).asObject()}}\"+\"-\"+\"{{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.EndDate_Day\"),31).asObject()}}\"+\" 00:00:00\",\"yyyy-MM-dd HH:mm:ss\"); actuals = filter actuals by date('Order.EffectiveDate_Year', 'Order.EffectiveDate_Month', 'Order.EffectiveDate_Day') in [dateRange([{{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.StartDate_Year\"),1900).asObject()}}, {{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.StartDate_Month\"),01).asObject()}}, {{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.StartDate_Day\"),01).asObject()}}], [{{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.EndDate_Year\"),3000).asObject()}}, {{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.EndDate_Month\"),12).asObject()}}, {{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.EndDate_Day\"),31).asObject()}}])]; actuals_for_join = group actuals by ('Product2Id', 'Order.EffectiveDate_Year', 'Order.EffectiveDate_Month') full,  actuals_for_projection by ('Product2Id', 'Order.EffectiveDate_Year', 'Order.EffectiveDate_Month'); actuals_for_join = foreach actuals_for_join generate coalesce(actuals.'Product2Id', actuals_for_projection.'Product2Id') as 'Product2Id', coalesce(actuals.'Order.EffectiveDate_Year',actuals_for_projection.'Order.EffectiveDate_Year') as 'Order.EffectiveDate_Year', coalesce(actuals.'Order.EffectiveDate_Month',actuals_for_projection.'Order.EffectiveDate_Month') as 'Order.EffectiveDate_Month',  sum(actuals_for_projection.'ProjectedActualsValue') as 'Projections', sum(actuals.'Quantity') as 'Actuals', coalesce(sum(actuals_for_projection.'ProjectedActualsValue'),sum(actuals.'Quantity')) as 'Actuals & Projection'; result = group CYTargetsFilled by ('AcctMgrTargetDstr.ProductId') left, TargetsFilled by ('AcctMgrTargetDstr.ProductId') left,  actuals_for_join by ('Product2Id'); result = foreach result generate CYTargetsFilled.'AcctMgrTargetDstr.ProductId' as 'AcctMgrTargetDstr.ProductId', first(CYTargetsFilled.'AcctMgrTargetDstr.Product.Name') as 'AcctMgrTargetDstr.Product.Name', sum(CYTargetsFilled.'TargetValue') as 'TY Target#', sum(TargetsFilled.'TargetValue') as 'PY Target#', (sum(CYTargetsFilled.'TargetValue') - sum(TargetsFilled.'TargetValue'))/sum(TargetsFilled.'TargetValue') as 'Change from PY#', coalesce(sum(actuals_for_join.'Actuals'),0) as 'PY Actuals#', coalesce(sum(actuals_for_join.'Actuals'),0)/sum(TargetsFilled.'TargetValue') as 'PY Attainment';","receiveFacetSource":{"mode":"exclude","steps":["List_of_Main_Goals_1","Period_Selection_1","TY_Account_level_tar_1","TY_Accounts_by_Rep_1","Account_Targets_Vs_A_1","PY_Targets_by_Accoun_1","PY_Targets_by_Accoun_2","PY_Account_targets_a_1","Parent_Account_Filte_1","Account_Filter_1","Account_Type_Filter_1","Account_Industry_Fil_1","Account_Geo_Filter_1"]},"selectMode":"single","strings":["AcctMgrTargetDstr.ProductId","AcctMgrTargetDstr.Product.Name"],"type":"saql","useGlobal":true,"visualizationParameters":{"parameters":{"autoFitMode":"keepLabels","bins":{"breakpoints":{"high":100,"low":0},"bands":{"high":{"color":"#008000","label":""},"low":{"color":"#B22222","label":""},"medium":{"color":"#ffa500","label":""}}},"legend":{"descOrder":false,"showHeader":true,"show":true,"customSize":"auto","position":"right-top","inside":false},"axisMode":"multi","tooltip":{"content":{"legend":{"showBinLabel":true,"measures":[],"showNullValues":true,"customizeLegend":false,"showPercentage":true,"showDimensions":true,"showMeasures":true,"dimensions":[]}}},"visualizationType":"hbar","title":{"fontSize":14,"subtitleFontSize":11,"label":"","align":"center","subtitleLabel":""},"binValues":false,"trellis":{"flipLabels":false,"showGridLines":true,"size":[100,100],"enable":false,"type":"x","chartsPerLine":4},"showActionMenu":true,"measureAxis2":{"sqrtScale":false,"showTitle":true,"showAxis":true,"title":"","customDomain":{"showDomain":false}},"measureAxis1":{"sqrtScale":false,"showTitle":true,"showAxis":true,"title":"","customDomain":{"showDomain":false}},"valueType":"compactNumber","theme":"wave","compactDecimalDigits":-1,"dimensionAxis":{"showTitle":true,"customSize":"auto","showAxis":true,"title":"","icons":{"useIcons":false,"iconProps":{"fit":"cover","column":"","type":"round"}}},"applyConditionalFormatting":true},"type":"chart"}},"PY_Team_Attainment_1":{"broadcastFacet":true,"groups":[],"label":"PY Team Attainment","numbers":[],"query":"targets = load \"MFG_AccountManagerPeriodicTargetDistribution\"; targets = filter targets by date('Period.StartDate_Year', 'Period.StartDate_Month', 'Period.StartDate_Day') in [dateRange([{{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.StartDate_Year\"),1900).asObject()}}, {{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.StartDate_Month\"),01).asObject()}}, {{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.StartDate_Day\"),01).asObject()}}], [{{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.EndDate_Year\"),3000).asObject()}}, {{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.EndDate_Month\"),12).asObject()}}, {{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.EndDate_Day\"),31).asObject()}}])];  targets = filter targets by date('Period.EndDate_Year', 'Period.EndDate_Month', 'Period.EndDate_Day') in [dateRange([{{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.StartDate_Year\"),1900).asObject()}}, {{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.StartDate_Month\"),01).asObject()}}, {{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.StartDate_Day\"),01).asObject()}}], [{{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.EndDate_Year\"),3000).asObject()}}, {{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.EndDate_Month\"),12).asObject()}}, {{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.EndDate_Day\"),31).asObject()}}])]; \ntargets = filter targets by 'AcctMgrTargetDstr.ProductId' is null && 'AcctMgrTargetDstr.Account.Id' is null; \ntargets = filter targets by {{column(Team_Members_1.selection, [\"AssignedTo.Id\"]).asEquality(\"AssignedTo.Managers\")}} && ({{column(Team_Members_1.selection, [\"AssignedTo.Id\"]).asEquality(\"AssignedTo.ManagerId\")}} || {{column(Team_Members_1.selection, [\"AssignedTo.Id\"]).asEquality(\"AssignedTo.ForecastRole.ParentRole.ForecastUserId\")}}); targets = filter targets by !({{column(Team_Members_1.selection, [\"AssignedTo.Id\"]).asEquality(\"AssignedTo.Id\")}}); targets = filter targets by {{column(List_of_Main_Goals_1.selection, [\"Self_AcctMgrTarget\"]).asEquality(\"ParentTargetNames\")}}; targets = filter targets by {{column(Target_Period_Split__1.selection, [\"Self_AcctMgrTarget\"]).asEquality(\"ParentTargetNames\")}}; \nactuals = load \"MFG_TargetActuals\"; actuals = filter actuals by 'Order.StatusCode' == \"Activated\"; actuals = filter actuals by date('Order.EffectiveDate_Year', 'Order.EffectiveDate_Month', 'Order.EffectiveDate_Day') in [dateRange([{{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.StartDate_Year\"),1900).asObject()}}, {{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.StartDate_Month\"),01).asObject()}}, {{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.StartDate_Day\"),01).asObject()}}], [{{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.EndDate_Year\"),3000).asObject()}}, {{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.EndDate_Month\"),12).asObject()}}, {{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.EndDate_Day\"),31).asObject()}}])]; \nactuals = filter actuals by !({{column(Team_Members_1.selection, [\"AssignedTo.Id\"]).asEquality(\"TargetActualsOwner.Id\")}});\nresult = group targets by 'AssignedTo.Id' left, actuals by 'TargetActualsOwner.Managers';\nresult = foreach result generate targets.'AssignedTo.Id' as 'AssignedTo.Id', first(targets.'AssignedTo.Name') as 'AssignedTo.Name', first(targets.'AssignedTo.SmallPhotoUrl') as 'AssignedTo.SmallPhotoUrl', sum(targets.'PeriodTargetCurrencyValue') as 'PeriodTargetCurrencyValue', coalesce(sum(actuals.'TotalPrice'),0) as 'TotalPrice';\nresult = group result by 'AssignedTo.Id';\nresult = foreach result generate 'AssignedTo.Id', first('AssignedTo.Name') as 'AssignedTo.Name', first('AssignedTo.SmallPhotoUrl') as 'AssignedTo.SmallPhotoUrl', sum('TotalPrice')/sum('PeriodTargetCurrencyValue') as 'Attainment'; result = order result by 'Attainment' desc;","receiveFacetSource":{"mode":"exclude","steps":["List_of_Main_Goals_1","Period_Selection_1","PY_Targets_by_Accoun_1","PY_Targets_by_Accoun_2","TY_Accounts_by_Rep_1","TY_Product_Targets_1","TY_Product_Targets___1","PY_Product_targets_1","Product_Family_Filte_1","Product_Name_Filter_1","PY_Product_targets___1","PY_Targets_by_Produc_1","TY_Products_by_Reps_1","TY_Account_level_tar_1","Parent_Account_Filte_1","Account_Filter_1","Account_Type_Filter_1","Account_Industry_Fil_1","Account_Geo_Filter_1"]},"selectMode":"single","start":"[]","strings":[],"type":"saql","useGlobal":true,"visualizationParameters":{"parameters":{"autoFitMode":"keepLabels","max":100,"tooltip":{"content":{"legend":{"showBinLabel":true,"measures":[],"showNullValues":true,"customizeLegend":false,"showPercentage":true,"showDimensions":true,"showMeasures":true,"dimensions":[]}}},"visualizationType":"polargauge","medium":33,"title":{"fontSize":14,"subtitleFontSize":11,"label":"","align":"center","subtitleLabel":""},"icons":{"useIcons":false,"iconProps":{"fit":"cover","column":""}},"trellis":{"flipLabels":false,"showGridLines":true,"size":[50,50],"enable":true,"type":"x","chartsPerLine":4},"inner":80,"colors":{"mediumColor2":"#F29946","mediumColor1":"#FED444","lowColor1":"#F71979","lowColor2":"#CC203D","highColor1":"#7BDE4E","highColor2":"#169913"},"high":66,"columnMap":{"trellis":["AssignedTo.Id"],"plots":["Attainment"]},"min":0,"showActionMenu":true,"valueType":"compactNumber","theme":"wave","compactDecimalDigits":-1,"applyConditionalFormatting":true},"type":"chart"}},"Product_Family_Filte_1":{"broadcastFacet":true,"datasets":[{"name":"MFG_AccountManagerPeriodicTargetDistribution"}],"isGlobal":false,"label":"Product Family Filter","query":{"query":"{\"measures\":[[\"count\",\"*\"]],\"groups\":[\"AcctMgrTargetDstr.Product.Family\"]}","version":-1.0},"receiveFacetSource":{"mode":"exclude","steps":["List_of_Main_Goals_1","Period_Selection_1","TY_Account_level_tar_1","TY_Accounts_by_Rep_1","Account_Targets_Vs_A_1","PY_Targets_by_Accoun_1","PY_Targets_by_Accoun_2","PY_Account_targets_a_1","Parent_Account_Filte_1","Account_Filter_1","Account_Type_Filter_1","Account_Industry_Fil_1","Account_Geo_Filter_1"]},"selectMode":"multi","type":"aggregateflex","useGlobal":true,"visualizationParameters":{"parameters":{"autoFitMode":"keepLabels","bins":{"breakpoints":{"high":100,"low":0},"bands":{"high":{"color":"#008000","label":""},"low":{"color":"#B22222","label":""},"medium":{"color":"#ffa500","label":""}}},"legend":{"descOrder":false,"showHeader":true,"show":true,"customSize":"auto","position":"right-top","inside":false},"axisMode":"multi","tooltip":{"content":{"legend":{"showBinLabel":true,"measures":[],"showNullValues":true,"customizeLegend":false,"showPercentage":true,"showDimensions":true,"showMeasures":true,"dimensions":[]}}},"visualizationType":"hbar","title":{"fontSize":14,"subtitleFontSize":11,"label":"","align":"center","subtitleLabel":""},"binValues":false,"trellis":{"flipLabels":false,"showGridLines":true,"size":[100,100],"enable":false,"type":"x","chartsPerLine":4},"columnMap":{"trellis":[],"dimensionAxis":["AcctMgrTargetDstr.Product.Family"],"plots":["count"]},"showActionMenu":true,"measureAxis2":{"sqrtScale":false,"showTitle":true,"showAxis":true,"title":"","customDomain":{"showDomain":false}},"measureAxis1":{"sqrtScale":false,"showTitle":true,"showAxis":true,"title":"","customDomain":{"showDomain":false}},"valueType":"compactNumber","theme":"wave","compactDecimalDigits":-1,"dimensionAxis":{"showTitle":true,"customSize":"auto","showAxis":true,"title":"","icons":{"useIcons":false,"iconProps":{"fit":"cover","column":"","type":"round"}}},"applyConditionalFormatting":true},"type":"chart"}},"PY_Targets_Vs_Actual_2":{"broadcastFacet":true,"groups":["Period.StartDate_Year~~~Period.StartDate_Month"],"label":"PY Targets Vs Actuals (MoM) ","numbers":["PY Target Revenue","TY Target Revenue","PY Actual Revenue","PY Forecasted Revenue","PY Projected Revenue"],"query":"targets = load \"MFG_AccountManagerPeriodicTargetDistribution\"; PYTargets = filter targets by date('Period.StartDate_Year', 'Period.StartDate_Month', 'Period.StartDate_Day') in [dateRange([{{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.StartDate_Year\"),1900).asObject()}}, {{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.StartDate_Month\"),01).asObject()}}, {{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.StartDate_Day\"),01).asObject()}}], [{{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.EndDate_Year\"),3000).asObject()}}, {{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.EndDate_Month\"),12).asObject()}}, {{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.EndDate_Day\"),31).asObject()}}])]; PYTargets = filter PYTargets by date('Period.EndDate_Year', 'Period.EndDate_Month', 'Period.EndDate_Day') in [dateRange([{{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.StartDate_Year\"),1900).asObject()}}, {{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.StartDate_Month\"),01).asObject()}}, {{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.StartDate_Day\"),01).asObject()}}], [{{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.EndDate_Year\"),3000).asObject()}}, {{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.EndDate_Month\"),12).asObject()}}, {{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.EndDate_Day\"),31).asObject()}}])]; PYTargets = filter PYTargets by 'AcctMgrTargetDstr.ProductId' is null && 'AcctMgrTargetDstr.Account.Id' is null; PYTargets = filter PYTargets by {{column(Team_Members_1.selection, [\"AssignedTo.Id\"]).asEquality(\"AssignedTo.Managers\")}} && ({{column(Team_Members_1.selection, [\"AssignedTo.Id\"]).asEquality(\"AssignedTo.ManagerId\")}} || {{column(Team_Members_1.selection, [\"AssignedTo.Id\"]).asEquality(\"AssignedTo.ForecastRole.ParentRole.ForecastUserId\")}}); PYTargets = filter PYTargets by !({{column(Team_Members_1.selection, [\"AssignedTo.Id\"]).asEquality(\"AssignedTo.Id\")}}); PYTargets = filter PYTargets by {{column(List_of_Main_Goals_1.selection, [\"Self_AcctMgrTarget\"]).asEquality(\"ParentTargetNames\")}}; PYTargets = filter PYTargets by {{column(Target_Period_Split__1.selection, [\"Self_AcctMgrTarget\"]).asEquality(\"ParentTargetNames\")}}; startPYTargets = foreach PYTargets generate 'Id'+'Period.StartDate_Year'+'Period.StartDate_Month'+\"@#%\"+'AssignedTo.Id'+\"@#%\"+'AssignedTo.Name' as 'Id',  'Period.StartDate_Year' as 'Date_Year', 'Period.StartDate_Month' as 'Date_Month', 'MonthlyTargetCurrencyValue' as 'MonthlyTargetCurrencyValue', 'Period.StartDate_sec_epoch' as 'Min Start Sec Epoch', 'Period.EndDate_sec_epoch' as 'Max End Sec Epoch'; endPYTargets = foreach PYTargets generate 'Id'+'Period.StartDate_Year'+'Period.StartDate_Month'+\"@#%\"+'AssignedTo.Id'+\"@#%\"+'AssignedTo.Name' as 'Id',  'Period.EndDate_Year' as 'Date_Year', 'Period.EndDate_Month' as 'Date_Month', 'MonthlyTargetCurrencyValue' as 'MonthlyTargetCurrencyValue', 'Period.StartDate_sec_epoch' as 'Min Start Sec Epoch', 'Period.EndDate_sec_epoch' as 'Max End Sec Epoch'; PYTargetsForFill = union startPYTargets, endPYTargets; PYTargetsForFill = foreach PYTargetsForFill generate 'Id' as 'Id', 'Date_Year' as 'Date_Year', 'Date_Month' as 'Date_Month', 'MonthlyTargetCurrencyValue' as 'MonthlyTargetCurrencyValue', 'Min Start Sec Epoch' as 'Min Start Sec Epoch', 'Max End Sec Epoch' as 'Max End Sec Epoch'; PYTargetsFilled = fill PYTargetsForFill by (dateCols=('Date_Year','Date_Month', \"Y-M\"), partition='Id'); PYTargetsFilled = group PYTargetsFilled by ('Id', 'Date_Year', 'Date_Month'); PYTargetsFilled = foreach PYTargetsFilled generate 'Id', 'Date_Year', 'Date_Month', max(sum('MonthlyTargetCurrencyValue')) over([..] partition by 'Id') as 'MonthlyTargetCurrencyValue', max(sum('Min Start Sec Epoch')) over([..] partition by 'Id') as 'Min Start Sec Epoch', max(sum('Max End Sec Epoch')) over([..] partition by 'Id') as 'Max End Sec Epoch'; PYTargetsFilled = filter PYTargetsFilled by toDate('Date_Year'+\"-\"+'Date_Month'+\"-01 23:59:59\",\"yyyy-MM-dd HH:mm:ss\") >= toDate('Min Start Sec Epoch'); PYTargetsFilled = filter PYTargetsFilled by toDate('Date_Year'+\"-\"+'Date_Month'+\"-01 00:00:00\",\"yyyy-MM-dd HH:mm:ss\") <= toDate('Max End Sec Epoch'); SYTargets = filter targets by date('Period.StartDate_Year', 'Period.StartDate_Month', 'Period.StartDate_Day') in [dateRange([{{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.StartDate_Year\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Year\"),1900)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.StartDate_Month\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Month\"),01)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.StartDate_Day\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Day\"),01)).asObject()}}], [{{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.EndDate_Year\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Year\"),3000)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.EndDate_Month\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Month\"),12)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.EndDate_Day\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Day\"),31)).asObject()}}])]; SYTargets = filter SYTargets by date('Period.EndDate_Year', 'Period.EndDate_Month', 'Period.EndDate_Day') in [dateRange([{{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.StartDate_Year\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Year\"),1900)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.StartDate_Month\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Month\"),01)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.StartDate_Day\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Day\"),01)).asObject()}}], [{{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.EndDate_Year\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Year\"),3000)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.EndDate_Month\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Month\"),12)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.EndDate_Day\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Day\"),31)).asObject()}}])]; SYTargets = filter SYTargets by 'AcctMgrTargetDstr.ProductId' is null && 'AcctMgrTargetDstr.Account.Id' is null; SYTargets = filter SYTargets by {{column(Team_Members_1.selection, [\"AssignedTo.Id\"]).asEquality(\"AssignedTo.Managers\")}} && ({{column(Team_Members_1.selection, [\"AssignedTo.Id\"]).asEquality(\"AssignedTo.ManagerId\")}} || {{column(Team_Members_1.selection, [\"AssignedTo.Id\"]).asEquality(\"AssignedTo.ForecastRole.ParentRole.ForecastUserId\")}}); SYTargets = filter SYTargets by !({{column(Team_Members_1.selection, [\"AssignedTo.Id\"]).asEquality(\"AssignedTo.Id\")}}); SYTargets = filter SYTargets by {{column(List_of_Main_Goals_1.selection, [\"Self_AcctMgrTarget\"]).asEquality(\"ParentTargetNames\")}}; SYTargets = filter SYTargets by {{column(Target_Period_Split__1.selection, [\"Self_AcctMgrTarget\"]).asEquality(\"ParentTargetNames\")}}; startSYTargets = foreach SYTargets generate 'Id'+'Period.StartDate_Year'+'Period.StartDate_Month'+\"@#%\"+'AssignedTo.Id'+\"@#%\"+'AssignedTo.Name' as 'Id',  number_to_string((string_to_number('Period.StartDate_Year')-1),\"#\") as 'Date_Year', 'Period.StartDate_Month' as 'Date_Month', 'MonthlyTargetCurrencyValue' as 'MonthlyTargetCurrencyValue', 'Period.StartDate_sec_epoch' as 'Min Start Sec Epoch', 'Period.EndDate_sec_epoch' as 'Max End Sec Epoch'; endSYTargets = foreach SYTargets generate 'Id'+'Period.StartDate_Year'+'Period.StartDate_Month'+\"@#%\"+'AssignedTo.Id'+\"@#%\"+'AssignedTo.Name' as 'Id',  number_to_string((string_to_number('Period.EndDate_Year')-1),\"#\") as 'Date_Year', 'Period.EndDate_Month' as 'Date_Month', 'MonthlyTargetCurrencyValue' as 'MonthlyTargetCurrencyValue', 'Period.StartDate_sec_epoch' as 'Min Start Sec Epoch', 'Period.EndDate_sec_epoch' as 'Max End Sec Epoch'; SYTargetsForFill = union startSYTargets, endSYTargets; SYTargetsForFill = foreach SYTargetsForFill generate 'Id' as 'Id', 'Date_Year' as 'Date_Year', 'Date_Month' as 'Date_Month', 'MonthlyTargetCurrencyValue' as 'MonthlyTargetCurrencyValue', 'Min Start Sec Epoch' as 'Min Start Sec Epoch', 'Max End Sec Epoch' as 'Max End Sec Epoch'; TYTargetsFilled = fill SYTargetsForFill by (dateCols=('Date_Year','Date_Month', \"Y-M\"), partition='Id'); TYTargetsFilled = group TYTargetsFilled by ('Id', 'Date_Year', 'Date_Month'); TYTargetsFilled = foreach TYTargetsFilled generate 'Id', 'Date_Year', 'Date_Month', max(sum('MonthlyTargetCurrencyValue')) over([..] partition by 'Id') as 'MonthlyTargetCurrencyValue', max(sum('Min Start Sec Epoch')) over([..] partition by 'Id') as 'Min Start Sec Epoch', max(sum('Max End Sec Epoch')) over([..] partition by 'Id') as 'Max End Sec Epoch'; TYTargetsFilled = filter TYTargetsFilled by toDate(number_to_string((string_to_number('Date_Year')+1),\"#\")+\"-\"+'Date_Month'+\"-01 23:59:59\",\"yyyy-MM-dd HH:mm:ss\") >= toDate('Min Start Sec Epoch'); TYTargetsFilled = filter TYTargetsFilled by toDate(number_to_string((string_to_number('Date_Year')+1),\"#\")+\"-\"+'Date_Month'+\"-01 00:00:00\",\"yyyy-MM-dd HH:mm:ss\") <= toDate('Max End Sec Epoch');\n\nactuals = load \"MFG_TargetActuals\"; actuals = filter actuals by !({{column(Team_Members_1.selection, [\"AssignedTo.Id\"]).asEquality(\"TargetActualsOwner.Id\")}}); actuals = filter actuals by {{coalesce(column(Targets_Vs_Actuals_f_1.selection, [\"AssignedTo.Id\"]), column(Team_Attainment_1.selection, [\"AssignedTo.Id\"]), column(PY_Team_Attainment_1.selection, [\"AssignedTo.Id\"]), column(PY_Targets_Vs_Actual_1.selection, [\"AssignedTo.Id\"]), column(Team_Members_1.selection, [\"AssignedTo.Id\"])).asEquality(\"TargetActualsOwner.Managers\")}}; \nactuals = filter actuals by 'Order.StatusCode' == \"Activated\";\nactuals_for_projection = group actuals by ('TargetActualsOwner.Managers', 'Order.EffectiveDate_Year', 'Order.EffectiveDate_Month');\nactuals_for_projection = foreach actuals_for_projection generate 'TargetActualsOwner.Managers' as 'TargetActualsOwner.Managers', 'Order.EffectiveDate_Year', 'Order.EffectiveDate_Month', sum('TotalPrice') as 'Total Price';\nactuals_for_projection = fill actuals_for_projection by (dateCols=('Order.EffectiveDate_Year','Order.EffectiveDate_Month', \"Y-M\"), partition='TargetActualsOwner.Managers');\n\nactuals_for_projection = timeseries actuals_for_projection generate 'Total Price' as 'Projected Total Price' with (partition='TargetActualsOwner.Managers', length=36, dateCols=('Order.EffectiveDate_Year','Order.EffectiveDate_Month', \"Y-M\"), seasonality = 0, ignoreLast = false);\nactuals_for_projection = foreach actuals_for_projection generate 'TargetActualsOwner.Managers' as 'TargetActualsOwner.Managers', 'Order.EffectiveDate_Year', 'Order.EffectiveDate_Month', 'Total Price' as 'Total Price', case when 'Total Price' > coalesce('Projected Total Price',0) then 'Total Price' when coalesce('Projected Total Price',0) >= 0 then 'Projected Total Price' else 0 end as 'Projected Total Price', month_last_day(toDate('Order.EffectiveDate_Year'+\"-\"+'Order.EffectiveDate_Month'+\"-27 00:00:00\",\"yyyy-MM-dd HH:mm:ss\")) as 'Month Last Day'; actuals_for_projection = filter actuals_for_projection by toDate('Order.EffectiveDate_Year'+\"-\"+'Order.EffectiveDate_Month'+\"-01 00:00:00\",\"yyyy-MM-dd HH:mm:ss\") >= toDate(\"{{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.StartDate_Year\"),1900).asObject()}}\"+\"-\"+\"{{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.StartDate_Month\"),\"01\").asObject()}}\"+\"-\"+\"{{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.StartDate_Day\"),\"01\").asObject()}}\"+\" 00:00:00\",\"yyyy-MM-dd HH:mm:ss\") && toDate('Order.EffectiveDate_Year'+\"-\"+'Order.EffectiveDate_Month'+\"-01 00:00:00\",\"yyyy-MM-dd HH:mm:ss\") <= toDate(\"{{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.EndDate_Year\"),3000).asObject()}}\"+\"-\"+\"{{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.EndDate_Month\"),12).asObject()}}\"+\"-\"+\"{{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.EndDate_Day\"),31).asObject()}}\"+\" 00:00:00\",\"yyyy-MM-dd HH:mm:ss\"); actuals_for_projection_filtered = filter actuals_for_projection by 'Month Last Day' > now(); actuals = filter actuals by date('Order.EffectiveDate_Year', 'Order.EffectiveDate_Month', 'Order.EffectiveDate_Day') in [dateRange([{{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.StartDate_Year\"),1900).asObject()}}, {{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.StartDate_Month\"),01).asObject()}}, {{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.StartDate_Day\"),01).asObject()}}], [{{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.EndDate_Year\"),3000).asObject()}}, {{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.EndDate_Month\"),12).asObject()}}, {{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.EndDate_Day\"),31).asObject()}}])]; actuals_for_join = group actuals by ('TargetActualsOwner.Managers', 'Order.EffectiveDate_Year', 'Order.EffectiveDate_Month') full, \nactuals_for_projection by ('TargetActualsOwner.Managers', 'Order.EffectiveDate_Year', 'Order.EffectiveDate_Month') full, actuals_for_projection_filtered by ('TargetActualsOwner.Managers', 'Order.EffectiveDate_Year', 'Order.EffectiveDate_Month'); actuals_for_join = foreach actuals_for_join generate coalesce(actuals.'TargetActualsOwner.Managers', actuals_for_projection_filtered.'TargetActualsOwner.Managers') as 'TargetActualsOwner.Managers', coalesce(actuals.'Order.EffectiveDate_Year',actuals_for_projection.'Order.EffectiveDate_Year') as 'Order.EffectiveDate_Year', coalesce(actuals.'Order.EffectiveDate_Month',actuals_for_projection.'Order.EffectiveDate_Month') as 'Order.EffectiveDate_Month',  sum(actuals_for_projection_filtered.'Projected Total Price') as 'Projections', sum(actuals.'TotalPrice') as 'Actuals', coalesce(sum(actuals_for_projection_filtered.'Projected Total Price'),sum(actuals.'TotalPrice')) as 'Actuals & Projection'; forecasts = load \"MFG_Targets_AccountProductPeriodForecast\"; forecasts = filter forecasts by !({{column(Team_Members_1.selection, [\"AssignedTo.Id\"]).asEquality(\"Account.Owner.Id\")}}); forecasts = filter forecasts by {{coalesce(column(Targets_Vs_Actuals_f_1.selection, [\"AssignedTo.Id\"]), column(Team_Attainment_1.selection, [\"AssignedTo.Id\"]), column(PY_Team_Attainment_1.selection, [\"AssignedTo.Id\"]), column(PY_Targets_Vs_Actual_1.selection, [\"AssignedTo.Id\"]) , column(Team_Members_1.selection, [\"AssignedTo.Id\"])).asEquality(\"TargetsAccount.Owner.Managers\")}}; forecasts = filter forecasts by date('Period.StartDate_Year', 'Period.StartDate_Month', 'Period.StartDate_Day') in [dateRange([{{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.StartDate_Year\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Year\"),1900)).asObject()}}, {{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.StartDate_Month\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Month\"),01)).asObject()}}, {{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.StartDate_Day\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Day\"),01)).asObject()}}], [{{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.EndDate_Year\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Year\"),3000)).asObject()}}, {{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.EndDate_Month\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Month\"),12)).asObject()}}, {{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.EndDate_Day\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Day\"),31)).asObject()}}])] || date('Period.EndDate_Year', 'Period.EndDate_Month', 'Period.EndDate_Day') in [dateRange([{{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.StartDate_Year\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Year\"),1900)).asObject()}}, {{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.StartDate_Month\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Month\"),01)).asObject()}}, {{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.StartDate_Day\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Day\"),01)).asObject()}}], [{{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.EndDate_Year\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Year\"),3000)).asObject()}}, {{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.EndDate_Month\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Month\"),12)).asObject()}}, {{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.EndDate_Day\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Day\"),31)).asObject()}}])]; forecast_start = foreach forecasts generate 'Id' as 'Id', case when string_to_number('Period.StartDate_Year') > string_to_number(\"{{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.StartDate_Year\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Year\"),1900)).asString()}}\") || ( (string_to_number('Period.StartDate_Year') == string_to_number(\"{{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.StartDate_Year\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Year\"),1900)).asString()}}\")) && (string_to_number('Period.StartDate_Month') > string_to_number(\"{{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.StartDate_Month\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Month\"),01)).asString()}}\"))) then 'Period.StartDate_Year' else \"{{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.StartDate_Year\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Year\"),1900)).asString()}}\" end as 'Date_Year', case when string_to_number('Period.StartDate_Year') > string_to_number(\"{{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.StartDate_Year\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Year\"),1900)).asString()}}\") || ( (string_to_number('Period.StartDate_Year') == string_to_number(\"{{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.StartDate_Year\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Year\"),1900)).asString()}}\")) && (string_to_number('Period.StartDate_Month') > string_to_number(\"{{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.StartDate_Month\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Month\"),01)).asString()}}\"))) then 'Period.StartDate_Month' else \"{{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.StartDate_Month\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Month\"),01)).asString()}}\" end as 'Date_Month', 'ForecastedDailyRevenue' as 'ForecastedDailyRevenue' , date_to_epoch(toDate('Period.StartDate_Year'+\"-\"+'Period.StartDate_Month'+\"-\"+'Period.StartDate_Day',\"yyyy-MM-dd\")) as 'StartDate', date_to_epoch(toDate('Period.EndDate_Year'+\"-\"+'Period.EndDate_Month'+\"-\"+'Period.EndDate_Day',\"yyyy-MM-dd\")) as 'EndDate'; forecast_end = foreach forecasts generate 'Id' as 'Id', case when string_to_number('Period.EndDate_Year') < string_to_number(\"{{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.EndDate_Year\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Year\"),3000)).asString()}}\") || ( (string_to_number('Period.EndDate_Year') == string_to_number(\"{{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.EndDate_Year\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Year\"),3000)).asString()}}\")) && (string_to_number('Period.EndDate_Month') < string_to_number(\"{{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.EndDate_Month\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Month\"),12)).asString()}}\"))) then 'Period.EndDate_Year' else \"{{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.EndDate_Year\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Year\"),3000)).asString()}}\" end as 'Date_Year', case when string_to_number('Period.EndDate_Year') < string_to_number(\"{{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.EndDate_Year\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Year\"),3000)).asString()}}\") || ( (string_to_number('Period.EndDate_Year') == string_to_number(\"{{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.EndDate_Year\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Year\"),3000)).asString()}}\")) && (string_to_number('Period.EndDate_Month') < string_to_number(\"{{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.EndDate_Month\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Month\"),12)).asString()}}\"))) then 'Period.EndDate_Month' else \"{{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.EndDate_Month\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Month\"),12)).asString()}}\" end as 'Date_Month',  'ForecastedDailyRevenue' as 'ForecastedDailyRevenue' , date_to_epoch(toDate('Period.StartDate_Year'+\"-\"+'Period.StartDate_Month'+\"-\"+'Period.StartDate_Day',\"yyyy-MM-dd\")) as 'StartDate', date_to_epoch(toDate('Period.EndDate_Year'+\"-\"+'Period.EndDate_Month'+\"-\"+'Period.EndDate_Day',\"yyyy-MM-dd\")) as 'EndDate'; forecast_for_fill = union forecast_start, forecast_end; forecast_for_fill = group forecast_for_fill by ('Id', 'Date_Year', 'Date_Month'); forecast_for_fill = foreach forecast_for_fill generate 'Id', 'Date_Year', 'Date_Month', first('ForecastedDailyRevenue') as 'ForecastedDailyRevenue', first('StartDate') as 'StartDate', first('EndDate') as 'EndDate'; Forecast_Filled = fill forecast_for_fill by (dateCols=('Date_Year', 'Date_Month', \"Y-M\"), partition='Id'); Forecast_Filled = group Forecast_Filled by ('Id', 'Date_Year', 'Date_Month'); Forecast_Filled = foreach Forecast_Filled generate 'Id', 'Date_Year', 'Date_Month', max(first('ForecastedDailyRevenue')) over ([..0] partition by 'Id' order by ('Date_Year' asc, 'Date_Month' asc)) as 'ForecastedDailyRevenue', max(first('StartDate')) over ([..0] partition by 'Id' order by ('Date_Year' asc, 'Date_Month' asc)) as 'StartDate', max(first('EndDate')) over ([..0] partition by 'Id' order by ('Date_Year' asc, 'Date_Month' asc)) as 'EndDate', date_to_epoch(toDate('Date_Year'+\"-\"+'Date_Month'+\"-01\",\"yyyy-MM-dd\")) as 'Date'; Forecast_Filled = filter Forecast_Filled by 'Date'>='StartDate' && 'Date'<='EndDate'; forecasts = foreach Forecast_Filled generate 'Id' as 'Id', 'Date_Year' as 'Period.EndDate_Year', 'Date_Month' as 'Period.EndDate_Month', month_days(toDate('Date'))*'ForecastedDailyRevenue' as 'ForecastedRevenueFinal'; result = group PYTargetsFilled by ('Date_Year','Date_Month') full, TYTargetsFilled by ('Date_Year','Date_Month') full, actuals_for_join by ('Order.EffectiveDate_Year','Order.EffectiveDate_Month') full, forecasts by ('Period.EndDate_Year','Period.EndDate_Month'); result = foreach result generate coalesce(PYTargetsFilled.'Date_Year',  TYTargetsFilled.'Date_Year', actuals_for_join.'Order.EffectiveDate_Year', forecasts.'Period.EndDate_Year') +\"~~~\"+coalesce(PYTargetsFilled.'Date_Month', TYTargetsFilled.'Date_Month', actuals_for_join.'Order.EffectiveDate_Month', forecasts.'Period.EndDate_Month') as 'Period.StartDate_Year~~~Period.StartDate_Month', {{cell(Cummulative___Over_t_1.selection, 0, \"PYTargetProjection\").asObject()}} as 'PY Target Revenue', {{cell(Cummulative___Over_t_1.selection, 0, \"TYTargetProjection\").asObject()}} as 'TY Target Revenue', {{cell(Cummulative___Over_t_1.selection, 0, \"ActualsProjection\").asObject()}} as 'PY Actual Revenue', {{cell(Cummulative___Over_t_1.selection, 0, \"ForecastProjection\").asObject()}} as 'PY Forecasted Revenue'  {{cell(Cummulative___Over_t_1.selection, 0, cell(Projections_Toggle_1.selection, 0,\"PYProjection\")).asObject()}};","receiveFacetSource":{"mode":"exclude","steps":["List_of_Main_Goals_1","Period_Selection_1","PY_Targets_by_Accoun_1","PY_Targets_by_Accoun_2","TY_Accounts_by_Rep_1","TY_Product_Targets_1","TY_Product_Targets___1","PY_Product_targets_1","Product_Family_Filte_1","Product_Name_Filter_1","PY_Product_targets___1","PY_Targets_by_Produc_1","TY_Products_by_Reps_1","TY_Account_level_tar_1","Parent_Account_Filte_1","Account_Filter_1","Account_Type_Filter_1","Account_Industry_Fil_1","Account_Geo_Filter_1"]},"selectMode":"none","start":"[]","strings":["Period.StartDate_Year~~~Period.StartDate_Month"],"type":"saql","useGlobal":true,"visualizationParameters":{"parameters":{"autoFitMode":"keepLabels","stack":false,"showPoints":true,"legend":{"descOrder":false,"showHeader":true,"show":true,"customSize":"auto","position":"right-top","inside":false},"axisMode":"dual","tooltip":{"content":{"legend":{"showBinLabel":true,"measures":[],"showNullValues":true,"customizeLegend":false,"showPercentage":true,"showDimensions":true,"showMeasures":true,"dimensions":[]}}},"visualizationType":"time-combo","missingValue":"connect","timeAxis":{"showTitle":true,"showAxis":true,"title":""},"title":{"fontSize":14,"subtitleFontSize":11,"label":"","align":"center","subtitleLabel":""},"trellis":{"flipLabels":false,"showGridLines":true,"size":[100,100],"enable":false,"type":"x","chartsPerLine":4},"showActionMenu":true,"measureAxis2":{"sqrtScale":false,"showTitle":true,"showAxis":true,"title":"","customDomain":{"showDomain":false}},"measureAxis1":{"sqrtScale":false,"showTitle":true,"showAxis":true,"title":"","customDomain":{"showDomain":false}},"valueType":"compactNumber","valueTypeOnLine":"none","theme":"wave","compactDecimalDigits":-1,"applyConditionalFormatting":true},"type":"chart"}},"PY_Targets_Vs_Actual_1":{"broadcastFacet":true,"groups":["AssignedTo.Id"],"label":"PY Targets Vs Actuals for each Team Member","numbers":["TY Target Revenue","PY Target Revenue","PY Actual Revenue"],"query":"targets = load \"MFG_AccountManagerPeriodicTargetDistribution\"; CYtargets = filter targets by 'AcctMgrTargetDstr.ProductId' is null && 'AcctMgrTargetDstr.Account.Id' is null; CYtargets = filter CYtargets by date('Period.StartDate_Year', 'Period.StartDate_Month', 'Period.StartDate_Day') in [dateRange([{{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.StartDate_Year\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Year\"),1900)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.StartDate_Month\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Month\"),01)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.StartDate_Day\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Day\"),01)).asObject()}}], [{{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.EndDate_Year\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Year\"),3000)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.EndDate_Month\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Month\"),12)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.EndDate_Day\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Day\"),31)).asObject()}}])];  CYtargets = filter CYtargets by date('Period.EndDate_Year', 'Period.EndDate_Month', 'Period.EndDate_Day') in [dateRange([{{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.StartDate_Year\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Year\"),1900)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.StartDate_Month\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Month\"),01)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.StartDate_Day\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Day\"),01)).asObject()}}], [{{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.EndDate_Year\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Year\"),3000)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.EndDate_Month\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Month\"),12)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.EndDate_Day\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Day\"),31)).asObject()}}])]; CYtargets = filter CYtargets by {{column(Team_Members_1.selection, [\"AssignedTo.Id\"]).asEquality(\"AssignedTo.Managers\")}} && ({{column(Team_Members_1.selection, [\"AssignedTo.Id\"]).asEquality(\"AssignedTo.ManagerId\")}} || {{column(Team_Members_1.selection, [\"AssignedTo.Id\"]).asEquality(\"AssignedTo.ForecastRole.ParentRole.ForecastUserId\")}}); CYtargets = filter CYtargets by !({{column(Team_Members_1.selection, [\"AssignedTo.Id\"]).asEquality(\"AssignedTo.Id\")}}); CYtargets = filter CYtargets by {{column(List_of_Main_Goals_1.selection, [\"Self_AcctMgrTarget\"]).asEquality(\"ParentTargetNames\")}}; CYtargets = filter CYtargets by {{column(Target_Period_Split__1.selection, [\"Self_AcctMgrTarget\"]).asEquality(\"ParentTargetNames\")}}; targets = filter targets by date('Period.StartDate_Year', 'Period.StartDate_Month', 'Period.StartDate_Day') in [dateRange([{{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.StartDate_Year\"),1900).asObject()}}, {{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.StartDate_Month\"),01).asObject()}}, {{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.StartDate_Day\"),01).asObject()}}], [{{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.EndDate_Year\"),3000).asObject()}}, {{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.EndDate_Month\"),12).asObject()}}, {{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.EndDate_Day\"),31).asObject()}}])];  targets = filter targets by date('Period.EndDate_Year', 'Period.EndDate_Month', 'Period.EndDate_Day') in [dateRange([{{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.StartDate_Year\"),1900).asObject()}}, {{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.StartDate_Month\"),01).asObject()}}, {{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.StartDate_Day\"),01).asObject()}}], [{{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.EndDate_Year\"),3000).asObject()}}, {{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.EndDate_Month\"),12).asObject()}}, {{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.EndDate_Day\"),31).asObject()}}])]; \ntargets = filter targets by 'AcctMgrTargetDstr.ProductId' is null && 'AcctMgrTargetDstr.Account.Id' is null; \ntargets = filter targets by {{column(Team_Members_1.selection, [\"AssignedTo.Id\"]).asEquality(\"AssignedTo.Managers\")}} && ({{column(Team_Members_1.selection, [\"AssignedTo.Id\"]).asEquality(\"AssignedTo.ManagerId\")}} || {{column(Team_Members_1.selection, [\"AssignedTo.Id\"]).asEquality(\"AssignedTo.ForecastRole.ParentRole.ForecastUserId\")}}); targets = filter targets by !({{column(Team_Members_1.selection, [\"AssignedTo.Id\"]).asEquality(\"AssignedTo.Id\")}}); targets = filter targets by {{column(List_of_Main_Goals_1.selection, [\"Self_AcctMgrTarget\"]).asEquality(\"ParentTargetNames\")}}; targets = filter targets by {{column(Target_Period_Split__1.selection, [\"Self_AcctMgrTarget\"]).asEquality(\"ParentTargetNames\")}}; \nactuals = load \"MFG_TargetActuals\"; actuals = filter actuals by 'Order.StatusCode' == \"Activated\"; actuals = filter actuals by date('Order.EffectiveDate_Year', 'Order.EffectiveDate_Month', 'Order.EffectiveDate_Day') in [dateRange([{{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.StartDate_Year\"),1900).asObject()}}, {{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.StartDate_Month\"),01).asObject()}}, {{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.StartDate_Day\"),01).asObject()}}], [{{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.EndDate_Year\"),3000).asObject()}}, {{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.EndDate_Month\"),12).asObject()}}, {{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.EndDate_Day\"),31).asObject()}}])]; \nactuals = filter actuals by !({{column(Team_Members_1.selection, [\"AssignedTo.Id\"]).asEquality(\"TargetActualsOwner.Id\")}});\nresult = group CYtargets by 'AssignedTo.Id' left, targets by 'AssignedTo.Id' left, actuals by 'TargetActualsOwner.Managers';\nresult = foreach result generate CYtargets.'AssignedTo.Id' as 'AssignedTo.Id', first(CYtargets.'AssignedTo.Name') as 'AssignedTo.Name', sum(CYtargets.'PeriodTargetCurrencyValue') as 'TY Target', sum(targets.'PeriodTargetCurrencyValue') as 'PY Target', sum(actuals.'TotalPrice') as 'Actuals';\nresult = group result by 'AssignedTo.Id';\nresult = foreach result generate 'AssignedTo.Id' as 'AssignedTo.Id', first('AssignedTo.Name') as 'AssignedTo.Name', sum('TY Target') as 'TY Target Revenue', sum('PY Target') as 'PY Target Revenue', sum('Actuals') as 'PY Actual Revenue';","receiveFacetSource":{"mode":"exclude","steps":["List_of_Main_Goals_1","Period_Selection_1","PY_Targets_by_Accoun_1","PY_Targets_by_Accoun_2","TY_Accounts_by_Rep_1","TY_Product_Targets_1","TY_Product_Targets___1","PY_Product_targets_1","Product_Family_Filte_1","Product_Name_Filter_1","PY_Product_targets___1","PY_Targets_by_Produc_1","TY_Products_by_Reps_1","TY_Account_level_tar_1","Parent_Account_Filte_1","Account_Filter_1","Account_Type_Filter_1","Account_Industry_Fil_1","Account_Geo_Filter_1"]},"selectMode":"single","start":"[]","strings":["AssignedTo.Id","AssignedTo.Name"],"type":"saql","useGlobal":true,"visualizationParameters":{"parameters":{"autoFitMode":"keepLabels","bins":{"breakpoints":{"high":100,"low":0},"bands":{"high":{"color":"#008000","label":""},"low":{"color":"#B22222","label":""},"medium":{"color":"#ffa500","label":""}}},"legend":{"descOrder":false,"showHeader":true,"show":true,"customSize":"auto","position":"right-top","inside":false},"axisMode":"multi","tooltip":{"content":{"legend":{"showBinLabel":true,"measures":[],"showNullValues":true,"customizeLegend":false,"showPercentage":true,"showDimensions":true,"showMeasures":true,"dimensions":[]}}},"visualizationType":"hbar","title":{"fontSize":14,"subtitleFontSize":11,"label":"","align":"center","subtitleLabel":""},"binValues":false,"trellis":{"flipLabels":false,"showGridLines":true,"size":[100,100],"enable":false,"type":"x","chartsPerLine":4},"showActionMenu":true,"measureAxis2":{"sqrtScale":false,"showTitle":true,"showAxis":true,"title":"","customDomain":{"showDomain":false}},"measureAxis1":{"sqrtScale":false,"showTitle":true,"showAxis":true,"title":"","customDomain":{"showDomain":false}},"valueType":"compactNumber","theme":"wave","compactDecimalDigits":-1,"dimensionAxis":{"showTitle":true,"customSize":"auto","showAxis":true,"title":"","icons":{"useIcons":false,"iconProps":{"fit":"cover","column":"","type":"round"}}},"applyConditionalFormatting":true},"type":"chart"}},"Team_projected_attai_1":{"broadcastFacet":true,"groups":[],"label":"Team projected attainment by team members","numbers":[],"query":"targets = load \"MFG_AccountManagerPeriodicTargetDistribution\";targets = filter targets by date('Period.StartDate_Year', 'Period.StartDate_Month', 'Period.StartDate_Day') in [dateRange([{{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.StartDate_Year\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Year\"),1900)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.StartDate_Month\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Month\"),01)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.StartDate_Day\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Day\"),01)).asObject()}}], [{{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.EndDate_Year\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Year\"),3000)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.EndDate_Month\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Month\"),12)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.EndDate_Day\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Day\"),31)).asObject()}}])];  targets = filter targets by date('Period.EndDate_Year', 'Period.EndDate_Month', 'Period.EndDate_Day') in [dateRange([{{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.StartDate_Year\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Year\"),1900)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.StartDate_Month\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Month\"),01)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.StartDate_Day\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Day\"),01)).asObject()}}], [{{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.EndDate_Year\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Year\"),3000)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.EndDate_Month\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Month\"),12)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.EndDate_Day\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Day\"),31)).asObject()}}])]; \ntargets = filter targets by 'AcctMgrTargetDstr.ProductId' is null && 'AcctMgrTargetDstr.Account.Id' is null; targets = filter targets by {{column(Team_Members_1.selection, [\"AssignedTo.Id\"]).asEquality(\"AssignedTo.Managers\")}} && ({{column(Team_Members_1.selection, [\"AssignedTo.Id\"]).asEquality(\"AssignedTo.ManagerId\")}} || {{column(Team_Members_1.selection, [\"AssignedTo.Id\"]).asEquality(\"AssignedTo.ForecastRole.ParentRole.ForecastUserId\")}}); targets = filter targets by !({{column(Team_Members_1.selection, [\"AssignedTo.Id\"]).asEquality(\"AssignedTo.Id\")}}); targets = filter targets by {{column(List_of_Main_Goals_1.selection, [\"Self_AcctMgrTarget\"]).asEquality(\"ParentTargetNames\")}}; targets = filter targets by {{column(Target_Period_Split__1.selection, [\"Self_AcctMgrTarget\"]).asEquality(\"ParentTargetNames\")}};\n\nstartTargets = foreach targets generate 'Id'+\"@#%\"+'Period.StartDate_Year'+'Period.StartDate_Month'+\"@#%\"+'AssignedTo.Id'+\"!#%\"+'AssignedTo.Name' as 'Id',  'Period.StartDate_Year' as 'Date_Year', 'Period.StartDate_Month' as 'Date_Month', 'MonthlyTargetCurrencyValue' as 'MonthlyTargetCurrencyValue', 'Period.StartDate_sec_epoch' as 'Min Start Sec Epoch', 'Period.EndDate_sec_epoch' as 'Max End Sec Epoch';\nendTargets = foreach targets generate 'Id'+\"@#%\"+'Period.StartDate_Year'+'Period.StartDate_Month'+\"@#%\"+'AssignedTo.Id'+\"!#%\"+'AssignedTo.Name' as 'Id',  'Period.EndDate_Year' as 'Date_Year', 'Period.EndDate_Month' as 'Date_Month', 'MonthlyTargetCurrencyValue' as 'MonthlyTargetCurrencyValue', 'Period.StartDate_sec_epoch' as 'Min Start Sec Epoch', 'Period.EndDate_sec_epoch' as 'Max End Sec Epoch';\nTargetsForFill = union startTargets, endTargets;\nTargetsForFill = foreach TargetsForFill generate 'Id' as 'Id', 'Date_Year' as 'Date_Year', 'Date_Month' as 'Date_Month', 'MonthlyTargetCurrencyValue' as 'MonthlyTargetCurrencyValue', 'Min Start Sec Epoch' as 'Min Start Sec Epoch', 'Max End Sec Epoch' as 'Max End Sec Epoch';TargetsFilled = fill TargetsForFill by (dateCols=('Date_Year','Date_Month', \"Y-M\"), partition='Id');\nTargetsFilled = group TargetsFilled by ('Id', 'Date_Year', 'Date_Month');\n\nTargetsFilled = foreach TargetsFilled generate substr('Id',1,index_of('Id',\"@#%\",1,1)-1) as 'Id', substr('Id', index_of('Id',\"@#%\",1,2)+3, index_of('Id',\"!#%\") - (index_of('Id',\"@#%\",1,2)+3)) as 'AssignedTo.Id', substr('Id', index_of('Id',\"!#%\")+3) as 'AssignedTo.Name','Date_Year', 'Date_Month', max(sum('MonthlyTargetCurrencyValue')) over([..] partition by 'Id') as 'MonthlyTargetCurrencyValue', max(sum('Min Start Sec Epoch')) over([..] partition by 'Id') as 'Min Start Sec Epoch', max(sum('Max End Sec Epoch')) over([..] partition by 'Id') as 'Max End Sec Epoch';\nTargetsFilled = filter TargetsFilled by toDate('Date_Year'+\"-\"+'Date_Month'+\"-01 23:59:59\",\"yyyy-MM-dd HH:mm:ss\") >= toDate('Min Start Sec Epoch');\nTargetsFilled = filter TargetsFilled by toDate('Date_Year'+\"-\"+'Date_Month'+\"-01 00:00:00\",\"yyyy-MM-dd HH:mm:ss\") <= toDate('Max End Sec Epoch'); actuals = load \"MFG_TargetActuals\"; actuals = filter actuals by !({{column(Team_Members_1.selection, [\"AssignedTo.Id\"]).asEquality(\"TargetActualsOwner.Id\")}}); actuals = filter actuals by {{coalesce(column(Targets_Vs_Actuals_f_1.selection, [\"AssignedTo.Id\"]), column(Team_Attainment_1.selection, [\"AssignedTo.Id\"]), column(PY_Team_Attainment_1.selection, [\"AssignedTo.Id\"]), column(PY_Targets_Vs_Actual_1.selection, [\"AssignedTo.Id\"]), column(Team_Members_1.selection, [\"AssignedTo.Id\"])).asEquality(\"TargetActualsOwner_for_filter.Managers\")}}; \nactuals = filter actuals by 'Order.StatusCode' == \"Activated\";\nactuals_for_projection = group actuals by ('TargetActualsOwner.Managers', 'Order.EffectiveDate_Year', 'Order.EffectiveDate_Month');\nactuals_for_projection = foreach actuals_for_projection generate 'TargetActualsOwner.Managers' as 'TargetActualsOwner.Managers', 'Order.EffectiveDate_Year', 'Order.EffectiveDate_Month', sum('TotalPrice') as 'Total Price';\nactuals_for_projection = fill actuals_for_projection by (dateCols=('Order.EffectiveDate_Year','Order.EffectiveDate_Month', \"Y-M\"), partition='TargetActualsOwner.Managers');\n\nactuals_for_projection = timeseries actuals_for_projection generate 'Total Price' as 'Projected Total Price' with (partition='TargetActualsOwner.Managers', length=36, dateCols=('Order.EffectiveDate_Year','Order.EffectiveDate_Month', \"Y-M\"), seasonality = 0, ignoreLast = false);\nactuals_for_projection = foreach actuals_for_projection generate 'TargetActualsOwner.Managers' as 'TargetActualsOwner.Managers', 'Order.EffectiveDate_Year', 'Order.EffectiveDate_Month', 'Total Price' as 'Total Price', case when 'Total Price' > coalesce('Projected Total Price',0) then 'Total Price' when coalesce('Projected Total Price',0) >= 0 then 'Projected Total Price' else 0 end as 'Projected Total Price', month_last_day(toDate('Order.EffectiveDate_Year'+\"-\"+'Order.EffectiveDate_Month'+\"-27 00:00:00\",\"yyyy-MM-dd HH:mm:ss\")) as 'Month Last Day'; actuals_for_projection = filter actuals_for_projection by 'Month Last Day' > now(); actuals_for_projection = filter actuals_for_projection by toDate('Order.EffectiveDate_Year'+\"-\"+'Order.EffectiveDate_Month'+\"-01 00:00:00\",\"yyyy-MM-dd HH:mm:ss\") >= toDate(\"{{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.StartDate_Year\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Year\"),1900)).asObject()}}\"+\"-\"+\"{{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.StartDate_Month\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Month\"),\"01\")).asObject()}}\"+\"-\"+\"{{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.StartDate_Day\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Day\"),\"01\")).asObject()}}\"+\" 00:00:00\",\"yyyy-MM-dd HH:mm:ss\") && toDate('Order.EffectiveDate_Year'+\"-\"+'Order.EffectiveDate_Month'+\"-01 00:00:00\",\"yyyy-MM-dd HH:mm:ss\") <= toDate(\"{{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.EndDate_Year\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Year\"),3000)).asObject()}}\"+\"-\"+\"{{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.EndDate_Month\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Month\"),12)).asObject()}}\"+\"-\"+\"{{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.EndDate_Day\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Day\"),31)).asObject()}}\"+\" 00:00:00\",\"yyyy-MM-dd HH:mm:ss\"); actuals = filter actuals by date('Order.EffectiveDate_Year', 'Order.EffectiveDate_Month', 'Order.EffectiveDate_Day') in [dateRange([{{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.StartDate_Year\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Year\"),1900)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.StartDate_Month\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Month\"),01)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.StartDate_Day\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Day\"),01)).asObject()}}], [{{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.EndDate_Year\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Year\"),3000)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.EndDate_Month\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Month\"),12)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.EndDate_Day\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Day\"),31)).asObject()}}])]; actuals_for_join = group actuals by ('TargetActualsOwner.Managers', 'Order.EffectiveDate_Year', 'Order.EffectiveDate_Month') full, \nactuals_for_projection by ('TargetActualsOwner.Managers', 'Order.EffectiveDate_Year', 'Order.EffectiveDate_Month');\nactuals_for_join = foreach actuals_for_join generate coalesce(actuals.'TargetActualsOwner.Managers', actuals_for_projection.'TargetActualsOwner.Managers') as 'TargetActualsOwner.Managers', coalesce(actuals.'Order.EffectiveDate_Year',actuals_for_projection.'Order.EffectiveDate_Year') as 'Order.EffectiveDate_Year', coalesce(actuals.'Order.EffectiveDate_Month',actuals_for_projection.'Order.EffectiveDate_Month') as 'Order.EffectiveDate_Month',  sum(actuals_for_projection.'Projected Total Price') as 'Projections', sum(actuals.'TotalPrice') as 'Actuals', coalesce(sum(actuals_for_projection.'Projected Total Price'),sum(actuals.'TotalPrice')) as 'Actuals & Projection';\n\n\nresult = group TargetsFilled by ('AssignedTo.Id') left, actuals_for_join by ('TargetActualsOwner.Managers');\nresult = foreach result generate TargetsFilled.'AssignedTo.Id' as 'AssignedTo.Id', first(TargetsFilled.'AssignedTo.Name') as 'AssignedTo.Name', coalesce(sum(actuals_for_join.'Actuals & Projection'),0)/sum(TargetsFilled.'MonthlyTargetCurrencyValue') as 'Projected Attainment', 0/0 as ' ';","receiveFacetSource":{"mode":"exclude","steps":["List_of_Main_Goals_1","PY_Targets_by_Accoun_1","PY_Targets_by_Accoun_2","TY_Accounts_by_Rep_1","TY_Product_Targets_1","TY_Product_Targets___1","PY_Product_targets_1","Product_Family_Filte_1","Product_Name_Filter_1","PY_Product_targets___1","PY_Targets_by_Produc_1","TY_Products_by_Reps_1","TY_Account_level_tar_1","Parent_Account_Filte_1","Account_Filter_1","Account_Type_Filter_1","Account_Industry_Fil_1","Account_Geo_Filter_1"]},"selectMode":"none","strings":[],"type":"saql","useGlobal":true,"visualizationParameters":{"parameters":{"autoFitMode":"keepLabels","bins":{"breakpoints":{"high":100,"low":0},"bands":{"high":{"color":"#008000","label":""},"low":{"color":"#B22222","label":""},"medium":{"color":"#ffa500","label":""}}},"legend":{"descOrder":false,"showHeader":true,"show":true,"customSize":"auto","position":"right-top","inside":false},"axisMode":"multi","tooltip":{"content":{"legend":{"showBinLabel":true,"measures":[],"showNullValues":true,"customizeLegend":false,"showPercentage":true,"showDimensions":true,"showMeasures":true,"dimensions":[]}}},"visualizationType":"hbar","title":{"fontSize":14,"subtitleFontSize":11,"label":"","align":"center","subtitleLabel":""},"binValues":false,"trellis":{"flipLabels":false,"showGridLines":true,"size":[100,100],"enable":false,"type":"x","chartsPerLine":4},"columnMap":{"trellis":[],"dimensionAxis":["AssignedTo.Id"],"plots":["Projected Attainment"]},"showActionMenu":true,"measureAxis2":{"sqrtScale":false,"showTitle":true,"showAxis":true,"title":"","customDomain":{"showDomain":false}},"measureAxis1":{"sqrtScale":false,"showTitle":true,"showAxis":true,"title":"","customDomain":{"showDomain":false}},"valueType":"compactNumber","theme":"wave","compactDecimalDigits":-1,"dimensionAxis":{"showTitle":true,"customSize":"auto","showAxis":true,"title":"","icons":{"useIcons":false,"iconProps":{"fit":"cover","column":"","type":"round"}}},"applyConditionalFormatting":true},"type":"chart"}},"TY_Accounts_by_Rep_1":{"broadcastFacet":true,"groups":[],"label":"TY Accounts by Rep","numbers":[],"query":"targets = load \"MFG_AccountManagerPeriodicTargetDistribution\"; targets = filter targets by !('AcctMgrTargetDstr.Account.Id' is null); targets = filter targets by date('Period.StartDate_Year', 'Period.StartDate_Month', 'Period.StartDate_Day') in [dateRange([{{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.StartDate_Year\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Year\"),1900)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.StartDate_Month\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Month\"),01)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.StartDate_Day\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Day\"),01)).asObject()}}], [{{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.EndDate_Year\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Year\"),3000)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.EndDate_Month\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Month\"),12)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.EndDate_Day\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Day\"),31)).asObject()}}])]; targets = filter targets by date('Period.EndDate_Year', 'Period.EndDate_Month', 'Period.EndDate_Day') in [dateRange([{{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.StartDate_Year\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Year\"),1900)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.StartDate_Month\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Month\"),01)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.StartDate_Day\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Day\"),01)).asObject()}}], [{{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.EndDate_Year\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Year\"),3000)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.EndDate_Month\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Month\"),12)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.EndDate_Day\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Day\"),31)).asObject()}}])]; targets = filter targets by {{column(Team_Members_1.selection, [\"AssignedTo.Id\"]).asEquality(\"AssignedTo.Managers\")}} && ({{column(Team_Members_1.selection, [\"AssignedTo.Id\"]).asEquality(\"AssignedTo.ManagerId\")}} || {{column(Team_Members_1.selection, [\"AssignedTo.Id\"]).asEquality(\"AssignedTo.ForecastRole.ParentRole.ForecastUserId\")}}); targets = filter targets by !({{column(Team_Members_1.selection, [\"AssignedTo.Id\"]).asEquality(\"AssignedTo.Id\")}}); targets = filter targets by {{column(List_of_Main_Goals_1.selection, [\"Self_AcctMgrTarget\"]).asEquality(\"ParentTargetNames\")}}; targets = filter targets by {{column(Target_Period_Split__1.selection, [\"Self_AcctMgrTarget\"]).asEquality(\"ParentTargetNames\")}}; actuals = load \"MFG_TargetActuals\"; actuals = filter actuals by !({{column(Team_Members_1.selection, [\"AssignedTo.Id\"]).asEquality(\"TargetActualsOwner.Id\")}}); actuals = filter actuals by {{column(Team_Members_1.selection, [\"AssignedTo.Id\"]).asEquality(\"TargetActualsOwner_for_filter.Managers\")}}; actuals = filter actuals by 'Order.StatusCode' == \"Activated\"; actuals = filter actuals by date('Order.EffectiveDate_Year', 'Order.EffectiveDate_Month', 'Order.EffectiveDate_Day') in [dateRange([{{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.StartDate_Year\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Year\"),1900)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.StartDate_Month\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Month\"),01)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.StartDate_Day\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Day\"),01)).asObject()}}], [{{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.EndDate_Year\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Year\"),3000)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.EndDate_Month\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Month\"),12)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.EndDate_Day\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Day\"),31)).asObject()}}])]; result = group  targets by ('AssignedTo.Id', 'AcctMgrTargetDstr.Account.Name') left, actuals by ('TargetActualsOwner.Managers', 'Order.Account.Name'); result = foreach result generate first(targets.'AssignedTo.Name') as 'AssignedTo.Name', targets.'AcctMgrTargetDstr.Account.Name' as 'AcctMgrTargetDstr.Account.Name', coalesce(sum(actuals.'TotalPrice'),0) as 'Actuals', coalesce(sum(actuals.'TotalPrice'),0)/sum(targets.'PeriodTargetCurrencyValue') as 'Attainment'; result = group result by ('AssignedTo.Name', 'AcctMgrTargetDstr.Account.Name'); result = foreach result generate 'AssignedTo.Name', 'AcctMgrTargetDstr.Account.Name', {{cell(Attaintment___Actual_1.selection, 0, \"Projection\").asObject()}};","receiveFacetSource":{"mode":"exclude","steps":["List_of_Main_Goals_1","Period_Selection_1","Product_Name_Filter_1","PY_Product_targets_1","PY_Product_targets___1","PY_Targets_by_Produc_1","PY_Product_targets_a_1","TY_Product_Targets_1","TY_Product_Targets___1","TY_Products_by_Reps_1","TY_Product_Targets_V_1","Product_Family_Filte_1"]},"selectMode":"single","strings":[],"type":"saql","useGlobal":true,"visualizationParameters":{"parameters":{"autoFitMode":"keepLabels","bins":{"breakpoints":{"high":100,"low":0},"bands":{"high":{"color":"#008000","label":""},"low":{"color":"#B22222","label":""},"medium":{"color":"#ffa500","label":""}}},"legend":{"descOrder":false,"showHeader":true,"show":true,"customSize":"auto","position":"right-top","inside":false},"highColor":"#009DDF","tooltip":{"content":{"legend":{"showBinLabel":true,"measures":[],"showNullValues":true,"customizeLegend":false,"showPercentage":true,"showDimensions":true,"showMeasures":true,"dimensions":[]}}},"lowColor":"#E2F4FC","visualizationType":"heatmap","title":{"fontSize":14,"subtitleFontSize":11,"label":"","align":"center","subtitleLabel":""},"binValues":false,"showActionMenu":true,"x":{"showTitle":true,"showAxis":true,"title":""},"y":{"showTitle":true,"showAxis":true,"title":""},"theme":"wave","applyConditionalFormatting":true},"type":"chart"}},"Account_Geo_Filter_1":{"broadcastFacet":true,"datasets":[{"name":"MFG_AccountManagerPeriodicTargetDistribution"}],"isGlobal":false,"label":"Account Geo Filter","query":{"query":"{\"measures\":[[\"count\",\"*\"]],\"groups\":[\"AcctMgrTargetDstr.Account.BillingCountry\"]}","version":-1.0},"receiveFacetSource":{"mode":"exclude","steps":["List_of_Main_Goals_1","Period_Selection_1","Product_Name_Filter_1","PY_Product_targets_1","PY_Product_targets___1","PY_Targets_by_Produc_1","PY_Product_targets_a_1","TY_Product_Targets_1","TY_Product_Targets___1","TY_Products_by_Reps_1","TY_Product_Targets_V_1","Product_Family_Filte_1"]},"selectMode":"multi","type":"aggregateflex","useGlobal":true,"visualizationParameters":{"parameters":{"autoFitMode":"keepLabels","bins":{"breakpoints":{"high":100,"low":0},"bands":{"high":{"color":"#008000","label":""},"low":{"color":"#B22222","label":""},"medium":{"color":"#ffa500","label":""}}},"legend":{"descOrder":false,"showHeader":true,"show":true,"customSize":"auto","position":"right-top","inside":false},"axisMode":"multi","tooltip":{"content":{"legend":{"showBinLabel":true,"measures":[],"showNullValues":true,"customizeLegend":false,"showPercentage":true,"showDimensions":true,"showMeasures":true,"dimensions":[]}}},"visualizationType":"hbar","title":{"fontSize":14,"subtitleFontSize":11,"label":"","align":"center","subtitleLabel":""},"binValues":false,"trellis":{"flipLabels":false,"showGridLines":true,"size":[100,100],"enable":false,"type":"x","chartsPerLine":4},"columnMap":{"trellis":[],"dimensionAxis":["AcctMgrTargetDstr.Account.BillingCountry"],"plots":["count"]},"showActionMenu":true,"measureAxis2":{"sqrtScale":false,"showTitle":true,"showAxis":true,"title":"","customDomain":{"showDomain":false}},"measureAxis1":{"sqrtScale":false,"showTitle":true,"showAxis":true,"title":"","customDomain":{"showDomain":false}},"valueType":"compactNumber","theme":"wave","compactDecimalDigits":-1,"dimensionAxis":{"showTitle":true,"customSize":"auto","showAxis":true,"title":"","icons":{"useIcons":false,"iconProps":{"fit":"cover","column":"","type":"round"}}},"applyConditionalFormatting":true},"type":"chart"}},"Team_Members_1":{"broadcastFacet":false,"groups":[],"label":"Team Members","numbers":[],"query":"q = load \"MFG_AccountManagerPeriodicTargetDistribution\";\nUsers = load \"MFG_Users\";\nq = group q by 'AssignedTo.Id' left, Users by 'Id';\nq = foreach q generate q.'AssignedTo.Id' as 'AssignedTo.Id', first(q.'AssignedTo.Name') as 'AssignedTo.Name', count(Users) as 'count';\nq = order q by 'count' desc;\nq = limit q 2000;","receiveFacetSource":{"mode":"none","steps":[]},"selectMode":"singlerequired","start":"[]","strings":[],"type":"saql","useGlobal":true,"visualizationParameters":{"parameters":{"autoFitMode":"keepLabels","bins":{"breakpoints":{"high":100,"low":0},"bands":{"high":{"color":"#008000","label":""},"low":{"color":"#B22222","label":""},"medium":{"color":"#ffa500","label":""}}},"legend":{"descOrder":false,"showHeader":true,"show":true,"customSize":"auto","position":"right-top","inside":false},"axisMode":"multi","tooltip":{"content":{"legend":{"showBinLabel":true,"measures":[],"showNullValues":true,"customizeLegend":false,"showPercentage":true,"showDimensions":true,"showMeasures":true,"dimensions":[]}}},"visualizationType":"hbar","title":{"fontSize":14,"subtitleFontSize":11,"label":"","align":"center","subtitleLabel":""},"binValues":false,"trellis":{"flipLabels":false,"showGridLines":true,"size":[100,100],"enable":false,"type":"x","chartsPerLine":4},"showActionMenu":true,"measureAxis2":{"sqrtScale":false,"showTitle":true,"showAxis":true,"title":"","customDomain":{"showDomain":false}},"measureAxis1":{"sqrtScale":false,"showTitle":true,"showAxis":true,"title":"","customDomain":{"showDomain":false}},"valueType":"compactNumber","theme":"wave","compactDecimalDigits":-1,"dimensionAxis":{"showTitle":true,"customSize":"auto","showAxis":true,"title":"","icons":{"useIcons":false,"iconProps":{"fit":"cover","column":"","type":"round"}}},"applyConditionalFormatting":true},"type":"chart"}},"PY_Product_targets_a_1":{"broadcastFacet":true,"groups":[],"label":"PY Product targets attainment over time","numbers":[],"query":"targets = load \"MFG_AccountManagerPeriodicTargetDistribution\";\nPYTargets = filter targets by !('AcctMgrTargetDstr.ProductId' is null);PYTargets = filter PYTargets by date('Period.StartDate_Year', 'Period.StartDate_Month', 'Period.StartDate_Day') in [dateRange([{{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.StartDate_Year\"),1900).asObject()}}, {{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.StartDate_Month\"),01).asObject()}}, {{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.StartDate_Day\"),01).asObject()}}], [{{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.EndDate_Year\"),3000).asObject()}}, {{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.EndDate_Month\"),12).asObject()}}, {{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.EndDate_Day\"),31).asObject()}}])]; PYTargets = filter PYTargets by date('Period.EndDate_Year', 'Period.EndDate_Month', 'Period.EndDate_Day') in [dateRange([{{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.StartDate_Year\"),1900).asObject()}}, {{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.StartDate_Month\"),01).asObject()}}, {{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.StartDate_Day\"),01).asObject()}}], [{{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.EndDate_Year\"),3000).asObject()}}, {{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.EndDate_Month\"),12).asObject()}}, {{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.EndDate_Day\"),31).asObject()}}])]; PYTargets = filter PYTargets by {{column(Team_Members_1.selection, [\"AssignedTo.Id\"]).asEquality(\"AssignedTo.Managers\")}} && ({{column(Team_Members_1.selection, [\"AssignedTo.Id\"]).asEquality(\"AssignedTo.ManagerId\")}} || {{column(Team_Members_1.selection, [\"AssignedTo.Id\"]).asEquality(\"AssignedTo.ForecastRole.ParentRole.ForecastUserId\")}}); PYTargets = filter PYTargets by !({{column(Team_Members_1.selection, [\"AssignedTo.Id\"]).asEquality(\"AssignedTo.Id\")}}); PYTargets = filter PYTargets by {{column(List_of_Main_Goals_1.selection, [\"Self_AcctMgrTarget\"]).asEquality(\"ParentTargetNames\")}}; PYTargets = filter PYTargets by {{column(Target_Period_Split__1.selection, [\"Self_AcctMgrTarget\"]).asEquality(\"ParentTargetNames\")}};\nstartPYTargets = foreach PYTargets generate 'Id'+'Period.StartDate_Year'+'Period.StartDate_Month'+\"@#%\"+'AcctMgrTargetDstr.ProductId'+\"!#%\"+'AcctMgrTargetDstr.Product.Name' as 'Id',  'Period.StartDate_Year' as 'Date_Year', 'Period.StartDate_Month' as 'Date_Month', 'MonthlyTargetCurrencyValue' as 'MonthlyTargetCurrencyValue', 'Period.StartDate_sec_epoch' as 'Min Start Sec Epoch', 'Period.EndDate_sec_epoch' as 'Max End Sec Epoch';\nendPYTargets = foreach PYTargets generate 'Id'+'Period.StartDate_Year'+'Period.StartDate_Month'+\"@#%\"+'AcctMgrTargetDstr.ProductId'+\"!#%\"+'AcctMgrTargetDstr.Product.Name' as 'Id',  'Period.EndDate_Year' as 'Date_Year', 'Period.EndDate_Month' as 'Date_Month', 'MonthlyTargetCurrencyValue' as 'MonthlyTargetCurrencyValue', 'Period.StartDate_sec_epoch' as 'Min Start Sec Epoch', 'Period.EndDate_sec_epoch' as 'Max End Sec Epoch';\nPYTargetsForFill = union startPYTargets, endPYTargets;\nPYTargetsForFill = foreach PYTargetsForFill generate 'Id' as 'Id', 'Date_Year' as 'Date_Year', 'Date_Month' as 'Date_Month', 'MonthlyTargetCurrencyValue' as 'MonthlyTargetCurrencyValue', 'Min Start Sec Epoch' as 'Min Start Sec Epoch', 'Max End Sec Epoch' as 'Max End Sec Epoch';\nPYTargetsFilled = fill PYTargetsForFill by (dateCols=('Date_Year','Date_Month', \"Y-M\"), partition='Id');\nPYTargetsFilled = group PYTargetsFilled by ('Id', 'Date_Year', 'Date_Month');\nPYTargetsFilled = foreach PYTargetsFilled generate substr('Id',1,index_of('Id',\"@#%\",1,1)-1) as 'Id', substr('Id', index_of('Id',\"@#%\",1,1)+3, index_of('Id',\"!#%\") - (index_of('Id',\"@#%\",1,1)+3)) as 'AcctMgrTargetDstr.ProductId', substr('Id', index_of('Id',\"!#%\")+3) as 'AcctMgrTargetDstr.Product.Name', 'Date_Year', 'Date_Month', max(sum('MonthlyTargetCurrencyValue')) over([..] partition by 'Id') as 'MonthlyTargetCurrencyValue', max(sum('Min Start Sec Epoch')) over([..] partition by 'Id') as 'Min Start Sec Epoch', max(sum('Max End Sec Epoch')) over([..] partition by 'Id') as 'Max End Sec Epoch';\nPYTargetsFilled = filter PYTargetsFilled by toDate('Date_Year'+\"-\"+'Date_Month'+\"-01 23:59:59\",\"yyyy-MM-dd HH:mm:ss\") >= toDate('Min Start Sec Epoch');\nPYTargetsFilled = filter PYTargetsFilled by toDate('Date_Year'+\"-\"+'Date_Month'+\"-01 00:00:00\",\"yyyy-MM-dd HH:mm:ss\") <= toDate('Max End Sec Epoch');\nSYTargets = filter targets by !('AcctMgrTargetDstr.ProductId' is null);SYTargets = filter SYTargets by date('Period.StartDate_Year', 'Period.StartDate_Month', 'Period.StartDate_Day') in [dateRange([{{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.StartDate_Year\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Year\"),1900)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.StartDate_Month\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Month\"),01)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.StartDate_Day\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Day\"),01)).asObject()}}], [{{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.EndDate_Year\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Year\"),3000)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.EndDate_Month\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Month\"),12)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.EndDate_Day\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Day\"),31)).asObject()}}])]; SYTargets = filter SYTargets by date('Period.EndDate_Year', 'Period.EndDate_Month', 'Period.EndDate_Day') in [dateRange([{{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.StartDate_Year\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Year\"),1900)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.StartDate_Month\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Month\"),01)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.StartDate_Day\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Day\"),01)).asObject()}}], [{{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.EndDate_Year\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Year\"),3000)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.EndDate_Month\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Month\"),12)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.EndDate_Day\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Day\"),31)).asObject()}}])]; SYTargets = filter SYTargets by {{column(Team_Members_1.selection, [\"AssignedTo.Id\"]).asEquality(\"AssignedTo.Managers\")}} && ({{column(Team_Members_1.selection, [\"AssignedTo.Id\"]).asEquality(\"AssignedTo.ManagerId\")}} || {{column(Team_Members_1.selection, [\"AssignedTo.Id\"]).asEquality(\"AssignedTo.ForecastRole.ParentRole.ForecastUserId\")}}); SYTargets = filter SYTargets by !({{column(Team_Members_1.selection, [\"AssignedTo.Id\"]).asEquality(\"AssignedTo.Id\")}}); SYTargets = filter SYTargets by {{column(List_of_Main_Goals_1.selection, [\"Self_AcctMgrTarget\"]).asEquality(\"ParentTargetNames\")}}; SYTargets = filter SYTargets by {{column(Target_Period_Split__1.selection, [\"Self_AcctMgrTarget\"]).asEquality(\"ParentTargetNames\")}}; \nstartSYTargets = foreach SYTargets generate 'Id'+'Period.StartDate_Year'+'Period.StartDate_Month'+\"@#%\"+'AcctMgrTargetDstr.ProductId'+\"!#%\"+'AcctMgrTargetDstr.Product.Name' as 'Id',  number_to_string((string_to_number('Period.StartDate_Year')-1),\"#\") as 'Date_Year', 'Period.StartDate_Month' as 'Date_Month', 'MonthlyTargetCurrencyValue' as 'MonthlyTargetCurrencyValue', 'Period.StartDate_sec_epoch' as 'Min Start Sec Epoch', 'Period.EndDate_sec_epoch' as 'Max End Sec Epoch';\nendSYTargets = foreach SYTargets generate 'Id'+'Period.StartDate_Year'+'Period.StartDate_Month'+\"@#%\"+'AcctMgrTargetDstr.ProductId'+\"!#%\"+'AcctMgrTargetDstr.Product.Name' as 'Id',  number_to_string((string_to_number('Period.EndDate_Year')-1),\"#\") as 'Date_Year', 'Period.EndDate_Month' as 'Date_Month', 'MonthlyTargetCurrencyValue' as 'MonthlyTargetCurrencyValue', 'Period.StartDate_sec_epoch' as 'Min Start Sec Epoch', 'Period.EndDate_sec_epoch' as 'Max End Sec Epoch';\nSYTargetsForFill = union startSYTargets, endSYTargets;\nSYTargetsForFill = foreach SYTargetsForFill generate 'Id' as 'Id', 'Date_Year' as 'Date_Year', 'Date_Month' as 'Date_Month', 'MonthlyTargetCurrencyValue' as 'MonthlyTargetCurrencyValue', 'Min Start Sec Epoch' as 'Min Start Sec Epoch', 'Max End Sec Epoch' as 'Max End Sec Epoch';\nTYTargetsFilled = fill SYTargetsForFill by (dateCols=('Date_Year','Date_Month', \"Y-M\"), partition='Id');\nTYTargetsFilled = group TYTargetsFilled by ('Id', 'Date_Year', 'Date_Month');\nTYTargetsFilled = foreach TYTargetsFilled generate substr('Id',1,index_of('Id',\"@#%\",1,1)-1) as 'Id', substr('Id', index_of('Id',\"@#%\",1,1)+3, index_of('Id',\"!#%\") - (index_of('Id',\"@#%\",1,1)+3)) as 'AcctMgrTargetDstr.ProductId', substr('Id', index_of('Id',\"!#%\")+3) as 'AcctMgrTargetDstr.Product.Name', 'Date_Year', 'Date_Month', max(sum('MonthlyTargetCurrencyValue')) over([..] partition by 'Id') as 'MonthlyTargetCurrencyValue', max(sum('Min Start Sec Epoch')) over([..] partition by 'Id') as 'Min Start Sec Epoch', max(sum('Max End Sec Epoch')) over([..] partition by 'Id') as 'Max End Sec Epoch';\nTYTargetsFilled = filter TYTargetsFilled by toDate(number_to_string((string_to_number('Date_Year')+1),\"#\")+\"-\"+'Date_Month'+\"-01 23:59:59\",\"yyyy-MM-dd HH:mm:ss\") >= toDate('Min Start Sec Epoch');\nTYTargetsFilled = filter TYTargetsFilled by toDate(number_to_string((string_to_number('Date_Year')+1),\"#\")+\"-\"+'Date_Month'+\"-01 00:00:00\",\"yyyy-MM-dd HH:mm:ss\") <= toDate('Max End Sec Epoch');\nactuals = load \"MFG_TargetActuals\"; actuals = filter actuals by !({{column(Team_Members_1.selection, [\"AssignedTo.Id\"]).asEquality(\"TargetActualsOwner.Id\")}}); actuals = filter actuals by {{coalesce(column(Targets_Vs_Actuals_f_1.selection, [\"AssignedTo.Id\"]), column(Team_Attainment_1.selection, [\"AssignedTo.Id\"]), column(PY_Team_Attainment_1.selection, [\"AssignedTo.Id\"]), column(PY_Targets_Vs_Actual_1.selection, [\"AssignedTo.Id\"]), column(Team_Members_1.selection, [\"AssignedTo.Id\"])).asEquality(\"TargetActualsOwner.Managers\")}}; \nactuals = filter actuals by 'Order.StatusCode' == \"Activated\"; \nactuals_for_projection = group actuals by ('Product2Id', 'Order.EffectiveDate_Year', 'Order.EffectiveDate_Month');\nactuals_for_projection = foreach actuals_for_projection generate 'Product2Id' as 'Product2Id', 'Order.EffectiveDate_Year', 'Order.EffectiveDate_Month', sum('TotalPrice') as 'Total Price';\nactuals_for_projection = fill actuals_for_projection by (dateCols=('Order.EffectiveDate_Year','Order.EffectiveDate_Month', \"Y-M\"), partition='Product2Id');\nactuals_for_projection = timeseries actuals_for_projection generate 'Total Price' as 'Projected Total Price' with (partition='Product2Id', length=36, dateCols=('Order.EffectiveDate_Year','Order.EffectiveDate_Month', \"Y-M\"), seasonality = 0, ignoreLast = false);\nactuals_for_projection = foreach actuals_for_projection generate 'Product2Id' as 'Product2Id', 'Order.EffectiveDate_Year', 'Order.EffectiveDate_Month', 'Total Price' as 'Total Price', case when 'Total Price' > coalesce('Projected Total Price',0) then 'Total Price' when coalesce('Projected Total Price',0) >= 0 then 'Projected Total Price' else 0 end as 'Projected Total Price', month_last_day(toDate('Order.EffectiveDate_Year'+\"-\"+'Order.EffectiveDate_Month'+\"-27 00:00:00\",\"yyyy-MM-dd HH:mm:ss\")) as 'Month Last Day'; actuals_for_projection = filter actuals_for_projection by 'Month Last Day' > now(); actuals_for_projection = filter actuals_for_projection by toDate('Order.EffectiveDate_Year'+\"-\"+'Order.EffectiveDate_Month'+\"-01 00:00:00\",\"yyyy-MM-dd HH:mm:ss\") >= toDate(\"{{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.StartDate_Year\"),1900).asObject()}}\"+\"-\"+\"{{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.StartDate_Month\"),\"01\").asObject()}}\"+\"-\"+\"{{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.StartDate_Day\"),\"01\").asObject()}}\"+\" 00:00:00\",\"yyyy-MM-dd HH:mm:ss\") && toDate('Order.EffectiveDate_Year'+\"-\"+'Order.EffectiveDate_Month'+\"-01 00:00:00\",\"yyyy-MM-dd HH:mm:ss\") <= toDate(\"{{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.EndDate_Year\"),3000).asObject()}}\"+\"-\"+\"{{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.EndDate_Month\"),12).asObject()}}\"+\"-\"+\"{{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.EndDate_Day\"),31).asObject()}}\"+\" 00:00:00\",\"yyyy-MM-dd HH:mm:ss\"); actuals = filter actuals by date('Order.EffectiveDate_Year', 'Order.EffectiveDate_Month', 'Order.EffectiveDate_Day') in [dateRange([{{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.StartDate_Year\"),1900).asObject()}}, {{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.StartDate_Month\"),01).asObject()}}, {{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.StartDate_Day\"),01).asObject()}}], [{{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.EndDate_Year\"),3000).asObject()}}, {{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.EndDate_Month\"),12).asObject()}}, {{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.EndDate_Day\"),31).asObject()}}])]; \nactuals_for_join = group actuals by ('Product2Id', 'Order.EffectiveDate_Year', 'Order.EffectiveDate_Month') full, \nactuals_for_projection by ('Product2Id', 'Order.EffectiveDate_Year', 'Order.EffectiveDate_Month');\nactuals_for_join = foreach actuals_for_join generate coalesce(actuals.'Product2Id', actuals_for_projection.'Product2Id') as 'Product2Id', coalesce(actuals.'Order.EffectiveDate_Year',actuals_for_projection.'Order.EffectiveDate_Year') as 'Order.EffectiveDate_Year', coalesce(actuals.'Order.EffectiveDate_Month',actuals_for_projection.'Order.EffectiveDate_Month') as 'Order.EffectiveDate_Month',  sum(actuals_for_projection.'Projected Total Price') as 'Projections', sum(actuals.'TotalPrice') as 'Actuals', coalesce(sum(actuals_for_projection.'Projected Total Price'),sum(actuals.'TotalPrice')) as 'Actuals & Projection';\nresult = group PYTargetsFilled by ('AcctMgrTargetDstr.ProductId','Date_Year','Date_Month') full, TYTargetsFilled by ('AcctMgrTargetDstr.ProductId', 'Date_Year','Date_Month') left, actuals_for_join by ('Product2Id','Order.EffectiveDate_Year','Order.EffectiveDate_Month');\nresult = foreach result generate coalesce(PYTargetsFilled.'AcctMgrTargetDstr.ProductId', TYTargetsFilled.'AcctMgrTargetDstr.ProductId') as 'AcctMgrTargetDstr.ProductId', coalesce(PYTargetsFilled.'Date_Year', TYTargetsFilled.'Date_Year') as 'Date_Year', coalesce(PYTargetsFilled.'Date_Month', TYTargetsFilled.'Date_Month') as  'Date_Month', sum(TYTargetsFilled.'MonthlyTargetCurrencyValue') as 'TY Target', sum(PYTargetsFilled.'MonthlyTargetCurrencyValue') as 'PY Target', coalesce(sum(actuals_for_join.'Actuals'),0) as 'Actuals',  sum(actuals_for_join.'Projections') as 'Projections', coalesce(sum(actuals_for_join.'Actuals & Projection'),0) as 'Actuals & Projection';\nresult = group result by ('Date_Year', 'Date_Month');\nresult = foreach result generate 'Date_Year'+\"~~~\"+'Date_Month' as 'Period.StartDate_Year~~~Period.StartDate_Month', sum(sum('TY Target')) over([..0] partition by all order by ('Date_Year' asc, 'Date_Month' asc)) as 'TY Target Revenue', sum(sum('PY Target')) over([..0] partition by all order by ('Date_Year' asc, 'Date_Month' asc)) as 'PY Target Revenue', sum(sum('Actuals')) over([..0] partition by all order by ('Date_Year' asc, 'Date_Month' asc)) as 'PY Actual Revenue' ,case when coalesce(sum(sum('Projections')) over([..0] partition by all order by ('Date_Year' asc, 'Date_Month' asc)),0) > 0 then sum(sum('Actuals & Projection')) over([..0] partition by all order by ('Date_Year' asc, 'Date_Month' asc)) else sum(sum('Projections')) over([..0] partition by all order by ('Date_Year' asc, 'Date_Month' asc)) end as 'Projected Revenue';","receiveFacetSource":{"mode":"exclude","steps":["List_of_Main_Goals_1","Period_Selection_1","TY_Account_level_tar_1","TY_Accounts_by_Rep_1","Account_Targets_Vs_A_1","PY_Targets_by_Accoun_1","PY_Targets_by_Accoun_2","PY_Account_targets_a_1","Parent_Account_Filte_1","Account_Filter_1","Account_Type_Filter_1","Account_Industry_Fil_1","Account_Geo_Filter_1"]},"selectMode":"single","strings":[],"type":"saql","useGlobal":true,"visualizationParameters":{"parameters":{"stack":false,"showPoints":true,"legend":{"descOrder":false,"showHeader":true,"show":true,"customSize":"auto","position":"right-top","inside":false},"axisMode":"sync","tooltip":{"content":{"legend":{"showBinLabel":true,"measures":[],"showNullValues":true,"customizeLegend":false,"showPercentage":true,"showDimensions":true,"showMeasures":true,"dimensions":[]}}},"visualizationType":"time-combo","missingValue":"connect","timeAxis":{"showTitle":true,"predictiveLine":{"color":"#8932ED","label":"TODAY"},"showAxis":true,"title":"Date (Year-Month)"},"title":{"fontSize":14,"subtitleFontSize":11,"label":"","align":"center","subtitleLabel":""},"trellis":{"flipLabels":false,"showGridLines":true,"size":[100,100],"enable":false,"type":"x","chartsPerLine":4},"plots":{"Projections":{"mark":"line"},"TY Target":{"mark":"bar"},"Actuals":{"mark":"bar"},"PY Target":{"mark":"bar"}},"columnMap":{"timeAxis":["Period.StartDate_Year~~~Period.StartDate_Month"],"trellis":[],"plots":["TY Target Revenue","PY Target Revenue","PY Actual Revenue","Projected Revenue"]},"showActionMenu":true,"measureAxis2":{"sqrtScale":false,"showTitle":true,"showAxis":true,"title":"","customDomain":{"showDomain":false}},"measureAxis1":{"sqrtScale":false,"showTitle":true,"showAxis":true,"title":"","customDomain":{"showDomain":false}},"valueType":"compactNumber","valueTypeOnLine":"none","theme":"wave","compactDecimalDigits":-1,"applyConditionalFormatting":true},"type":"chart"}},"Product_Name_Filter_1":{"broadcastFacet":true,"datasets":[{"name":"MFG_AccountManagerPeriodicTargetDistribution"}],"isGlobal":false,"label":"Product Name Filter","query":{"query":"{\"measures\":[[\"count\",\"*\"]],\"groups\":[\"AcctMgrTargetDstr.ProductId\",\"AcctMgrTargetDstr.Product.Name\"]}","version":-1.0},"receiveFacetSource":{"mode":"exclude","steps":["List_of_Main_Goals_1","Period_Selection_1","TY_Account_level_tar_1","TY_Accounts_by_Rep_1","Account_Targets_Vs_A_1","PY_Targets_by_Accoun_1","PY_Targets_by_Accoun_2","PY_Account_targets_a_1","Parent_Account_Filte_1","Account_Filter_1","Account_Type_Filter_1","Account_Industry_Fil_1","Account_Geo_Filter_1"]},"selectMode":"multi","type":"aggregateflex","useGlobal":true,"visualizationParameters":{"parameters":{"autoFitMode":"keepLabels","bins":{"breakpoints":{"high":100,"low":0},"bands":{"high":{"color":"#008000","label":""},"low":{"color":"#B22222","label":""},"medium":{"color":"#ffa500","label":""}}},"legend":{"descOrder":false,"showHeader":true,"show":true,"customSize":"auto","position":"right-top","inside":false},"axisMode":"multi","tooltip":{"content":{"legend":{"showBinLabel":true,"measures":[],"showNullValues":true,"customizeLegend":false,"showPercentage":true,"showDimensions":true,"showMeasures":true,"dimensions":[]}}},"visualizationType":"hbar","title":{"fontSize":14,"subtitleFontSize":11,"label":"","align":"center","subtitleLabel":""},"binValues":false,"trellis":{"flipLabels":false,"showGridLines":true,"size":[100,100],"enable":false,"type":"x","chartsPerLine":4},"columnMap":{"trellis":[],"dimensionAxis":["AcctMgrTargetDstr.ProductId","AcctMgrTargetDstr.Product.Name"],"plots":["count"]},"showActionMenu":true,"measureAxis2":{"sqrtScale":false,"showTitle":true,"showAxis":true,"title":"","customDomain":{"showDomain":false}},"measureAxis1":{"sqrtScale":false,"showTitle":true,"showAxis":true,"title":"","customDomain":{"showDomain":false}},"valueType":"compactNumber","theme":"wave","compactDecimalDigits":-1,"dimensionAxis":{"showTitle":true,"customSize":"auto","showAxis":true,"title":"","icons":{"useIcons":false,"iconProps":{"fit":"cover","column":"","type":"round"}}},"applyConditionalFormatting":true},"type":"chart"}},"Account_Industry_Fil_1":{"broadcastFacet":true,"datasets":[{"name":"MFG_AccountManagerPeriodicTargetDistribution"}],"isGlobal":false,"label":"Account Industry Filter","query":{"query":"{\"measures\":[[\"count\",\"*\"]],\"groups\":[\"AcctMgrTargetDstr.Account.Industry\"]}","version":-1.0},"receiveFacetSource":{"mode":"exclude","steps":["List_of_Main_Goals_1","Period_Selection_1","Product_Name_Filter_1","PY_Product_targets_1","PY_Product_targets___1","PY_Targets_by_Produc_1","PY_Product_targets_a_1","TY_Product_Targets_1","TY_Product_Targets___1","TY_Products_by_Reps_1","TY_Product_Targets_V_1","Product_Family_Filte_1"]},"selectMode":"multi","type":"aggregateflex","useGlobal":true,"visualizationParameters":{"parameters":{"autoFitMode":"keepLabels","bins":{"breakpoints":{"high":100,"low":0},"bands":{"high":{"color":"#008000","label":""},"low":{"color":"#B22222","label":""},"medium":{"color":"#ffa500","label":""}}},"legend":{"descOrder":false,"showHeader":true,"show":true,"customSize":"auto","position":"right-top","inside":false},"axisMode":"multi","tooltip":{"content":{"legend":{"showBinLabel":true,"measures":[],"showNullValues":true,"customizeLegend":false,"showPercentage":true,"showDimensions":true,"showMeasures":true,"dimensions":[]}}},"visualizationType":"hbar","title":{"fontSize":14,"subtitleFontSize":11,"label":"","align":"center","subtitleLabel":""},"binValues":false,"trellis":{"flipLabels":false,"showGridLines":true,"size":[100,100],"enable":false,"type":"x","chartsPerLine":4},"columnMap":{"trellis":[],"dimensionAxis":["AcctMgrTargetDstr.Account.Industry"],"plots":["count"]},"showActionMenu":true,"measureAxis2":{"sqrtScale":false,"showTitle":true,"showAxis":true,"title":"","customDomain":{"showDomain":false}},"measureAxis1":{"sqrtScale":false,"showTitle":true,"showAxis":true,"title":"","customDomain":{"showDomain":false}},"valueType":"compactNumber","theme":"wave","compactDecimalDigits":-1,"dimensionAxis":{"showTitle":true,"customSize":"auto","showAxis":true,"title":"","icons":{"useIcons":false,"iconProps":{"fit":"cover","column":"","type":"round"}}},"applyConditionalFormatting":true},"type":"chart"}},"PY_Account_targets_a_1":{"broadcastFacet":true,"groups":[],"label":"PY Account targets attainment over time (MoM)","numbers":[],"query":"targets = load \"MFG_AccountManagerPeriodicTargetDistribution\"; PYTargets = filter targets by !('AcctMgrTargetDstr.Account.Id' is null);PYTargets = filter PYTargets by date('Period.StartDate_Year', 'Period.StartDate_Month', 'Period.StartDate_Day') in [dateRange([{{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.StartDate_Year\"),1900).asObject()}}, {{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.StartDate_Month\"),01).asObject()}}, {{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.StartDate_Day\"),01).asObject()}}], [{{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.EndDate_Year\"),3000).asObject()}}, {{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.EndDate_Month\"),12).asObject()}}, {{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.EndDate_Day\"),31).asObject()}}])]; PYTargets = filter PYTargets by date('Period.EndDate_Year', 'Period.EndDate_Month', 'Period.EndDate_Day') in [dateRange([{{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.StartDate_Year\"),1900).asObject()}}, {{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.StartDate_Month\"),01).asObject()}}, {{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.StartDate_Day\"),01).asObject()}}], [{{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.EndDate_Year\"),3000).asObject()}}, {{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.EndDate_Month\"),12).asObject()}}, {{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.EndDate_Day\"),31).asObject()}}])]; PYTargets = filter PYTargets by {{column(Team_Members_1.selection, [\"AssignedTo.Id\"]).asEquality(\"AssignedTo.Managers\")}} && ({{column(Team_Members_1.selection, [\"AssignedTo.Id\"]).asEquality(\"AssignedTo.ManagerId\")}} || {{column(Team_Members_1.selection, [\"AssignedTo.Id\"]).asEquality(\"AssignedTo.ForecastRole.ParentRole.ForecastUserId\")}}); PYTargets = filter PYTargets by !({{column(Team_Members_1.selection, [\"AssignedTo.Id\"]).asEquality(\"AssignedTo.Id\")}}); PYTargets = filter PYTargets by {{column(List_of_Main_Goals_1.selection, [\"Self_AcctMgrTarget\"]).asEquality(\"ParentTargetNames\")}}; PYTargets = filter PYTargets by {{column(Target_Period_Split__1.selection, [\"Self_AcctMgrTarget\"]).asEquality(\"ParentTargetNames\")}};\nstartPYTargets = foreach PYTargets generate 'Id'+'Period.StartDate_Year'+'Period.StartDate_Month'+\"@#%\"+'AcctMgrTargetDstr.Account.Id'+\"!#%\"+'AcctMgrTargetDstr.Account.Name' as 'Id',  'Period.StartDate_Year' as 'Date_Year', 'Period.StartDate_Month' as 'Date_Month', 'MonthlyTargetCurrencyValue' as 'MonthlyTargetCurrencyValue', 'Period.StartDate_sec_epoch' as 'Min Start Sec Epoch', 'Period.EndDate_sec_epoch' as 'Max End Sec Epoch';\nendPYTargets = foreach PYTargets generate 'Id'+'Period.StartDate_Year'+'Period.StartDate_Month'+\"@#%\"+'AcctMgrTargetDstr.Account.Id'+\"!#%\"+'AcctMgrTargetDstr.Account.Name' as 'Id',  'Period.EndDate_Year' as 'Date_Year', 'Period.EndDate_Month' as 'Date_Month', 'MonthlyTargetCurrencyValue' as 'MonthlyTargetCurrencyValue', 'Period.StartDate_sec_epoch' as 'Min Start Sec Epoch', 'Period.EndDate_sec_epoch' as 'Max End Sec Epoch';\nPYTargetsForFill = union startPYTargets, endPYTargets;\nPYTargetsForFill = foreach PYTargetsForFill generate 'Id' as 'Id', 'Date_Year' as 'Date_Year', 'Date_Month' as 'Date_Month', 'MonthlyTargetCurrencyValue' as 'MonthlyTargetCurrencyValue', 'Min Start Sec Epoch' as 'Min Start Sec Epoch', 'Max End Sec Epoch' as 'Max End Sec Epoch';\nPYTargetsFilled = fill PYTargetsForFill by (dateCols=('Date_Year','Date_Month', \"Y-M\"), partition='Id');\nPYTargetsFilled = group PYTargetsFilled by ('Id', 'Date_Year', 'Date_Month');\nPYTargetsFilled = foreach PYTargetsFilled generate substr('Id',1,index_of('Id',\"@#%\",1,1)-1) as 'Id', substr('Id', index_of('Id',\"@#%\",1,1)+3, index_of('Id',\"!#%\") - (index_of('Id',\"@#%\",1,1)+3)) as 'AcctMgrTargetDstr.Account.Id', substr('Id', index_of('Id',\"!#%\")+3) as 'AcctMgrTargetDstr.Account.Name', 'Date_Year', 'Date_Month', max(sum('MonthlyTargetCurrencyValue')) over([..] partition by 'Id') as 'MonthlyTargetCurrencyValue', max(sum('Min Start Sec Epoch')) over([..] partition by 'Id') as 'Min Start Sec Epoch', max(sum('Max End Sec Epoch')) over([..] partition by 'Id') as 'Max End Sec Epoch';\nPYTargetsFilled = filter PYTargetsFilled by toDate('Date_Year'+\"-\"+'Date_Month'+\"-01 23:59:59\",\"yyyy-MM-dd HH:mm:ss\") >= toDate('Min Start Sec Epoch');\nPYTargetsFilled = filter PYTargetsFilled by toDate('Date_Year'+\"-\"+'Date_Month'+\"-01 00:00:00\",\"yyyy-MM-dd HH:mm:ss\") <= toDate('Max End Sec Epoch'); SYTargets = filter targets by !('AcctMgrTargetDstr.Account.Id' is null); SYTargets = filter SYTargets by date('Period.StartDate_Year', 'Period.StartDate_Month', 'Period.StartDate_Day') in [dateRange([{{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.StartDate_Year\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Year\"),1900)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.StartDate_Month\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Month\"),01)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.StartDate_Day\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Day\"),01)).asObject()}}], [{{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.EndDate_Year\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Year\"),3000)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.EndDate_Month\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Month\"),12)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.EndDate_Day\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Day\"),31)).asObject()}}])]; SYTargets = filter SYTargets by date('Period.EndDate_Year', 'Period.EndDate_Month', 'Period.EndDate_Day') in [dateRange([{{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.StartDate_Year\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Year\"),1900)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.StartDate_Month\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Month\"),01)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.StartDate_Day\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Day\"),01)).asObject()}}], [{{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.EndDate_Year\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Year\"),3000)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.EndDate_Month\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Month\"),12)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.EndDate_Day\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Day\"),31)).asObject()}}])]; SYTargets = filter SYTargets by {{column(Team_Members_1.selection, [\"AssignedTo.Id\"]).asEquality(\"AssignedTo.Managers\")}} && ({{column(Team_Members_1.selection, [\"AssignedTo.Id\"]).asEquality(\"AssignedTo.ManagerId\")}} || {{column(Team_Members_1.selection, [\"AssignedTo.Id\"]).asEquality(\"AssignedTo.ForecastRole.ParentRole.ForecastUserId\")}}); SYTargets = filter SYTargets by !({{column(Team_Members_1.selection, [\"AssignedTo.Id\"]).asEquality(\"AssignedTo.Id\")}}); SYTargets = filter SYTargets by {{column(List_of_Main_Goals_1.selection, [\"Self_AcctMgrTarget\"]).asEquality(\"ParentTargetNames\")}}; SYTargets = filter SYTargets by {{column(Target_Period_Split__1.selection, [\"Self_AcctMgrTarget\"]).asEquality(\"ParentTargetNames\")}};\nstartSYTargets = foreach SYTargets generate 'Id'+'Period.StartDate_Year'+'Period.StartDate_Month'+\"@#%\"+'AcctMgrTargetDstr.Account.Id'+\"!#%\"+'AcctMgrTargetDstr.Account.Name' as 'Id',  number_to_string((string_to_number('Period.StartDate_Year')-1),\"#\") as 'Date_Year', 'Period.StartDate_Month' as 'Date_Month', 'MonthlyTargetCurrencyValue' as 'MonthlyTargetCurrencyValue', 'Period.StartDate_sec_epoch' as 'Min Start Sec Epoch', 'Period.EndDate_sec_epoch' as 'Max End Sec Epoch';\nendSYTargets = foreach SYTargets generate 'Id'+'Period.StartDate_Year'+'Period.StartDate_Month'+\"@#%\"+'AcctMgrTargetDstr.Account.Id'+\"!#%\"+'AcctMgrTargetDstr.Account.Name' as 'Id',  number_to_string((string_to_number('Period.EndDate_Year')-1),\"#\") as 'Date_Year', 'Period.EndDate_Month' as 'Date_Month', 'MonthlyTargetCurrencyValue' as 'MonthlyTargetCurrencyValue', 'Period.StartDate_sec_epoch' as 'Min Start Sec Epoch', 'Period.EndDate_sec_epoch' as 'Max End Sec Epoch';\nSYTargetsForFill = union startSYTargets, endSYTargets;\nSYTargetsForFill = foreach SYTargetsForFill generate 'Id' as 'Id', 'Date_Year' as 'Date_Year', 'Date_Month' as 'Date_Month', 'MonthlyTargetCurrencyValue' as 'MonthlyTargetCurrencyValue', 'Min Start Sec Epoch' as 'Min Start Sec Epoch', 'Max End Sec Epoch' as 'Max End Sec Epoch';\nTYTargetsFilled = fill SYTargetsForFill by (dateCols=('Date_Year','Date_Month', \"Y-M\"), partition='Id');\nTYTargetsFilled = group TYTargetsFilled by ('Id', 'Date_Year', 'Date_Month');\nTYTargetsFilled = foreach TYTargetsFilled generate substr('Id',1,index_of('Id',\"@#%\",1,1)-1) as 'Id', substr('Id', index_of('Id',\"@#%\",1,1)+3, index_of('Id',\"!#%\") - (index_of('Id',\"@#%\",1,1)+3)) as 'AcctMgrTargetDstr.Account.Id', substr('Id', index_of('Id',\"!#%\")+3) as 'AcctMgrTargetDstr.Account.Name', 'Date_Year', 'Date_Month', max(sum('MonthlyTargetCurrencyValue')) over([..] partition by 'Id') as 'MonthlyTargetCurrencyValue', max(sum('Min Start Sec Epoch')) over([..] partition by 'Id') as 'Min Start Sec Epoch', max(sum('Max End Sec Epoch')) over([..] partition by 'Id') as 'Max End Sec Epoch';\nTYTargetsFilled = filter TYTargetsFilled by toDate(number_to_string((string_to_number('Date_Year')+1),\"#\")+\"-\"+'Date_Month'+\"-01 23:59:59\",\"yyyy-MM-dd HH:mm:ss\") >= toDate('Min Start Sec Epoch');\nTYTargetsFilled = filter TYTargetsFilled by toDate(number_to_string((string_to_number('Date_Year')+1),\"#\")+\"-\"+'Date_Month'+\"-01 00:00:00\",\"yyyy-MM-dd HH:mm:ss\") <= toDate('Max End Sec Epoch');\nactuals = load \"MFG_TargetActuals\"; actuals = filter actuals by !({{column(Team_Members_1.selection, [\"AssignedTo.Id\"]).asEquality(\"TargetActualsOwner.Id\")}}); actuals = filter actuals by {{coalesce(column(Targets_Vs_Actuals_f_1.selection, [\"AssignedTo.Id\"]), column(Team_Attainment_1.selection, [\"AssignedTo.Id\"]), column(PY_Team_Attainment_1.selection, [\"AssignedTo.Id\"]), column(PY_Targets_Vs_Actual_1.selection, [\"AssignedTo.Id\"]), column(Team_Members_1.selection, [\"AssignedTo.Id\"])).asEquality(\"TargetActualsOwner.Managers\")}}; \nactuals = filter actuals by 'Order.StatusCode' == \"Activated\";  actuals_for_projection = group actuals by ('Order.Account.Id', 'Order.EffectiveDate_Year', 'Order.EffectiveDate_Month');\nactuals_for_projection = foreach actuals_for_projection generate 'Order.Account.Id' as 'Order.Account.Id', 'Order.EffectiveDate_Year', 'Order.EffectiveDate_Month', sum('TotalPrice') as 'Total Price';\nactuals_for_projection = fill actuals_for_projection by (dateCols=('Order.EffectiveDate_Year','Order.EffectiveDate_Month', \"Y-M\"), partition='Order.Account.Id');\nactuals_for_projection = timeseries actuals_for_projection generate 'Total Price' as 'Projected Total Price' with (partition='Order.Account.Id', length=36, dateCols=('Order.EffectiveDate_Year','Order.EffectiveDate_Month', \"Y-M\"), seasonality = 0, ignoreLast = false);\nactuals_for_projection = foreach actuals_for_projection generate 'Order.Account.Id' as 'Order.Account.Id', 'Order.EffectiveDate_Year', 'Order.EffectiveDate_Month', 'Total Price' as 'Total Price', case when 'Total Price' > coalesce('Projected Total Price',0) then 'Total Price' when coalesce('Projected Total Price',0) >= 0 then 'Projected Total Price' else 0 end as 'Projected Total Price', month_last_day(toDate('Order.EffectiveDate_Year'+\"-\"+'Order.EffectiveDate_Month'+\"-27 00:00:00\",\"yyyy-MM-dd HH:mm:ss\")) as 'Month Last Day'; actuals_for_projection = filter actuals_for_projection by 'Month Last Day' > now(); actuals_for_projection = filter actuals_for_projection by toDate('Order.EffectiveDate_Year'+\"-\"+'Order.EffectiveDate_Month'+\"-01 00:00:00\",\"yyyy-MM-dd HH:mm:ss\") >= toDate(\"{{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.StartDate_Year\"),1900).asObject()}}\"+\"-\"+\"{{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.StartDate_Month\"),\"01\").asObject()}}\"+\"-\"+\"{{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.StartDate_Day\"),\"01\").asObject()}}\"+\" 00:00:00\",\"yyyy-MM-dd HH:mm:ss\") && toDate('Order.EffectiveDate_Year'+\"-\"+'Order.EffectiveDate_Month'+\"-01 00:00:00\",\"yyyy-MM-dd HH:mm:ss\") <= toDate(\"{{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.EndDate_Year\"),3000).asObject()}}\"+\"-\"+\"{{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.EndDate_Month\"),12).asObject()}}\"+\"-\"+\"{{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.EndDate_Day\"),31).asObject()}}\"+\" 00:00:00\",\"yyyy-MM-dd HH:mm:ss\"); actuals = filter actuals by date('Order.EffectiveDate_Year', 'Order.EffectiveDate_Month', 'Order.EffectiveDate_Day') in [dateRange([{{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.StartDate_Year\"),1900).asObject()}}, {{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.StartDate_Month\"),01).asObject()}}, {{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.StartDate_Day\"),01).asObject()}}], [{{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.EndDate_Year\"),3000).asObject()}}, {{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.EndDate_Month\"),12).asObject()}}, {{coalesce(cell(Previous_FY_Dates_1.result, 0, \"AcctMgrTarget.Period.EndDate_Day\"),31).asObject()}}])];\nactuals_for_join = group actuals by ('Order.Account.Id', 'Order.EffectiveDate_Year', 'Order.EffectiveDate_Month') full, \nactuals_for_projection by ('Order.Account.Id', 'Order.EffectiveDate_Year', 'Order.EffectiveDate_Month');\nactuals_for_join = foreach actuals_for_join generate coalesce(actuals.'Order.Account.Id', actuals_for_projection.'Order.Account.Id') as 'Order.Account.Id', coalesce(actuals.'Order.EffectiveDate_Year',actuals_for_projection.'Order.EffectiveDate_Year') as 'Order.EffectiveDate_Year', coalesce(actuals.'Order.EffectiveDate_Month',actuals_for_projection.'Order.EffectiveDate_Month') as 'Order.EffectiveDate_Month',  sum(actuals_for_projection.'Projected Total Price') as 'Projections', sum(actuals.'TotalPrice') as 'Actuals', coalesce(sum(actuals_for_projection.'Projected Total Price'),sum(actuals.'TotalPrice')) as 'Actuals & Projection';\n\nresult = group PYTargetsFilled by ('AcctMgrTargetDstr.Account.Id','Date_Year','Date_Month') full, TYTargetsFilled by ('AcctMgrTargetDstr.Account.Id', 'Date_Year','Date_Month') left, actuals_for_join by ('Order.Account.Id','Order.EffectiveDate_Year','Order.EffectiveDate_Month');\nresult = foreach result generate coalesce(PYTargetsFilled.'AcctMgrTargetDstr.Account.Id', TYTargetsFilled.'AcctMgrTargetDstr.Account.Id') as 'AcctMgrTargetDstr.Account.Id', coalesce(PYTargetsFilled.'Date_Year', TYTargetsFilled.'Date_Year') as 'Date_Year', coalesce(PYTargetsFilled.'Date_Month', TYTargetsFilled.'Date_Month') as  'Date_Month', sum(TYTargetsFilled.'MonthlyTargetCurrencyValue') as 'TY Target', sum(PYTargetsFilled.'MonthlyTargetCurrencyValue') as 'PY Target', coalesce(sum(actuals_for_join.'Actuals'),0) as 'Actuals',  sum(actuals_for_join.'Projections') as 'Projections', coalesce(sum(actuals_for_join.'Actuals & Projection'),0) as 'Actuals & Projection';\nresult = group result by ('Date_Year', 'Date_Month');\nresult = foreach result generate 'Date_Year'+\"~~~\"+'Date_Month' as 'Period.StartDate_Year~~~Period.StartDate_Month', sum(sum('TY Target')) over([..0] partition by all order by ('Date_Year' asc, 'Date_Month' asc)) as 'TY Target Revenue', sum(sum('PY Target')) over([..0] partition by all order by ('Date_Year' asc, 'Date_Month' asc)) as 'PY Target Revenue', sum(sum('Actuals')) over([..0] partition by all order by ('Date_Year' asc, 'Date_Month' asc)) as 'PY Actual Revenue' ,case when coalesce(sum(sum('Projections')) over([..0] partition by all order by ('Date_Year' asc, 'Date_Month' asc)),0) > 0 then sum(sum('Actuals & Projection')) over([..0] partition by all order by ('Date_Year' asc, 'Date_Month' asc)) else sum(sum('Projections')) over([..0] partition by all order by ('Date_Year' asc, 'Date_Month' asc)) end as 'Projected Revenue';","receiveFacetSource":{"mode":"exclude","steps":["Period_Selection_1","List_of_Main_Goals_1","Product_Name_Filter_1","PY_Product_targets_1","PY_Product_targets___1","PY_Targets_by_Produc_1","PY_Product_targets_a_1","TY_Product_Targets_1","TY_Product_Targets___1","TY_Products_by_Reps_1","TY_Product_Targets_V_1","Product_Family_Filte_1"]},"selectMode":"none","strings":[],"type":"saql","useGlobal":true,"visualizationParameters":{"parameters":{"stack":false,"showPoints":true,"legend":{"descOrder":false,"showHeader":true,"show":true,"customSize":"auto","position":"right-top","inside":false},"axisMode":"sync","tooltip":{"content":{"legend":{"showBinLabel":true,"measures":[],"showNullValues":true,"customizeLegend":false,"showPercentage":true,"showDimensions":true,"showMeasures":true,"dimensions":[]}}},"visualizationType":"time-combo","missingValue":"connect","timeAxis":{"showTitle":true,"predictiveLine":{"color":"#8932ED","label":"TODAY"},"showAxis":true,"title":""},"title":{"fontSize":14,"subtitleFontSize":11,"label":"","align":"center","subtitleLabel":""},"trellis":{"flipLabels":false,"showGridLines":true,"size":[100,100],"enable":false,"type":"x","chartsPerLine":4},"plots":{"PY Target Revenue":{"mark":"bar"},"PY Actual Revenue":{"mark":"bar"},"TY Target Revenue":{"mark":"bar"},"Projected Revenue":{"mark":"line"}},"columnMap":{"timeAxis":["Period.StartDate_Year~~~Period.StartDate_Month"],"trellis":[],"plots":["TY Target Revenue","PY Target Revenue","PY Actual Revenue","Projected Revenue"]},"showActionMenu":true,"measureAxis2":{"sqrtScale":false,"showTitle":true,"showAxis":true,"title":"","customDomain":{"showDomain":false}},"measureAxis1":{"sqrtScale":false,"showTitle":true,"showAxis":true,"title":"","customDomain":{"showDomain":false}},"valueType":"compactNumber","valueTypeOnLine":"none","theme":"wave","compactDecimalDigits":-1,"applyConditionalFormatting":true},"type":"chart"}},"Cummulative___Over_t_1":{"broadcastFacet":true,"columns":{"NoProjection":{"type":"string"},"TYTargetProjection":{"type":"string"},"PYProjectionProjection":{"type":"string"},"ProjectionProjection":{"type":"string"},"PYNoProjection":{"type":"string"},"PYTargetProjection":{"type":"string"},"TargetProjection":{"type":"string"},"ActualsProjection":{"type":"string"},"ForecastProjection":{"type":"string"},"Display":{"type":"string"}},"label":"Cummulative / Over time","selectMode":"singlerequired","start":"{\"Display\":[\"Cumulative\"]}","type":"staticflex","values":["{\"Display\":\"Cumulative\",\"TargetProjection\":\"sum(sum(TargetsFilled.'MonthlyTargetCurrencyValue')) over([..0] partition by all order by (TargetsFilled.'Date_Year' asc, TargetsFilled.'Date_Month' asc))\",\"TYTargetProjection\":\"sum(sum(TYTargetsFilled.'MonthlyTargetCurrencyValue')) over([..0] partition by all order by (TYTargetsFilled.'Date_Year' asc, TYTargetsFilled.'Date_Month' asc))\",\"PYTargetProjection\":\"sum(sum(PYTargetsFilled.'MonthlyTargetCurrencyValue')) over([..0] partition by all order by (PYTargetsFilled.'Date_Year' asc, PYTargetsFilled.'Date_Month' asc))\",\"ActualsProjection\":\"sum(sum(actuals_for_join.'Actuals')) over([..0] partition by all order by (actuals_for_join.'Order.EffectiveDate_Year' asc, actuals_for_join.'Order.EffectiveDate_Month' asc))\",\"ForecastProjection\":\"sum(sum(forecasts.'ForecastedRevenueFinal')) over([..0] partition by all order by (forecasts.'Period.EndDate_Year' asc, forecasts.'Period.EndDate_Month' asc))\",\"ProjectionProjection\":\",case when coalesce(sum(sum(actuals_for_join.'Projections')) over([..0] partition by all order by (actuals_for_join.'Order.EffectiveDate_Year' asc, actuals_for_join.'Order.EffectiveDate_Month' asc)),0) > 0 then sum(sum(actuals_for_join.'Actuals & Projection')) over([..0] partition by all order by (actuals_for_join.'Order.EffectiveDate_Year' asc, actuals_for_join.'Order.EffectiveDate_Month' asc)) else sum(sum(actuals_for_join.'Projections')) over([..0] partition by all order by (actuals_for_join.'Order.EffectiveDate_Year' asc, actuals_for_join.'Order.EffectiveDate_Month' asc)) end as 'Projected Revenue'\",\"NoProjection\":\" \",\"PYProjectionProjection\":\",case when coalesce(sum(sum(actuals_for_join.'Projections')) over([..0] partition by all order by (actuals_for_join.'Order.EffectiveDate_Year' asc, actuals_for_join.'Order.EffectiveDate_Month' asc)),0) > 0 then sum(sum(actuals_for_join.'Actuals & Projection')) over([..0] partition by all order by (actuals_for_join.'Order.EffectiveDate_Year' asc, actuals_for_join.'Order.EffectiveDate_Month' asc)) else sum(sum(actuals_for_join.'Projections')) over([..0] partition by all order by (actuals_for_join.'Order.EffectiveDate_Year' asc, actuals_for_join.'Order.EffectiveDate_Month' asc)) end as 'PY Projected Revenue'\",\"PYNoProjection\":\" \"}","{\"Display\":\"Month over Month\",\"TargetProjection\":\"sum(TargetsFilled.'MonthlyTargetCurrencyValue')\",\"TYTargetProjection\":\"sum(TYTargetsFilled.'MonthlyTargetCurrencyValue')\",\"PYTargetProjection\":\"sum(PYTargetsFilled.'MonthlyTargetCurrencyValue')\",\"ActualsProjection\":\"sum(actuals_for_join.'Actuals')\",\"ForecastProjection\":\"sum(forecasts.'ForecastedRevenueFinal')\",\"ProjectionProjection\":\",sum(actuals_for_join.'Projections') as 'Projected Revenue'\",\"NoProjection\":\" \",\"PYProjectionProjection\":\",sum(actuals_for_join.'Projections') as 'PY Projected Revenue'\",\"PYNoProjection\":\" \"}"]},"Target_Assignment_Ra_1":{"broadcastFacet":true,"groups":[],"label":"Target Assignment Ratio","numbers":[],"query":"targets = load \"MFG_AccountManagerPeriodicTargetDistribution\"; targets = filter targets by date('Period.StartDate_Year', 'Period.StartDate_Month', 'Period.StartDate_Day') in [dateRange([{{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.StartDate_Year\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Year\"),1900)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.StartDate_Month\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Month\"),01)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.StartDate_Day\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Day\"),01)).asObject()}}], [{{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.EndDate_Year\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Year\"),3000)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.EndDate_Month\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Month\"),12)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.EndDate_Day\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Day\"),31)).asObject()}}])];  targets = filter targets by date('Period.EndDate_Year', 'Period.EndDate_Month', 'Period.EndDate_Day') in [dateRange([{{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.StartDate_Year\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Year\"),1900)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.StartDate_Month\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Month\"),01)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.StartDate_Day\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Day\"),01)).asObject()}}], [{{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.EndDate_Year\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Year\"),3000)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.EndDate_Month\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Month\"),12)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.EndDate_Day\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Day\"),31)).asObject()}}])]; \ntargets = filter targets by 'AcctMgrTargetDstr.ProductId' is null && 'AcctMgrTargetDstr.Account.Id' is null; targets = filter targets by {{column(List_of_Main_Goals_1.selection, [\"Self_AcctMgrTarget\"]).asEquality(\"ParentTargetNames\")}}; targets = filter targets by {{column(Target_Period_Split__1.selection, [\"Self_AcctMgrTarget\"]).asEquality(\"ParentTargetNames\")}}; \nmyTargets = filter targets by {{column(Team_Members_1.selection, [\"AssignedTo.Id\"]).asEquality(\"AssignedTo.Id\")}};\nteamTargets = filter targets by {{column(Team_Members_1.selection, [\"AssignedTo.Id\"]).asEquality(\"AssignedTo.Managers\")}} && ({{column(Team_Members_1.selection, [\"AssignedTo.Id\"]).asEquality(\"AssignedTo.ManagerId\")}} || {{column(Team_Members_1.selection, [\"AssignedTo.Id\"]).asEquality(\"AssignedTo.ForecastRole.ParentRole.ForecastUserId\")}}); teamTargets = filter teamTargets by !({{column(Team_Members_1.selection, [\"AssignedTo.Id\"]).asEquality(\"AssignedTo.Id\")}}); \nresult = group myTargets by all left, teamTargets by all;\nresult = foreach result generate sum(myTargets.'PeriodTargetCurrencyValue') - coalesce(sum(teamTargets.'PeriodTargetCurrencyValue'),0) as 'Unassigned',  coalesce(sum(teamTargets.'PeriodTargetCurrencyValue'),0)/sum(myTargets.'PeriodTargetCurrencyValue') as 'Assignment Ratio';","receiveFacetSource":{"mode":"exclude","steps":["Team_Attainment_1","Targets_Vs_Actuals_f_1","Team_projected_attai_1","Target_Period_Split__1","List_of_Main_Goals_1","PY_Team_Attainment_1","PY_Targets_Vs_Actual_1","PY_Targets_by_Accoun_1","PY_Targets_by_Accoun_2","TY_Account_level_tar_1","TY_Product_Targets_1","TY_Product_Targets___1","PY_Product_targets_1","Product_Family_Filte_1","Product_Name_Filter_1","PY_Product_targets___1","PY_Targets_by_Produc_1","TY_Products_by_Reps_1","TY_Accounts_by_Rep_1","Parent_Account_Filte_1","Account_Filter_1","Account_Type_Filter_1","Account_Industry_Fil_1","Account_Geo_Filter_1"]},"selectMode":"single","strings":[],"type":"saql","useGlobal":true,"visualizationParameters":{"parameters":{"autoFitMode":"keepLabels","bins":{"breakpoints":{"high":100,"low":0},"bands":{"high":{"color":"#008000","label":""},"low":{"color":"#B22222","label":""},"medium":{"color":"#ffa500","label":""}}},"legend":{"descOrder":false,"showHeader":true,"show":true,"customSize":"auto","position":"right-top","inside":false},"axisMode":"multi","tooltip":{"content":{"legend":{"showBinLabel":true,"measures":[],"showNullValues":true,"customizeLegend":false,"showPercentage":true,"showDimensions":true,"showMeasures":true,"dimensions":[]}}},"visualizationType":"hbar","title":{"fontSize":14,"subtitleFontSize":11,"label":"","align":"center","subtitleLabel":""},"binValues":false,"trellis":{"flipLabels":false,"showGridLines":true,"size":[100,100],"enable":false,"type":"x","chartsPerLine":4},"showActionMenu":true,"measureAxis2":{"sqrtScale":false,"showTitle":true,"showAxis":true,"title":"","customDomain":{"showDomain":false}},"measureAxis1":{"sqrtScale":false,"showTitle":true,"showAxis":true,"title":"","customDomain":{"showDomain":false}},"valueType":"compactNumber","theme":"wave","compactDecimalDigits":-1,"dimensionAxis":{"showTitle":true,"customSize":"auto","showAxis":true,"title":"","icons":{"useIcons":false,"iconProps":{"fit":"cover","column":"","type":"round"}}},"applyConditionalFormatting":true},"type":"chart"}},"TY_Product_Targets_1":{"broadcastFacet":true,"groups":[],"label":"TY Product Targets","numbers":[],"query":"targets = load \"MFG_AccountManagerPeriodicTargetDistribution\";\ntargets = filter targets by !('AcctMgrTargetDstr.ProductId' is null);targets = filter targets by date('Period.StartDate_Year', 'Period.StartDate_Month', 'Period.StartDate_Day') in [dateRange([{{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.StartDate_Year\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Year\"),1900)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.StartDate_Month\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Month\"),01)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.StartDate_Day\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Day\"),01)).asObject()}}], [{{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.EndDate_Year\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Year\"),3000)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.EndDate_Month\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Month\"),12)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.EndDate_Day\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Day\"),31)).asObject()}}])];  targets = filter targets by date('Period.EndDate_Year', 'Period.EndDate_Month', 'Period.EndDate_Day') in [dateRange([{{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.StartDate_Year\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Year\"),1900)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.StartDate_Month\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Month\"),01)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.StartDate_Day\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Day\"),01)).asObject()}}], [{{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.EndDate_Year\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Year\"),3000)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.EndDate_Month\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Month\"),12)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.EndDate_Day\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Day\"),31)).asObject()}}])]; \ntargets = filter targets by {{column(Team_Members_1.selection, [\"AssignedTo.Id\"]).asEquality(\"AssignedTo.Managers\")}} && ({{column(Team_Members_1.selection, [\"AssignedTo.Id\"]).asEquality(\"AssignedTo.ManagerId\")}} || {{column(Team_Members_1.selection, [\"AssignedTo.Id\"]).asEquality(\"AssignedTo.ForecastRole.ParentRole.ForecastUserId\")}}); targets = filter targets by !({{column(Team_Members_1.selection, [\"AssignedTo.Id\"]).asEquality(\"AssignedTo.Id\")}}); targets = filter targets by {{column(List_of_Main_Goals_1.selection, [\"Self_AcctMgrTarget\"]).asEquality(\"ParentTargetNames\")}}; targets = filter targets by {{column(Target_Period_Split__1.selection, [\"Self_AcctMgrTarget\"]).asEquality(\"ParentTargetNames\")}}; \nstartTargets = foreach targets generate 'Id'+\"@#%\"+'Period.StartDate_Year'+'Period.StartDate_Month'+\"@#%\"+'AcctMgrTargetDstr.Product.Id'+\"!#%\"+'AcctMgrTargetDstr.Product.Name' as 'Id',  'Period.StartDate_Year' as 'Date_Year', 'Period.StartDate_Month' as 'Date_Month', 'MonthlyTargetCurrencyValue' as 'MonthlyTargetCurrencyValue', 'Period.StartDate_sec_epoch' as 'Min Start Sec Epoch', 'Period.EndDate_sec_epoch' as 'Max End Sec Epoch';\nendTargets = foreach targets generate 'Id'+\"@#%\"+'Period.StartDate_Year'+'Period.StartDate_Month'+\"@#%\"+'AcctMgrTargetDstr.Product.Id'+\"!#%\"+'AcctMgrTargetDstr.Product.Name' as 'Id',  'Period.EndDate_Year' as 'Date_Year', 'Period.EndDate_Month' as 'Date_Month', 'MonthlyTargetCurrencyValue' as 'MonthlyTargetCurrencyValue', 'Period.StartDate_sec_epoch' as 'Min Start Sec Epoch', 'Period.EndDate_sec_epoch' as 'Max End Sec Epoch';\nTargetsForFill = union startTargets, endTargets;\nTargetsForFill = foreach TargetsForFill generate 'Id' as 'Id', 'Date_Year' as 'Date_Year', 'Date_Month' as 'Date_Month', 'MonthlyTargetCurrencyValue' as 'MonthlyTargetCurrencyValue', 'Min Start Sec Epoch' as 'Min Start Sec Epoch', 'Max End Sec Epoch' as 'Max End Sec Epoch';\nTargetsFilled = fill TargetsForFill by (dateCols=('Date_Year','Date_Month', \"Y-M\"), partition='Id');\nTargetsFilled = group TargetsFilled by ('Id', 'Date_Year', 'Date_Month');\nTargetsFilled = foreach TargetsFilled generate substr('Id',1,index_of('Id',\"@#%\",1,1)-1) as 'Id', substr('Id', index_of('Id',\"@#%\",1,2)+3, index_of('Id',\"!#%\") - (index_of('Id',\"@#%\",1,2)+3)) as 'AcctMgrTargetDstr.Product.Id', substr('Id', index_of('Id',\"!#%\")+3) as 'AcctMgrTargetDstr.Product.Name','Date_Year', 'Date_Month', max(sum('MonthlyTargetCurrencyValue')) over([..] partition by 'Id') as 'MonthlyTargetCurrencyValue', max(sum('Min Start Sec Epoch')) over([..] partition by 'Id') as 'Min Start Sec Epoch', max(sum('Max End Sec Epoch')) over([..] partition by 'Id') as 'Max End Sec Epoch';\nTargetsFilled = filter TargetsFilled by toDate('Date_Year'+\"-\"+'Date_Month'+\"-01 23:59:59\",\"yyyy-MM-dd HH:mm:ss\") >= toDate('Min Start Sec Epoch');\nTargetsFilled = filter TargetsFilled by toDate('Date_Year'+\"-\"+'Date_Month'+\"-01 00:00:00\",\"yyyy-MM-dd HH:mm:ss\") <= toDate('Max End Sec Epoch');\nactuals = load \"MFG_TargetActuals\";actuals = filter actuals by !({{column(Team_Members_1.selection, [\"AssignedTo.Id\"]).asEquality(\"TargetActualsOwner.Id\")}}); actuals = filter actuals by {{column(Team_Members_1.selection, [\"AssignedTo.Id\"]).asEquality(\"TargetActualsOwner.Managers\")}}; actuals = filter actuals by 'Order.StatusCode' == \"Activated\"; \nactuals_for_projection = group actuals by ('Product2Id', 'Order.EffectiveDate_Year', 'Order.EffectiveDate_Month');\nactuals_for_projection = foreach actuals_for_projection generate 'Product2Id' as 'Product2Id', 'Order.EffectiveDate_Year', 'Order.EffectiveDate_Month', sum('TotalPrice') as 'Total Price';\nactuals_for_projection = fill actuals_for_projection by (dateCols=('Order.EffectiveDate_Year','Order.EffectiveDate_Month', \"Y-M\"), partition='Product2Id');\nactuals_for_projection = timeseries actuals_for_projection generate 'Total Price' as 'Projected Total Price' with (partition='Product2Id', length=36, dateCols=('Order.EffectiveDate_Year','Order.EffectiveDate_Month', \"Y-M\"), seasonality = 0, ignoreLast = false);\nactuals_for_projection = foreach actuals_for_projection generate 'Product2Id' as 'Product2Id', 'Order.EffectiveDate_Year', 'Order.EffectiveDate_Month', 'Total Price' as 'Total Price', case when 'Total Price' > coalesce('Projected Total Price',0) then 'Total Price' when coalesce('Projected Total Price',0) >= 0 then 'Projected Total Price' else 0 end as 'Projected Total Price', month_last_day(toDate('Order.EffectiveDate_Year'+\"-\"+'Order.EffectiveDate_Month'+\"-27 00:00:00\",\"yyyy-MM-dd HH:mm:ss\")) as 'Month Last Day'; actuals_for_projection = filter actuals_for_projection by 'Month Last Day' > now(); actuals_for_projection = filter actuals_for_projection by toDate('Order.EffectiveDate_Year'+\"-\"+'Order.EffectiveDate_Month'+\"-01 00:00:00\",\"yyyy-MM-dd HH:mm:ss\") >= toDate(\"{{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.StartDate_Year\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Year\"),1900)).asObject()}}\"+\"-\"+\"{{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.StartDate_Month\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Month\"),\"01\")).asObject()}}\"+\"-\"+\"{{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.StartDate_Day\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Day\"),\"01\")).asObject()}}\"+\" 00:00:00\",\"yyyy-MM-dd HH:mm:ss\") && toDate('Order.EffectiveDate_Year'+\"-\"+'Order.EffectiveDate_Month'+\"-01 00:00:00\",\"yyyy-MM-dd HH:mm:ss\") <= toDate(\"{{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.EndDate_Year\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Year\"),3000)).asObject()}}\"+\"-\"+\"{{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.EndDate_Month\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Month\"),12)).asObject()}}\"+\"-\"+\"{{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.EndDate_Day\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Day\"),31)).asObject()}}\"+\" 00:00:00\",\"yyyy-MM-dd HH:mm:ss\"); actuals = filter actuals by date('Order.EffectiveDate_Year', 'Order.EffectiveDate_Month', 'Order.EffectiveDate_Day') in [dateRange([{{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.StartDate_Year\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Year\"),1900)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.StartDate_Month\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Month\"),01)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.StartDate_Day\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.StartDate_Day\"),01)).asObject()}}], [{{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.EndDate_Year\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Year\"),3000)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.EndDate_Month\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Month\"),12)).asObject()}}, {{coalesce(cell(Target_Period_Split__1.selection, 0, \"Period.EndDate_Day\"),coalesce(cell(Period_Selection_1.selection, 0, \"AcctMgrTarget.Period.EndDate_Day\"),31)).asObject()}}])];\nactuals_for_join = group actuals by ('Product2Id', 'Order.EffectiveDate_Year', 'Order.EffectiveDate_Month') full, \nactuals_for_projection by ('Product2Id', 'Order.EffectiveDate_Year', 'Order.EffectiveDate_Month');\nactuals_for_join = foreach actuals_for_join generate coalesce(actuals.'Product2Id', actuals_for_projection.'Product2Id') as 'Product2Id', coalesce(actuals.'Order.EffectiveDate_Year',actuals_for_projection.'Order.EffectiveDate_Year') as 'Order.EffectiveDate_Year', coalesce(actuals.'Order.EffectiveDate_Month',actuals_for_projection.'Order.EffectiveDate_Month') as 'Order.EffectiveDate_Month',  sum(actuals_for_projection.'Projected Total Price') as 'Projections', sum(actuals.'TotalPrice') as 'Actuals', coalesce(sum(actuals_for_projection.'Projected Total Price'),sum(actuals.'TotalPrice')) as 'Actuals & Projection';\nresult = group TargetsFilled by ('AcctMgrTargetDstr.Product.Id') left, actuals_for_join by ('Product2Id');\nresult = foreach result generate TargetsFilled.'AcctMgrTargetDstr.Product.Id' as 'AcctMgrTargetDstr.Product.Id', first(TargetsFilled.'AcctMgrTargetDstr.Product.Name') as 'AcctMgrTargetDstr.Product.Name', sum(TargetsFilled.'MonthlyTargetCurrencyValue') as 'Target Revenue', coalesce(sum(actuals_for_join.'Actuals'),0) as 'Actual Revenue', coalesce(sum(actuals_for_join.'Actuals'),0)/sum(TargetsFilled.'MonthlyTargetCurrencyValue') as 'Current Attainment', coalesce(sum(actuals_for_join.'Actuals & Projection'),0) as 'Projected Revenue', coalesce(sum(actuals_for_join.'Actuals & Projection'),0)/sum(TargetsFilled.'MonthlyTargetCurrencyValue') as 'Projected Attainment';","receiveFacetSource":{"mode":"exclude","steps":["List_of_Main_Goals_1","Period_Selection_1","TY_Account_level_tar_1","TY_Accounts_by_Rep_1","Account_Targets_Vs_A_1","PY_Targets_by_Accoun_1","PY_Targets_by_Accoun_2","PY_Account_targets_a_1","Parent_Account_Filte_1","Account_Filter_1","Account_Type_Filter_1","Account_Industry_Fil_1","Account_Geo_Filter_1"]},"selectMode":"single","strings":[],"type":"saql","useGlobal":true,"visualizationParameters":{"parameters":{"autoFitMode":"none","bins":{"breakpoints":{"high":100,"low":0},"bands":{"high":{"color":"#008000","label":""},"low":{"color":"#B22222","label":""},"medium":{"color":"#ffa500","label":""}}},"legend":{"descOrder":false,"showHeader":true,"show":true,"customSize":"auto","position":"bottom-center","inside":false},"axisMode":"multi","tooltip":{"content":{"legend":{"showBinLabel":true,"measures":[],"showNullValues":true,"customizeLegend":false,"showPercentage":true,"showDimensions":true,"showMeasures":true,"dimensions":[]}}},"visualizationType":"hbar","title":{"fontSize":14,"subtitleFontSize":11,"label":"","align":"center","subtitleLabel":""},"binValues":false,"trellis":{"flipLabels":false,"showGridLines":true,"size":[100,100],"enable":false,"type":"x","chartsPerLine":4},"columnMap":{"trellis":[],"dimensionAxis":["AcctMgrTargetDstr.Product.Name"],"plots":["Target Revenue","Actual Revenue","Current Attainment","Projected Revenue","Projected Attainment"]},"showActionMenu":true,"measureAxis2":{"sqrtScale":false,"showTitle":true,"showAxis":true,"title":"","customDomain":{"showDomain":false}},"measureAxis1":{"sqrtScale":false,"showTitle":true,"showAxis":true,"title":"","customDomain":{"showDomain":false}},"valueType":"compactNumber","theme":"wave","compactDecimalDigits":-1,"dimensionAxis":{"showTitle":true,"customSize":"auto","showAxis":true,"title":"","icons":{"useIcons":false,"iconProps":{"fit":"cover","column":"","type":"round"}}},"applyConditionalFormatting":true},"type":"chart"}},"List_of_Main_Goals_1":{"broadcastFacet":true,"groups":[],"label":"List of Main Goals","numbers":[],"query":"q = load \"MFG_AccountManagerPeriodicTargetDistribution\"; \nq = filter q by 'AcctMgrTargetDstr.ProductId' is null && 'AcctMgrTargetDstr.Account.Id' is null; \nq = filter q by {{column(Team_Members_1.selection, [\"AssignedTo.Id\"]).asEquality(\"AssignedTo.Id\")}}; q = filter q by {{column(Target_Period_Split__1.selection, [\"Self_AcctMgrTarget\"]).asEquality(\"ParentTargetNames\")}}; \nq = group q by ('Self_AcctMgrTarget');\nq = foreach q generate 'Self_AcctMgrTarget' as 'Self_AcctMgrTarget', sum('PeriodTargetCurrencyValue') as 'sum_PeriodTargetCurrencyValue';\nq = order q by ('Self_AcctMgrTarget' asc);\nq = limit q 2000;","receiveFacetSource":{"mode":"all","steps":[]},"selectMode":"multi","start":"[]","strings":[],"type":"saql","useGlobal":true,"visualizationParameters":{"parameters":{"autoFitMode":"keepLabels","bins":{"breakpoints":{"high":100,"low":0},"bands":{"high":{"color":"#008000","label":""},"low":{"color":"#B22222","label":""},"medium":{"color":"#ffa500","label":""}}},"legend":{"descOrder":false,"showHeader":true,"show":true,"customSize":"auto","position":"right-top","inside":false},"axisMode":"multi","tooltip":{"content":{"legend":{"showBinLabel":true,"measures":[],"showNullValues":true,"customizeLegend":false,"showPercentage":true,"showDimensions":true,"showMeasures":true,"dimensions":[]}}},"visualizationType":"hbar","title":{"fontSize":14,"subtitleFontSize":11,"label":"","align":"center","subtitleLabel":""},"binValues":false,"trellis":{"flipLabels":false,"showGridLines":true,"size":[100,100],"enable":false,"type":"x","chartsPerLine":4},"showActionMenu":true,"measureAxis2":{"sqrtScale":false,"showTitle":true,"showAxis":true,"title":"","customDomain":{"showDomain":false}},"measureAxis1":{"sqrtScale":false,"showTitle":true,"showAxis":true,"title":"","customDomain":{"showDomain":false}},"valueType":"compactNumber","theme":"wave","compactDecimalDigits":-1,"dimensionAxis":{"showTitle":true,"customSize":"auto","showAxis":true,"title":"","icons":{"useIcons":false,"iconProps":{"fit":"cover","column":"","type":"round"}}},"applyConditionalFormatting":true},"type":"chart"}}},"widgetStyle":{"backgroundColor":"#FFFFFF","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1},"widgets":{"link_18":{"parameters":{"destinationLink":{"name":"5e321f38-f725-4ef6-b35a-8b47869adb80"},"destinationType":"page","fontSize":16,"includeState":false,"text":"Products","textAlignment":"center","textColor":"rgb(52, 127, 219)"},"type":"link"},"link_19":{"parameters":{"destinationLink":{"name":"420d5043-9ab7-42e7-8036-964f0d5eaf2a"},"destinationType":"page","fontSize":16,"includeState":false,"text":"Accounts","textAlignment":"center","textColor":"#091A3E"},"type":"link"},"text_18":{"parameters":{"content":{"richTextContent":[{"attributes":{"size":"12px","color":"#FFFFFF","align":"center"},"insert":"Unassigned Target"}]},"interactions":[],"showActionMenu":true},"type":"text"},"link_16":{"parameters":{"destinationLink":{"name":"b051c602-86b4-4605-b62c-af8d200616fe"},"destinationType":"page","fontSize":14,"includeState":false,"text":"Target Year","textAlignment":"center","textColor":"#091A3E"},"type":"link"},"text_17":{"parameters":{"content":{"richTextContent":[{"attributes":{"size":"12px","color":"#FFFFFF","align":"center"},"insert":"Assignment Ratio"}]},"interactions":[],"showActionMenu":true},"type":"text"},"link_17":{"parameters":{"destinationLink":{"name":"5e321f38-f725-4ef6-b35a-8b47869adb80"},"destinationType":"page","fontSize":14,"includeState":false,"text":"Previous Year","textAlignment":"center","textColor":"#FFFFFF"},"type":"link"},"link_14":{"parameters":{"destinationLink":{"name":"affef20c-3835-44ef-8fbc-5436a51dfc6f"},"destinationType":"page","fontSize":14,"includeState":false,"text":"Target Year","textAlignment":"center","textColor":"#FFFFFF"},"type":"link"},"text_19":{"parameters":{"content":{"richTextContent":[{"attributes":{"size":"14px","color":"#091A3E","align":"right"},"insert":"Projection : "}]},"interactions":[],"showActionMenu":true},"type":"text"},"link_15":{"parameters":{"destinationLink":{"name":"420d5043-9ab7-42e7-8036-964f0d5eaf2a"},"destinationType":"page","fontSize":14,"includeState":false,"text":"Previous Year","textAlignment":"center","textColor":"#091A3E"},"type":"link"},"text_14":{"parameters":{"content":{"richTextContent":[{"attributes":{"size":"12px","color":"#FFFFFF","align":"center"},"insert":"Forecasted Revenue"}]},"interactions":[],"showActionMenu":true},"type":"text"},"link_12":{"parameters":{"destinationLink":{"name":"5e321f38-f725-4ef6-b35a-8b47869adb80"},"destinationType":"page","fontSize":16,"includeState":false,"text":"Products","textAlignment":"center","textColor":"#091A3E"},"type":"link"},"text_13":{"parameters":{"content":{"richTextContent":[{"attributes":{"size":"12px","color":"#FFFFFF","align":"center"},"insert":"Projected Revenue"}]},"interactions":[],"showActionMenu":true},"type":"text"},"link_13":{"parameters":{"destinationLink":{"name":"affef20c-3835-44ef-8fbc-5436a51dfc6f"},"destinationType":"page","fontSize":16,"includeState":false,"text":"Accounts","textAlignment":"center","textColor":"#091A3E"},"type":"link"},"text_16":{"parameters":{"content":{"richTextContent":[{"attributes":{"size":"16px","color":"#091A3E","align":"left"},"insert":"Target vs. Actual"}]},"interactions":[],"showActionMenu":true},"type":"text"},"link_10":{"parameters":{"destinationLink":{"name":"420d5043-9ab7-42e7-8036-964f0d5eaf2a"},"destinationType":"page","fontSize":16,"includeState":false,"text":"Accounts","textAlignment":"center","textColor":"#091A3E"},"type":"link"},"text_15":{"parameters":{"content":{"richTextContent":[{"attributes":{"size":"12px","color":"#FFFFFF","align":"center"},"insert":"Forecasted Revenue"}]},"interactions":[],"showActionMenu":true},"type":"text"},"link_11":{"parameters":{"destinationLink":{"name":"7b41086f-10d1-4b7a-ad2b-3aa2a4c4943f"},"destinationType":"page","fontSize":16,"includeState":false,"text":"Overview","textAlignment":"center","textColor":"rgb(52, 127, 219)"},"type":"link"},"text_10":{"parameters":{"content":{"richTextContent":[{"attributes":{"size":"12px","color":"#FFFFFF","align":"center"},"insert":"Actual Revenue"}]},"interactions":[],"showActionMenu":true},"type":"text"},"text_12":{"parameters":{"content":{"richTextContent":[{"attributes":{"size":"12px","color":"#FFFFFF","align":"center"},"insert":"Projected Attainment"}]},"interactions":[],"showActionMenu":true},"type":"text"},"text_11":{"parameters":{"content":{"richTextContent":[{"attributes":{"size":"12px","color":"#FFFFFF","align":"center"},"insert":"Projected Attainment"}]},"interactions":[],"showActionMenu":true},"type":"text"},"chart_9":{"parameters":{"autoFitMode":"keepLabels","max":1,"legend":{"showHeader":true,"show":false,"position":"right-top","inside":false},"tooltip":{"content":{"legend":{"showBinLabel":true,"measures":[],"showNullValues":true,"customizeLegend":false,"showPercentage":true,"showDimensions":true,"showMeasures":true,"dimensions":[]}}},"visualizationType":"polargauge","exploreLink":true,"medium":33,"title":{"fontSize":14,"subtitleFontSize":11,"label":"","align":"center","subtitleLabel":" "},"trellis":{"flipLabels":false,"showGridLines":false,"size":[150,80],"enable":true,"type":"wrap","parameters":{},"chartsPerLine":1},"icons":{"useIcons":true,"iconProps":{"fit":"cover","column":"AssignedTo.SmallPhotoUrl"}},"inner":80,"colors":{"mediumColor2":"#F29946","mediumColor1":"#FED444","lowColor1":"#F71979","lowColor2":"#CC203D","highColor1":"#7BDE4E","highColor2":"#169913"},"high":66,"columnMap":{"trellis":["AssignedTo.Name"],"plots":["Attainment"]},"showActionMenu":true,"min":0,"valueType":"percent","theme":"light","step":"PY_Team_Attainment_1","applyConditionalFormatting":true},"type":"chart"},"text_3":{"parameters":{"content":{"richTextContent":[{"attributes":{"size":"12px","color":"#FFFFFF","align":"center"},"insert":"Actual Revenue"}]},"interactions":[],"showActionMenu":true},"type":"text"},"chart_6":{"parameters":{"max":1,"legend":{"showHeader":true,"show":false,"position":"right-top","inside":false},"tooltip":{"content":{"legend":{"showBinLabel":true,"measures":[],"showNullValues":true,"customizeLegend":false,"showPercentage":true,"showDimensions":true,"showMeasures":true,"dimensions":[]}}},"visualizationType":"flatgauge","exploreLink":true,"medium":33,"title":{"fontSize":14,"subtitleFontSize":11,"label":"","align":"center","subtitleLabel":""},"trellis":{"flipLabels":false,"showGridLines":true,"size":[100,100],"enable":false,"type":"x","parameters":{},"chartsPerLine":4},"colors":{"mediumColor2":"#F29946","mediumColor1":"#FED444","lowColor1":"#F71979","lowColor2":"#CC203D","highColor1":"#7BDE4E","highColor2":"#169913"},"high":66,"columnMap":{"trellis":[],"plots":["Projected Attainment"]},"showActionMenu":true,"min":0,"valueType":"percent","theme":"dark","step":"Team_Current_Attainm_1","applyConditionalFormatting":true},"type":"chart"},"text_2":{"parameters":{"content":{"richTextContent":[{"attributes":{"size":"12px","color":"#FFFFFF","align":"center"},"insert":"Target Revenue"}]},"interactions":[],"showActionMenu":true},"type":"text"},"chart_5":{"parameters":{"stack":false,"showPoints":false,"legend":{"descOrder":false,"showHeader":true,"show":true,"customSize":"auto","position":"right-top","inside":false},"axisMode":"sync","tooltip":{"content":{"legend":{"showBinLabel":true,"measures":[],"showNullValues":true,"customizeLegend":false,"showPercentage":true,"showDimensions":true,"showMeasures":true,"dimensions":[]}}},"visualizationType":"time-combo","missingValue":"connect","exploreLink":true,"timeAxis":{"showTitle":true,"predictiveLine":{"color":"#8932ED","label":"TODAY"},"showAxis":true,"title":"Date (Year-Month)"},"title":{"fontSize":14,"subtitleFontSize":11,"label":"","align":"center","subtitleLabel":""},"trellis":{"flipLabels":false,"showGridLines":true,"size":[100,100],"enable":false,"type":"x","parameters":{},"chartsPerLine":4},"plots":{"Actual Revenue":{"mark":"bar"},"Forecasted Revenue":{"mark":"bar"},"Projected Revenue":{"mark":"line"},"Target Revenue":{"mark":"bar"}},"showActionMenu":true,"measureAxis2":{"sqrtScale":false,"showTitle":true,"showAxis":true,"title":"","customDomain":{"showDomain":false}},"measureAxis1":{"sqrtScale":false,"showTitle":false,"showAxis":true,"title":"","customDomain":{"showDomain":false}},"valueType":"compactNumber","valueTypeOnLine":"none","theme":"wave","step":"Targets_Vs_Actuals___1","compactDecimalDigits":-1,"applyConditionalFormatting":true},"type":"chart"},"text_5":{"parameters":{"content":{"richTextContent":[{"attributes":{"size":"12px","color":"#FFFFFF","align":"center"},"insert":"Team Targets"}]},"interactions":[],"showActionMenu":true},"type":"text"},"chart_8":{"parameters":{"autoFitMode":"none","bins":{"breakpoints":{"high":100,"low":0},"bands":{"high":{"color":"#008000","label":""},"low":{"color":"#B22222","label":""},"medium":{"color":"#ffa500","label":""}}},"legend":{"descOrder":false,"showHeader":true,"show":false,"customSize":"auto","position":"bottom-center","inside":false},"axisMode":"sync","tooltip":{"content":{"legend":{"showBinLabel":true,"measures":[],"showNullValues":true,"customizeLegend":false,"showPercentage":true,"showDimensions":true,"showMeasures":true,"dimensions":[]}}},"visualizationType":"hbar","exploreLink":true,"title":{"fontSize":16,"subtitleFontSize":11,"label":"","align":"left","subtitleLabel":""},"binValues":false,"trellis":{"flipLabels":false,"showGridLines":true,"size":[100,100],"enable":false,"type":"x","parameters":{},"chartsPerLine":4},"columnMap":{"trellis":[],"dimensionAxis":["AssignedTo.Name"],"plots":["Projected Attainment"," "]},"showActionMenu":true,"measureAxis2":{"sqrtScale":false,"showTitle":true,"showAxis":true,"title":"","customDomain":{"showDomain":false}},"measureAxis1":{"sqrtScale":false,"showTitle":false,"showAxis":true,"title":"","customDomain":{"showDomain":false}},"valueType":"compactNumber","theme":"light","step":"Team_projected_attai_1","compactDecimalDigits":-1,"dimensionAxis":{"showTitle":true,"customSize":"auto","showAxis":true,"title":"Team Members","icons":{"useIcons":false,"iconProps":{"fit":"cover","column":"","type":"round","parameters":{}}}},"applyConditionalFormatting":true},"type":"chart"},"text_4":{"parameters":{"content":{"richTextContent":[{"attributes":{"size":"12px","color":"#FFFFFF","align":"center"},"insert":"Projected Revenue"}]},"interactions":[],"showActionMenu":true},"type":"text"},"chart_7":{"parameters":{"max":1,"legend":{"showHeader":true,"show":false,"position":"right-top","inside":false},"tooltip":{"content":{"legend":{"showBinLabel":true,"measures":[],"showNullValues":true,"customizeLegend":false,"showPercentage":true,"showDimensions":true,"showMeasures":true,"dimensions":[]}}},"visualizationType":"flatgauge","exploreLink":true,"medium":33,"title":{"fontSize":14,"subtitleFontSize":11,"label":"","align":"center","subtitleLabel":""},"trellis":{"flipLabels":false,"showGridLines":true,"size":[100,100],"enable":false,"type":"x","parameters":{},"chartsPerLine":4},"colors":{"mediumColor2":"#F29946","mediumColor1":"#FED444","lowColor1":"#F71979","lowColor2":"#CC203D","highColor1":"#7BDE4E","highColor2":"#169913"},"high":66,"columnMap":{"trellis":[],"plots":["Projected Attainment"]},"showActionMenu":true,"min":0,"valueType":"percent","theme":"dark","step":"Self_Current_Attainm_1","applyConditionalFormatting":true},"type":"chart"},"text_7":{"parameters":{"content":{"richTextContent":[{"attributes":{"size":"12px","color":"#FFFFFF","align":"center"},"insert":"Current Attainment"}]},"interactions":[],"showActionMenu":true},"type":"text"},"chart_2":{"parameters":{"max":1,"legend":{"showHeader":true,"show":false,"position":"right-top","inside":false},"tooltip":{"content":{"legend":{"showBinLabel":true,"measures":[],"showNullValues":true,"customizeLegend":false,"showPercentage":true,"showDimensions":true,"showMeasures":true,"dimensions":[]}}},"visualizationType":"flatgauge","exploreLink":true,"medium":33,"title":{"fontSize":14,"subtitleFontSize":11,"label":"","align":"center","subtitleLabel":""},"trellis":{"flipLabels":false,"showGridLines":true,"size":[100,100],"enable":false,"type":"x","parameters":{},"chartsPerLine":4},"colors":{"mediumColor2":"#F29946","mediumColor1":"#FED444","lowColor1":"#F71979","lowColor2":"#CC203D","highColor1":"#7BDE4E","highColor2":"#169913"},"high":66,"columnMap":{"trellis":[],"plots":["Current Attainment"]},"showActionMenu":true,"min":0,"valueType":"percent","theme":"dark","step":"Team_Current_Attainm_1","applyConditionalFormatting":true},"type":"chart"},"text_6":{"parameters":{"content":{"richTextContent":[{"attributes":{"size":"12px","color":"#FFFFFF","align":"center"},"insert":"My Targets"}]},"interactions":[],"showActionMenu":true},"type":"text"},"chart_1":{"parameters":{"max":1,"legend":{"showHeader":true,"show":false,"position":"right-top","inside":false},"tooltip":{"content":{"legend":{"showBinLabel":true,"measures":[],"showNullValues":true,"customizeLegend":false,"showPercentage":true,"showDimensions":true,"showMeasures":true,"dimensions":[]}}},"visualizationType":"flatgauge","exploreLink":true,"medium":33,"title":{"fontSize":14,"subtitleFontSize":11,"label":"","align":"center","subtitleLabel":""},"trellis":{"flipLabels":false,"showGridLines":true,"size":[100,100],"enable":false,"type":"x","parameters":{},"chartsPerLine":4},"colors":{"mediumColor2":"#F29946","mediumColor1":"#FED444","lowColor1":"#F71979","lowColor2":"#CC203D","highColor1":"#7BDE4E","highColor2":"#169913"},"high":66,"columnMap":{"trellis":[],"plots":["Current Attainment"]},"showActionMenu":true,"min":0,"valueType":"percent","theme":"dark","step":"Self_Current_Attainm_1","applyConditionalFormatting":true},"type":"chart"},"text_9":{"parameters":{"content":{"richTextContent":[{"attributes":{"size":"12px","color":"#FFFFFF","align":"center"},"insert":"Current Attainment"}]},"interactions":[],"showActionMenu":true},"type":"text"},"chart_4":{"parameters":{"max":1,"legend":{"showHeader":true,"show":false,"position":"right-top","inside":false},"tooltip":{"content":{"legend":{"showBinLabel":true,"measures":[],"showNullValues":true,"customizeLegend":false,"showPercentage":true,"showDimensions":true,"showMeasures":true,"dimensions":[]}}},"visualizationType":"polargauge","exploreLink":true,"medium":33,"title":{"fontSize":16,"subtitleFontSize":11,"label":"","align":"center","subtitleLabel":" "},"trellis":{"flipLabels":false,"showGridLines":false,"size":[150,80],"enable":true,"type":"wrap","parameters":{},"chartsPerLine":1},"icons":{"useIcons":true,"iconProps":{"fit":"cover","column":"AssignedTo.SmallPhotoUrl"}},"inner":80,"colors":{"mediumColor2":"#F29946","mediumColor1":"#FED444","lowColor1":"#F71979","lowColor2":"#CC203D","highColor1":"#7BDE4E","highColor2":"#169913"},"high":66,"columnMap":{"trellis":["AssignedTo.Name"],"plots":["Attainment"]},"showActionMenu":true,"min":0,"valueType":"percent","theme":"dark","step":"Team_Attainment_1","applyConditionalFormatting":true},"type":"chart"},"text_8":{"parameters":{"content":{"richTextContent":[{"attributes":{"size":"12px","color":"#FFFFFF","align":"center"},"insert":"Target Revenue"}]},"interactions":[],"showActionMenu":true},"type":"text"},"chart_3":{"parameters":{"autoFitMode":"none","bins":{"breakpoints":{"high":100,"low":0},"bands":{"high":{"color":"#008000","label":""},"low":{"color":"#B22222","label":""},"medium":{"color":"#ffa500","label":""}}},"legend":{"descOrder":false,"showHeader":false,"show":true,"customSize":"auto","position":"bottom-center","inside":false},"axisMode":"sync","tooltip":{"content":{"legend":{"showBinLabel":true,"measures":[],"showNullValues":true,"customizeLegend":false,"showPercentage":true,"showDimensions":true,"showMeasures":true,"dimensions":[]}}},"visualizationType":"hbar","exploreLink":true,"title":{"fontSize":14,"subtitleFontSize":11,"label":"","align":"center","subtitleLabel":""},"binValues":false,"trellis":{"flipLabels":false,"showGridLines":true,"size":[100,100],"enable":false,"type":"x","parameters":{},"chartsPerLine":4},"columnMap":{"trellis":[],"dimensionAxis":["AssignedTo.Name"],"plots":["Target Revenue","Actual Revenue"]},"showActionMenu":true,"measureAxis2":{"sqrtScale":false,"showTitle":true,"showAxis":true,"title":"","customDomain":{"showDomain":false}},"measureAxis1":{"sqrtScale":false,"showTitle":false,"showAxis":true,"title":"","customDomain":{"showDomain":false}},"valueType":"compactNumber","theme":"light","step":"Targets_Vs_Actuals_f_1","compactDecimalDigits":-1,"dimensionAxis":{"showTitle":true,"customSize":"auto","showAxis":true,"title":"Team Members","icons":{"useIcons":false,"iconProps":{"fit":"cover","column":"","type":"round","parameters":{}}}},"applyConditionalFormatting":true},"type":"chart"},"link_29":{"parameters":{"destinationLink":{"name":"420d5043-9ab7-42e7-8036-964f0d5eaf2a"},"destinationType":"page","fontSize":16,"includeState":false,"text":"Accounts","textAlignment":"center","textColor":"rgb(52, 127, 219)"},"type":"link"},"link_27":{"parameters":{"destinationLink":{"name":"affef20c-3835-44ef-8fbc-5436a51dfc6f"},"destinationType":"page","fontSize":14,"includeState":false,"text":"Target Year","textAlignment":"center","textColor":"#091A3E"},"type":"link"},"link_28":{"parameters":{"destinationLink":{"name":"5e321f38-f725-4ef6-b35a-8b47869adb80"},"destinationType":"page","fontSize":16,"includeState":false,"text":"Products","textAlignment":"center","textColor":"#091A3E"},"type":"link"},"text_1":{"parameters":{"content":{"richTextContent":[{"attributes":{"size":"16px","color":"#091A3E","align":"left"},"insert":"Team Targets"}]},"interactions":[],"showActionMenu":true},"type":"text"},"link_25":{"parameters":{"destinationLink":{"name":"bdfe8489-27a5-4488-8357-f9e4415f3972"},"destinationType":"page","fontSize":16,"includeState":false,"text":"Overview","textAlignment":"center","textColor":"#091A3E"},"type":"link"},"link_26":{"parameters":{"destinationLink":{"name":"420d5043-9ab7-42e7-8036-964f0d5eaf2a"},"destinationType":"page","fontSize":14,"includeState":false,"text":"Previous Year","textAlignment":"center","textColor":"#FFFFFF"},"type":"link"},"link_23":{"parameters":{"destinationLink":{"name":"b051c602-86b4-4605-b62c-af8d200616fe"},"destinationType":"page","fontSize":16,"includeState":false,"text":"Products","textAlignment":"center","textColor":"rgb(52, 127, 219)"},"type":"link"},"link_24":{"parameters":{"destinationLink":{"name":"affef20c-3835-44ef-8fbc-5436a51dfc6f"},"destinationType":"page","fontSize":16,"includeState":false,"text":"Accounts","textAlignment":"center","textColor":"#091A3E"},"type":"link"},"link_21":{"parameters":{"destinationLink":{"name":"5e321f38-f725-4ef6-b35a-8b47869adb80"},"destinationType":"page","fontSize":14,"includeState":false,"text":"Previous Year","textAlignment":"center","textColor":"#091A3E"},"type":"link"},"link_22":{"parameters":{"destinationLink":{"name":"b051c602-86b4-4605-b62c-af8d200616fe"},"destinationType":"page","fontSize":14,"includeState":false,"text":"Target Year","textAlignment":"center","textColor":"#FFFFFF"},"type":"link"},"link_20":{"parameters":{"destinationLink":{"name":"7b41086f-10d1-4b7a-ad2b-3aa2a4c4943f"},"destinationType":"page","fontSize":16,"includeState":false,"text":"Overview","textAlignment":"center","textColor":"#091A3E"},"type":"link"},"number_5":{"parameters":{"compact":false,"exploreLink":true,"interactions":[],"measureField":"Assignment Ratio","numberColor":"#FFFFFF","numberSize":32,"showActionMenu":true,"step":"Target_Assignment_Ra_1","textAlignment":"center","title":"","titleColor":"#091A3E","titleSize":16,"tooltip":{"customizeTooltip":false}},"type":"number"},"number_4":{"parameters":{"compact":true,"exploreLink":true,"interactions":[],"measureField":"sum_TotalPrice","numberColor":"#FFFFFF","numberSize":32,"showActionMenu":true,"step":"Team_Current_Attainm_1","textAlignment":"center","title":"","titleColor":"#091A3E","titleSize":16,"tooltip":{"customizeTooltip":false}},"type":"number"},"number_3":{"parameters":{"compact":true,"exploreLink":true,"interactions":[],"measureField":"sum_TotalPrice","numberColor":"#FFFFFF","numberSize":32,"showActionMenu":true,"step":"Self_Current_Attainm_1","textAlignment":"center","title":"","titleColor":"#091A3E","titleSize":16,"tooltip":{"customizeTooltip":false}},"type":"number"},"number_2":{"parameters":{"compact":true,"exploreLink":true,"interactions":[],"measureField":"sum_PeriodTargetCurrencyValue","numberColor":"#FFFFFF","numberSize":32,"showActionMenu":true,"step":"Team_Current_Attainm_1","textAlignment":"center","title":"","titleColor":"#091A3E","titleSize":16,"tooltip":{"customizeTooltip":false}},"type":"number"},"number_1":{"parameters":{"compact":true,"exploreLink":true,"interactions":[],"measureField":"sum_PeriodTargetCurrencyValue","numberColor":"#FFFFFF","numberSize":32,"showActionMenu":true,"step":"Self_Current_Attainm_1","textAlignment":"center","title":"","titleColor":"#091A3E","titleSize":16,"tooltip":{"customizeTooltip":false}},"type":"number"},"link_38":{"parameters":{"destinationLink":{"name":"dfda6cd4-7707-481f-b677-eb783b759077"},"destinationType":"page","fontSize":14,"includeState":false,"text":"Quantity","textAlignment":"center","textColor":"#FFFFFF"},"type":"link"},"link_39":{"parameters":{"destinationLink":{"name":"a6635662-b1ca-4d63-b9e9-362917dd7d92"},"destinationType":"page","fontSize":14,"includeState":false,"text":"Target Year","textAlignment":"center","textColor":"#FFFFFF"},"type":"link"},"link_36":{"parameters":{"destinationLink":{"name":"b051c602-86b4-4605-b62c-af8d200616fe"},"destinationType":"page","fontSize":14,"includeState":false,"text":"Revenue","textAlignment":"center","textColor":"#0070D2"},"type":"link"},"link_37":{"parameters":{"destinationLink":{"name":"5e321f38-f725-4ef6-b35a-8b47869adb80"},"destinationType":"page","fontSize":14,"includeState":false,"text":"Revenue","textAlignment":"center","textColor":"#0070D2"},"type":"link"},"link_34":{"parameters":{"destinationLink":{"name":"dfda6cd4-7707-481f-b677-eb783b759077"},"destinationType":"page","fontSize":14,"includeState":false,"text":"Quantity","textAlignment":"center","textColor":"#0070D2"},"type":"link"},"link_35":{"parameters":{"destinationLink":{"name":"a6635662-b1ca-4d63-b9e9-362917dd7d92"},"destinationType":"page","fontSize":14,"includeState":false,"text":"Quantity","textAlignment":"center","textColor":"#FFFFFF"},"type":"link"},"link_32":{"parameters":{"destinationLink":{"name":"b051c602-86b4-4605-b62c-af8d200616fe"},"destinationType":"page","fontSize":14,"includeState":false,"text":"Revenue","textAlignment":"center","textColor":"#FFFFFF"},"type":"link"},"link_33":{"parameters":{"destinationLink":{"name":"5e321f38-f725-4ef6-b35a-8b47869adb80"},"destinationType":"page","fontSize":14,"includeState":false,"text":"Revenue","textAlignment":"center","textColor":"#FFFFFF"},"type":"link"},"link_30":{"parameters":{"destinationLink":{"name":"7b41086f-10d1-4b7a-ad2b-3aa2a4c4943f"},"destinationType":"page","fontSize":16,"includeState":false,"text":"Overview","textAlignment":"center","textColor":"#091A3E"},"type":"link"},"number_9":{"parameters":{"compact":true,"exploreLink":true,"interactions":[],"measureField":"Forecasted Revenue","numberColor":"#FFFFFF","numberSize":32,"showActionMenu":true,"step":"Team_Current_Attainm_1","textAlignment":"center","title":"","titleColor":"#091A3E","titleSize":16,"tooltip":{"customizeTooltip":false}},"type":"number"},"number_8":{"parameters":{"compact":true,"exploreLink":true,"interactions":[],"measureField":"sum_Projected Actuals","numberColor":"#FFFFFF","numberSize":32,"showActionMenu":true,"step":"Self_Current_Attainm_1","textAlignment":"center","title":"","titleColor":"#091A3E","titleSize":16,"tooltip":{"customizeTooltip":false}},"type":"number"},"link_31":{"parameters":{"destinationLink":{"name":"a6635662-b1ca-4d63-b9e9-362917dd7d92"},"destinationType":"page","fontSize":14,"includeState":false,"text":"Quantity","textAlignment":"center","textColor":"#0070D2"},"type":"link"},"number_7":{"parameters":{"compact":true,"exploreLink":true,"interactions":[],"measureField":"sum_Projected Actuals","numberColor":"#FFFFFF","numberSize":32,"showActionMenu":true,"step":"Team_Current_Attainm_1","textAlignment":"center","title":"","titleColor":"#091A3E","titleSize":16,"tooltip":{"customizeTooltip":false}},"type":"number"},"number_6":{"parameters":{"compact":true,"exploreLink":true,"interactions":[],"measureField":"Unassigned","numberColor":"#FFFFFF","numberSize":32,"showActionMenu":true,"step":"Target_Assignment_Ra_1","textAlignment":"center","title":"","titleColor":"#091A3E","titleSize":16,"tooltip":{"customizeTooltip":false}},"type":"number"},"link_3":{"parameters":{"destinationLink":{"name":"b051c602-86b4-4605-b62c-af8d200616fe"},"destinationType":"page","fontSize":16,"includeState":false,"text":"Products","textAlignment":"center","textColor":"#091A3E"},"type":"link"},"link_4":{"parameters":{"destinationLink":{"name":"bdfe8489-27a5-4488-8357-f9e4415f3972"},"destinationType":"page","fontSize":14,"includeState":false,"text":"Target Year","textAlignment":"center","textColor":"#FFFFFF"},"type":"link"},"link_1":{"parameters":{"destinationLink":{"name":"bdfe8489-27a5-4488-8357-f9e4415f3972"},"destinationType":"page","fontSize":16,"includeState":false,"text":"Overview","textAlignment":"center","textColor":"rgb(52, 127, 219)"},"type":"link"},"link_2":{"parameters":{"destinationLink":{"name":"affef20c-3835-44ef-8fbc-5436a51dfc6f"},"destinationType":"page","fontSize":16,"includeState":false,"text":"Accounts","textAlignment":"center","textColor":"rgb(52, 127, 219)"},"type":"link"},"link_41":{"parameters":{"destinationLink":{"name":"a6635662-b1ca-4d63-b9e9-362917dd7d92"},"destinationType":"page","fontSize":14,"includeState":false,"text":"Target Year","textAlignment":"center","textColor":"#091A3E"},"type":"link"},"link_42":{"parameters":{"destinationLink":{"name":"dfda6cd4-7707-481f-b677-eb783b759077"},"destinationType":"page","fontSize":14,"includeState":false,"text":"Previous Year","textAlignment":"center","textColor":"#FFFFFF"},"type":"link"},"link_40":{"parameters":{"destinationLink":{"name":"dfda6cd4-7707-481f-b677-eb783b759077"},"destinationType":"page","fontSize":14,"includeState":false,"text":"Previous Year","textAlignment":"center","textColor":"#091A3E"},"type":"link"},"link_9":{"parameters":{"destinationLink":{"name":"7b41086f-10d1-4b7a-ad2b-3aa2a4c4943f"},"destinationType":"page","fontSize":14,"includeState":false,"text":"Previous Year","textAlignment":"center","textColor":"#FFFFFF"},"type":"link"},"pillbox_2":{"parameters":{"compact":false,"exploreLink":false,"fontSize":14,"selectedTab":{"backgroundColor":"#0070D2","borderColor":"#C6D3E1","borderEdges":["all"],"borderWidth":1,"textColor":"#FFFFFF"},"showActionMenu":true,"step":"Projections_Toggle_1","textColor":"#0070D2"},"type":"pillbox"},"link_7":{"parameters":{"destinationLink":{"name":"bdfe8489-27a5-4488-8357-f9e4415f3972"},"destinationType":"page","fontSize":14,"includeState":false,"text":"Target Year","textAlignment":"center","textColor":"#091A3E"},"type":"link"},"pillbox_1":{"parameters":{"compact":false,"displayTemplate":"[]","exploreLink":false,"fontSize":16,"selectedTab":{"backgroundColor":"rgb(0, 112, 210)","borderColor":"rgb(0, 112, 210)","borderEdges":[],"borderWidth":4,"textColor":"#FFFFFF"},"showActionMenu":false,"step":"Cummulative___Over_t_1","textColor":"#091A3E"},"type":"pillbox"},"link_8":{"parameters":{"destinationLink":{"name":"7b41086f-10d1-4b7a-ad2b-3aa2a4c4943f"},"destinationType":"page","fontSize":14,"includeState":false,"text":"Previous Year","textAlignment":"center","textColor":"#091A3E"},"type":"link"},"link_5":{"parameters":{"destinationLink":{"name":"bdfe8489-27a5-4488-8357-f9e4415f3972"},"destinationType":"page","fontSize":16,"includeState":false,"text":"Overview","textAlignment":"center","textColor":"#091A3E"},"type":"link"},"link_6":{"parameters":{"destinationLink":{"name":"b051c602-86b4-4605-b62c-af8d200616fe"},"destinationType":"page","fontSize":16,"includeState":false,"text":"Products","textAlignment":"center","textColor":"#091A3E"},"type":"link"},"pillbox_3":{"parameters":{"compact":false,"exploreLink":false,"fontSize":14,"selectedTab":{"backgroundColor":"#0070D2","borderColor":"#C6D3E1","borderEdges":["all"],"borderWidth":1,"textColor":"#FFFFFF"},"showActionMenu":true,"step":"Attaintment___Actual_1","textColor":"#0070D2"},"type":"pillbox"},"number_10":{"parameters":{"compact":true,"exploreLink":true,"interactions":[],"measureField":"Forecasted Revenue","numberColor":"#FFFFFF","numberSize":32,"showActionMenu":true,"step":"Self_Current_Attainm_1","textAlignment":"center","title":"","titleColor":"#091A3E","titleSize":16,"tooltip":{"customizeTooltip":false}},"type":"number"},"container_1":{"parameters":{"alignmentX":"left","alignmentY":"top","fit":"original","interactions":[]},"type":"container"},"container_2":{"parameters":{"alignmentX":"left","alignmentY":"top","fit":"original","interactions":[]},"type":"container"},"container_3":{"parameters":{"alignmentX":"left","alignmentY":"top","fit":"original","interactions":[]},"type":"container"},"container_4":{"parameters":{"alignmentX":"left","alignmentY":"top","fit":"original","interactions":[]},"type":"container"},"container_5":{"parameters":{"alignmentX":"left","alignmentY":"top","fit":"original","interactions":[]},"type":"container"},"container_6":{"parameters":{"alignmentX":"left","alignmentY":"top","fit":"original","interactions":[]},"type":"container"},"container_7":{"parameters":{"alignmentX":"left","alignmentY":"top","fit":"original","interactions":[]},"type":"container"},"container_8":{"parameters":{"alignmentX":"left","alignmentY":"top","fit":"original","interactions":[]},"type":"container"},"container_9":{"parameters":{"alignmentX":"left","alignmentY":"top","fit":"original","interactions":[]},"type":"container"},"chart_20":{"parameters":{"autoFitMode":"none","bins":{"breakpoints":{"high":100,"low":0},"bands":{"high":{"color":"#008000","label":""},"low":{"color":"#B22222","label":""},"medium":{"color":"#ffa500","label":""}}},"legend":{"descOrder":false,"showHeader":true,"show":true,"customSize":"auto","position":"bottom-center","inside":false},"axisMode":"multi","tooltip":{"content":{"legend":{"showBinLabel":true,"measures":[],"showNullValues":true,"customizeLegend":false,"showPercentage":true,"showDimensions":true,"showMeasures":true,"dimensions":[]}}},"visualizationType":"hbar","exploreLink":true,"title":{"fontSize":14,"subtitleFontSize":11,"label":"","align":"center","subtitleLabel":""},"binValues":false,"trellis":{"flipLabels":false,"showGridLines":true,"size":[100,100],"enable":false,"type":"x","parameters":{},"chartsPerLine":4},"columnMap":{"trellis":[],"dimensionAxis":["AcctMgrTargetDstr.Product.Name"],"plots":["Target Revenue","Actual Revenue","Current Attainment","Projected Revenue","Projected Attainment"]},"showActionMenu":true,"measureAxis2":{"sqrtScale":false,"showTitle":true,"showAxis":true,"title":"","customDomain":{"showDomain":false}},"measureAxis1":{"sqrtScale":false,"showTitle":true,"showAxis":true,"title":"","customDomain":{"showDomain":false}},"valueType":"compactNumber","theme":"wave","step":"TY_Product_Targets_1","compactDecimalDigits":-1,"dimensionAxis":{"showTitle":true,"customSize":"auto","showAxis":true,"title":"","icons":{"useIcons":false,"iconProps":{"fit":"cover","column":"","type":"round","parameters":{}}}},"applyConditionalFormatting":true},"type":"chart"},"filterpanel_1":{"parameters":{"filterItemOptions":{"propertyColor":"#54698D","valueColor":"#16325C"},"filters":[{"dataset":{"name":"MFG_AccountManagerPeriodicTargetDistribution"},"field":"AcctMgrTarget.MeasureType"}],"showAllFilters":false},"type":"filterpanel"},"text_46":{"parameters":{"content":{"richTextContent":[{"attributes":{"size":"12px","color":"#091A3E","align":"left"},"insert":"Product Name"}]},"interactions":[],"showActionMenu":true},"type":"text"},"text_43":{"parameters":{"content":{"richTextContent":[{"attributes":{"size":"12px","color":"#091A3E","align":"left"},"insert":"Industry"}]},"interactions":[],"showActionMenu":true},"type":"text"},"text_42":{"parameters":{"content":{"richTextContent":[{"attributes":{"size":"12px","color":"#091A3E","align":"left"},"insert":"Account Type"}]},"interactions":[],"showActionMenu":true},"type":"text"},"text_45":{"parameters":{"content":{"richTextContent":[{"attributes":{"size":"12px","color":"#091A3E","align":"left"},"insert":"Product Family"}]},"interactions":[],"showActionMenu":true},"type":"text"},"text_44":{"parameters":{"content":{"richTextContent":[{"attributes":{"size":"12px","color":"#091A3E","align":"left"},"insert":"Geography"}]},"interactions":[],"showActionMenu":true},"type":"text"},"text_41":{"parameters":{"content":{"richTextContent":[{"attributes":{"size":"12px","color":"#091A3E","align":"left"},"insert":"Account"}]},"interactions":[],"showActionMenu":true},"type":"text"},"text_40":{"parameters":{"content":{"richTextContent":[{"attributes":{"size":"16px","color":"#091A3E","align":"left"},"insert":"Product Targets by Team Members"}]},"interactions":[],"showActionMenu":true},"type":"text"},"chart_19":{"parameters":{"stack":false,"showPoints":true,"legend":{"descOrder":false,"showHeader":true,"show":true,"customSize":"auto","position":"right-top","inside":false},"axisMode":"sync","tooltip":{"content":{"legend":{"showBinLabel":true,"measures":[],"showNullValues":true,"customizeLegend":false,"showPercentage":true,"showDimensions":true,"showMeasures":true,"dimensions":[]}}},"visualizationType":"time-combo","missingValue":"connect","exploreLink":true,"timeAxis":{"showTitle":true,"predictiveLine":{"color":"#8932ED","label":"TODAY"},"showAxis":true,"title":"Date (Year-Month)"},"title":{"fontSize":14,"subtitleFontSize":11,"label":"","align":"center","subtitleLabel":""},"trellis":{"flipLabels":false,"showGridLines":true,"size":[100,100],"enable":false,"type":"x","parameters":{},"chartsPerLine":4},"plots":{"PY Target Revenue":{"mark":"bar"},"PY Actual Revenue":{"mark":"bar"},"TY Target Revenue":{"mark":"bar"},"Projected Revenue":{"mark":"line"}},"columnMap":{"timeAxis":["Period.StartDate_Year~~~Period.StartDate_Month"],"trellis":[],"plots":["TY Target Revenue","PY Target Revenue","PY Actual Revenue","Projected Revenue"]},"showActionMenu":true,"measureAxis2":{"sqrtScale":false,"showTitle":true,"showAxis":true,"title":"","customDomain":{"showDomain":false}},"measureAxis1":{"sqrtScale":false,"showTitle":false,"showAxis":true,"title":"","customDomain":{"showDomain":false}},"valueType":"compactNumber","valueTypeOnLine":"none","theme":"wave","step":"PY_Account_targets_a_1","compactDecimalDigits":-1,"applyConditionalFormatting":true},"type":"chart"},"chart_18":{"parameters":{"autoFitMode":"none","legend":{"descOrder":false,"showHeader":true,"show":true,"customSize":"auto","position":"right-top","inside":false},"axisMode":"multi","totalSumMode":"none","tooltip":{"content":{"legend":{"showBinLabel":true,"measures":[],"showNullValues":true,"customizeLegend":false,"showPercentage":true,"showDimensions":true,"showMeasures":true,"dimensions":[]}}},"visualizationType":"stackhbar","exploreLink":true,"title":{"fontSize":14,"subtitleFontSize":11,"label":"","align":"center","subtitleLabel":""},"trellis":{"flipLabels":false,"showGridLines":true,"size":[100,100],"enable":false,"type":"x","parameters":{},"chartsPerLine":4},"columnMap":{"split":["AcctMgrTargetDstr.Account.Name"],"trellis":[],"dimensionAxis":["AssignedTo.Name"],"plots":["sum_PeriodTargetCurrencyValue"]},"showActionMenu":true,"measureAxis2":{"sqrtScale":false,"showTitle":true,"showAxis":true,"title":"","customDomain":{"showDomain":false}},"measureAxis1":{"sqrtScale":false,"showTitle":true,"showAxis":true,"title":"Target Revenue","customDomain":{"showDomain":false}},"normalize":false,"valueType":"compactNumber","theme":"light","step":"PY_Targets_by_Accoun_2","compactDecimalDigits":-1,"dimensionAxis":{"showTitle":true,"customSize":"auto","showAxis":true,"title":"Team Member","icons":{"useIcons":false,"iconProps":{"fit":"cover","column":"","type":"round","parameters":{}}}},"applyConditionalFormatting":true},"type":"chart"},"image_1":{"parameters":{"alignmentX":"center","alignmentY":"center","fit":"original","image":{"name":"IconGrouppng21","namespace":""},"interactions":[]},"type":"image"},"chart_17":{"parameters":{"autoFitMode":"none","bins":{"breakpoints":{"high":100,"low":0},"bands":{"high":{"color":"#008000","label":""},"low":{"color":"#B22222","label":""},"medium":{"color":"#ffa500","label":""}}},"legend":{"descOrder":false,"showHeader":true,"show":true,"customSize":"auto","position":"bottom-center","inside":false},"axisMode":"multi","tooltip":{"content":{"legend":{"showBinLabel":true,"measures":[],"showNullValues":true,"customizeLegend":false,"showPercentage":true,"showDimensions":true,"showMeasures":true,"dimensions":[]}}},"visualizationType":"hbar","exploreLink":true,"title":{"fontSize":14,"subtitleFontSize":11,"label":"","align":"center","subtitleLabel":""},"binValues":false,"trellis":{"flipLabels":false,"showGridLines":true,"size":[100,100],"enable":false,"type":"x","parameters":{},"chartsPerLine":4},"columnMap":{"trellis":[],"dimensionAxis":["AcctMgrTargetDstr.Account.Name"],"plots":["TY Target Revenue","PY Target Revenue","Change from PY","PY Actual Revenue","PY Attainment"]},"showActionMenu":true,"measureAxis2":{"sqrtScale":false,"showTitle":true,"showAxis":true,"title":"","customDomain":{"showDomain":false}},"measureAxis1":{"sqrtScale":false,"showTitle":true,"showAxis":true,"title":"","customDomain":{"showDomain":false}},"valueType":"compactNumber","theme":"wave","step":"PY_Targets_by_Accoun_1","compactDecimalDigits":-1,"dimensionAxis":{"showTitle":true,"customSize":"auto","showAxis":true,"title":"","icons":{"useIcons":false,"iconProps":{"fit":"cover","column":"","type":"round","parameters":{}}}},"applyConditionalFormatting":true},"type":"chart"},"chart_16":{"parameters":{"stack":false,"showPoints":true,"legend":{"descOrder":false,"showHeader":true,"show":true,"customSize":"auto","position":"right-top","inside":false},"axisMode":"sync","tooltip":{"content":{"legend":{"showBinLabel":true,"measures":[],"showNullValues":true,"customizeLegend":false,"showPercentage":true,"showDimensions":true,"showMeasures":true,"dimensions":[]}}},"visualizationType":"time-combo","missingValue":"connect","exploreLink":true,"timeAxis":{"showTitle":true,"predictiveLine":{"color":"#8932ED","label":"TODAY"},"showAxis":true,"title":"Date (Year-Month)"},"title":{"fontSize":14,"subtitleFontSize":11,"label":"","align":"center","subtitleLabel":""},"trellis":{"flipLabels":false,"showGridLines":true,"size":[100,100],"enable":false,"type":"x","parameters":{},"chartsPerLine":4},"plots":{"Actual Revenue":{"mark":"bar"},"Projected Revenue":{"mark":"line"},"Target Revenue":{"mark":"bar"}},"columnMap":{"timeAxis":["Period.StartDate_Year~~~Period.StartDate_Month"],"trellis":[],"plots":["Target Revenue","Actual Revenue","Projected Revenue"]},"showActionMenu":true,"measureAxis2":{"sqrtScale":false,"showTitle":true,"showAxis":true,"title":"","customDomain":{"showDomain":false}},"measureAxis1":{"sqrtScale":false,"showTitle":false,"showAxis":true,"title":"","customDomain":{"showDomain":false}},"valueType":"compactNumber","valueTypeOnLine":"none","theme":"sunriseLight","step":"Account_Targets_Vs_A_1","compactDecimalDigits":-1,"applyConditionalFormatting":true},"type":"chart"},"listselector_11":{"parameters":{"compact":false,"displayMode":"filter","exploreLink":false,"filterStyle":{"titleColor":"#54698D","valueColor":"#16325C"},"instant":false,"measureField":"none","showActionMenu":false,"step":"Account_Filter_1","title":""},"type":"listselector"},"image_3":{"parameters":{"alignmentX":"center","alignmentY":"center","fit":"fitwidth","image":{"name":"manufacturing_app_iconpng114","namespace":""},"interactions":[]},"type":"image"},"chart_15":{"parameters":{"autoFitMode":"keepLabels","bins":{"breakpoints":{"high":100,"low":0},"bands":{"high":{"color":"#008000","label":""},"low":{"color":"#B22222","label":""},"medium":{"color":"#ffa500","label":""}}},"legend":{"descOrder":false,"showHeader":true,"show":true,"customSize":"auto","position":"right-top","inside":false},"highColor":"#009DDF","tooltip":{"content":{"legend":{"showBinLabel":true,"measures":[],"showNullValues":true,"customizeLegend":false,"showPercentage":true,"showDimensions":true,"showMeasures":true,"dimensions":[]}}},"lowColor":"#E2F4FC","visualizationType":"heatmap","exploreLink":true,"title":{"fontSize":14,"subtitleFontSize":11,"label":"","align":"center","subtitleLabel":""},"binValues":false,"showActionMenu":true,"x":{"showTitle":true,"showAxis":true,"title":"Account"},"y":{"showTitle":true,"showAxis":true,"title":"Team Member"},"theme":"light","step":"TY_Accounts_by_Rep_1","applyConditionalFormatting":true},"type":"chart"},"listselector_10":{"parameters":{"compact":false,"displayMode":"filter","exploreLink":false,"filterStyle":{"titleColor":"#54698D","valueColor":"#16325C"},"instant":false,"measureField":"none","showActionMenu":false,"step":"Parent_Account_Filte_1","title":""},"type":"listselector"},"image_2":{"parameters":{"alignmentX":"center","alignmentY":"center","fit":"original","image":{"name":"IconUserpng","namespace":""},"interactions":[]},"type":"image"},"chart_14":{"parameters":{"autoFitMode":"none","bins":{"breakpoints":{"high":100,"low":0},"bands":{"high":{"color":"#008000","label":""},"low":{"color":"#B22222","label":""},"medium":{"color":"#ffa500","label":""}}},"legend":{"descOrder":false,"showHeader":true,"show":true,"customSize":"auto","position":"bottom-center","inside":false},"axisMode":"multi","tooltip":{"content":{"legend":{"showBinLabel":true,"measures":[],"showNullValues":true,"customizeLegend":false,"showPercentage":true,"showDimensions":true,"showMeasures":true,"dimensions":[]}}},"visualizationType":"hbar","exploreLink":true,"title":{"fontSize":14,"subtitleFontSize":11,"label":"","align":"center","subtitleLabel":""},"binValues":false,"trellis":{"flipLabels":false,"showGridLines":true,"size":[100,100],"enable":false,"type":"x","parameters":{},"chartsPerLine":4},"columnMap":{"trellis":[],"dimensionAxis":["AcctMgrTargetDstr.Account.Name"],"plots":["Target Revenue","Actual Revenue","Current Attainment","Projected Revenue","Projected Attainment"]},"showActionMenu":true,"measureAxis2":{"sqrtScale":false,"showTitle":true,"showAxis":true,"title":"","customDomain":{"showDomain":false}},"measureAxis1":{"sqrtScale":false,"showTitle":true,"showAxis":true,"title":"","customDomain":{"showDomain":false}},"valueType":"compactNumber","theme":"wave","step":"TY_Account_level_tar_1","compactDecimalDigits":-1,"dimensionAxis":{"showTitle":true,"customSize":"auto","showAxis":true,"title":"","icons":{"useIcons":false,"iconProps":{"fit":"cover","column":"","type":"round","parameters":{}}}},"applyConditionalFormatting":true},"type":"chart"},"chart_13":{"parameters":{"legend":{"descOrder":false,"showHeader":true,"show":true,"customSize":"auto","position":"bottom-center","inside":false},"tooltip":{"content":{"legend":{"showBinLabel":true,"measures":[],"showNullValues":true,"customizeLegend":false,"showPercentage":true,"showDimensions":true,"showMeasures":true,"dimensions":[]}}},"visualizationType":"scatter","exploreLink":true,"title":{"fontSize":14,"subtitleFontSize":11,"label":"","align":"center","subtitleLabel":""},"trellis":{"flipLabels":false,"showGridLines":true,"size":[100,100],"enable":false,"type":"x","parameters":{},"chartsPerLine":4},"radiusRatio":5,"columnMap":{"r":["TY Target Revenue"],"x":["PY Actual Revenue"],"y":["TY Target Revenue"],"trellis":[],"plots":["AssignedTo.Name"]},"showActionMenu":true,"x":{"sqrtScale":false,"showZero":true,"showTitle":true,"showAxis":true,"title":"PY Actual Revenue","customDomain":{"showDomain":false}},"y":{"sqrtScale":false,"showZero":true,"showTitle":true,"showAxis":true,"title":"TY Target Revenue","customDomain":{"showDomain":false}},"theme":"wave","step":"Scatter_plot__of_Current__1","applyConditionalFormatting":true},"type":"chart"},"chart_12":{"parameters":{"autoFitMode":"none","bins":{"breakpoints":{"high":100,"low":0},"bands":{"high":{"color":"#008000","label":""},"low":{"color":"#B22222","label":""},"medium":{"color":"#ffa500","label":""}}},"legend":{"descOrder":false,"showHeader":true,"show":false,"customSize":"auto","position":"right-top","inside":false},"axisMode":"sync","tooltip":{"content":{"legend":{"showBinLabel":true,"measures":[],"showNullValues":true,"customizeLegend":false,"showPercentage":true,"showDimensions":true,"showMeasures":true,"dimensions":[]}}},"visualizationType":"hbar","exploreLink":true,"title":{"fontSize":14,"subtitleFontSize":11,"label":"","align":"center","subtitleLabel":""},"binValues":false,"trellis":{"flipLabels":false,"showGridLines":true,"size":[100,100],"enable":false,"type":"x","parameters":{},"chartsPerLine":4},"columnMap":{"trellis":[],"dimensionAxis":["AssignedTo.Name"],"plots":["Projected Attainment"," ","  "]},"showActionMenu":true,"measureAxis2":{"sqrtScale":false,"showTitle":true,"showAxis":true,"title":"","customDomain":{"showDomain":false}},"measureAxis1":{"sqrtScale":false,"showTitle":false,"showAxis":true,"title":"","customDomain":{"showDomain":false}},"valueType":"compactNumber","theme":"light","step":"PY_Team_projected_at_1","compactDecimalDigits":-1,"dimensionAxis":{"showTitle":true,"customSize":"auto","showAxis":true,"title":"Team Members","icons":{"useIcons":false,"iconProps":{"fit":"cover","column":"","type":"round","parameters":{}}}},"applyConditionalFormatting":true},"type":"chart"},"chart_11":{"parameters":{"autoFitMode":"keepLabels","stack":false,"showPoints":true,"legend":{"descOrder":false,"showHeader":true,"show":true,"customSize":"auto","position":"right-top","inside":false},"axisMode":"sync","tooltip":{"content":{"legend":{"showBinLabel":true,"measures":[],"showNullValues":true,"customizeLegend":false,"showPercentage":true,"showDimensions":true,"showMeasures":true,"dimensions":[]}}},"visualizationType":"time-combo","missingValue":"connect","exploreLink":true,"timeAxis":{"showTitle":true,"predictiveLine":{"color":"#8932ED","label":"TODAY"},"showAxis":true,"title":"Date (Year-Month)"},"title":{"fontSize":14,"subtitleFontSize":11,"label":"","align":"center","subtitleLabel":""},"trellis":{"flipLabels":false,"showGridLines":true,"size":[100,100],"enable":false,"type":"x","parameters":{},"chartsPerLine":4},"plots":{"PY Target Revenue":{"mark":"bar"},"PY Projected Revenue":{"mark":"line"},"PY Actual Revenue":{"mark":"bar"},"PY Forecasted Revenue":{"mark":"bar"},"TY Target Revenue":{"mark":"bar"}},"showActionMenu":true,"measureAxis2":{"sqrtScale":false,"showTitle":true,"showAxis":true,"title":"","customDomain":{"showDomain":false}},"measureAxis1":{"sqrtScale":false,"showTitle":false,"showAxis":true,"title":"","customDomain":{"showDomain":false}},"valueType":"compactNumber","valueTypeOnLine":"none","theme":"wave","step":"PY_Targets_Vs_Actual_2","compactDecimalDigits":-1,"applyConditionalFormatting":true},"type":"chart"},"chart_10":{"parameters":{"autoFitMode":"none","bins":{"breakpoints":{"high":100,"low":0},"bands":{"high":{"color":"#008000","label":""},"low":{"color":"#B22222","label":""},"medium":{"color":"#ffa500","label":""}}},"legend":{"descOrder":false,"showHeader":true,"show":true,"customSize":"auto","position":"bottom-center","inside":false},"axisMode":"sync","tooltip":{"content":{"legend":{"showBinLabel":true,"measures":[],"showNullValues":true,"customizeLegend":false,"showPercentage":true,"showDimensions":true,"showMeasures":true,"dimensions":[]}}},"visualizationType":"hbar","exploreLink":true,"title":{"fontSize":14,"subtitleFontSize":11,"label":"","align":"center","subtitleLabel":""},"binValues":false,"trellis":{"flipLabels":false,"showGridLines":true,"size":[100,100],"enable":false,"type":"x","parameters":{},"chartsPerLine":4},"columnMap":{"trellis":[],"dimensionAxis":["AssignedTo.Name"],"plots":["TY Target Revenue","PY Target Revenue","PY Actual Revenue"]},"showActionMenu":true,"measureAxis2":{"sqrtScale":false,"showTitle":true,"showAxis":true,"title":"","customDomain":{"showDomain":false}},"measureAxis1":{"sqrtScale":false,"showTitle":false,"showAxis":true,"title":"","customDomain":{"showDomain":false}},"valueType":"compactNumber","theme":"light","step":"PY_Targets_Vs_Actual_1","compactDecimalDigits":-1,"dimensionAxis":{"showTitle":true,"customSize":"auto","showAxis":true,"title":"Team Members","icons":{"useIcons":false,"iconProps":{"fit":"cover","column":"","type":"round","parameters":{}}}},"applyConditionalFormatting":true},"type":"chart"},"text_39":{"parameters":{"content":{"richTextContent":[{"attributes":{"size":"12px","color":"#091A3E","align":"left"},"insert":"Parent Account"}]},"interactions":[],"showActionMenu":true},"type":"text"},"text_36":{"parameters":{"content":{"richTextContent":[{"attributes":{"size":"16px","color":"#091A3E","align":"left"},"insert":"Product Targets vs. Actual Revenue"}]},"interactions":[],"showActionMenu":true},"type":"text"},"text_35":{"parameters":{"content":{"richTextContent":[{"attributes":{"size":"16px","color":"#091A3E","align":"left"},"insert":"Team Member Performance by Product"}]},"interactions":[],"showActionMenu":true},"type":"text"},"text_38":{"parameters":{"content":{"richTextContent":[{"attributes":{"size":"16px","color":"#091A3E","align":"left"},"insert":"Product Targets Performance"}]},"interactions":[],"showActionMenu":true},"type":"text"},"text_37":{"parameters":{"content":{"richTextContent":[{"attributes":{"size":"16px","color":"#091A3E","align":"left"},"insert":"Product Targets"}]},"interactions":[],"showActionMenu":true},"type":"text"},"text_32":{"parameters":{"content":{"richTextContent":[{"attributes":{"size":"16px","color":"#091A3E","align":"left"},"insert":"Accounts Targets by Team Members"}]},"interactions":[],"showActionMenu":true},"type":"text"},"text_31":{"parameters":{"content":{"richTextContent":[{"attributes":{"size":"16px","color":"#091A3E","align":"left"},"insert":"Projected Attainment"}]},"interactions":[],"showActionMenu":true},"type":"text"},"text_34":{"parameters":{"content":{"richTextContent":[{"attributes":{"size":"16px","color":"#091A3E","align":"left"},"insert":"Product Targets"}]},"interactions":[],"showActionMenu":true},"type":"text"},"text_33":{"parameters":{"content":{"richTextContent":[{"attributes":{"size":"16px","color":"#091A3E","align":"left"},"insert":"Account Targets Performance"}]},"interactions":[],"showActionMenu":true},"type":"text"},"text_30":{"parameters":{"content":{"richTextContent":[{"attributes":{"size":"16px","color":"#091A3E","align":"left"},"insert":"Account Targets"}]},"interactions":[],"showActionMenu":true},"type":"text"},"chart_27":{"parameters":{"autoFitMode":"none","bins":{"breakpoints":{"high":100,"low":0},"bands":{"high":{"color":"#008000","label":""},"low":{"color":"#B22222","label":""},"medium":{"color":"#ffa500","label":""}}},"legend":{"descOrder":false,"showHeader":true,"show":true,"customSize":"auto","position":"right-top","inside":false},"axisMode":"multi","tooltip":{"content":{"legend":{"showBinLabel":true,"measures":[],"showNullValues":true,"customizeLegend":false,"showPercentage":true,"showDimensions":true,"showMeasures":true,"dimensions":[]}}},"visualizationType":"hbar","exploreLink":true,"title":{"fontSize":14,"subtitleFontSize":11,"label":"","align":"center","subtitleLabel":""},"binValues":false,"trellis":{"flipLabels":false,"showGridLines":true,"size":[100,100],"enable":false,"type":"x","parameters":{},"chartsPerLine":4},"columnMap":{"trellis":[],"dimensionAxis":["AcctMgrTargetDstr.Product.Name"],"plots":["TY Target#","PY Target#","Change from PY","PY Actuals#","PY Attainment"]},"showActionMenu":true,"measureAxis2":{"sqrtScale":false,"showTitle":true,"showAxis":true,"title":"","customDomain":{"showDomain":false}},"measureAxis1":{"sqrtScale":false,"showTitle":true,"showAxis":true,"title":"","customDomain":{"showDomain":false}},"valueType":"compactNumber","theme":"wave","step":"PY_Product_targets___1","compactDecimalDigits":-1,"dimensionAxis":{"showTitle":true,"customSize":"auto","showAxis":true,"title":"","icons":{"useIcons":false,"iconProps":{"fit":"cover","column":"","type":"round","parameters":{}}}},"applyConditionalFormatting":true},"type":"chart"},"chart_26":{"parameters":{"autoFitMode":"none","bins":{"breakpoints":{"high":100,"low":0},"bands":{"high":{"color":"#008000","label":""},"low":{"color":"#B22222","label":""},"medium":{"color":"#ffa500","label":""}}},"legend":{"descOrder":false,"showHeader":true,"show":true,"customSize":"auto","position":"bottom-center","inside":false},"axisMode":"multi","tooltip":{"content":{"legend":{"showBinLabel":true,"measures":[],"showNullValues":true,"customizeLegend":false,"showPercentage":true,"showDimensions":true,"showMeasures":true,"dimensions":[]}}},"visualizationType":"hbar","exploreLink":true,"title":{"fontSize":14,"subtitleFontSize":11,"label":"","align":"center","subtitleLabel":""},"binValues":false,"trellis":{"flipLabels":false,"showGridLines":true,"size":[100,100],"enable":false,"type":"x","parameters":{},"chartsPerLine":4},"columnMap":{"trellis":[],"dimensionAxis":["AcctMgrTargetDstr.Product.Name"],"plots":["Target#","Actuals#","Current Attainment","Projected Actuals#","Projected Attainment"]},"showActionMenu":true,"measureAxis2":{"sqrtScale":false,"showTitle":true,"showAxis":true,"title":"","customDomain":{"showDomain":false}},"measureAxis1":{"sqrtScale":false,"showTitle":true,"showAxis":true,"title":"","customDomain":{"showDomain":false}},"valueType":"compactNumber","theme":"wave","step":"TY_Product_Targets___1","compactDecimalDigits":-1,"dimensionAxis":{"showTitle":true,"customSize":"auto","showAxis":true,"title":"","icons":{"useIcons":false,"iconProps":{"fit":"cover","column":"","type":"round","parameters":{}}}},"applyConditionalFormatting":true},"type":"chart"},"chart_25":{"parameters":{"stack":false,"showPoints":true,"legend":{"descOrder":false,"showHeader":true,"show":true,"customSize":"auto","position":"right-top","inside":false},"axisMode":"sync","tooltip":{"content":{"legend":{"showBinLabel":true,"measures":[],"showNullValues":true,"customizeLegend":false,"showPercentage":true,"showDimensions":true,"showMeasures":true,"dimensions":[]}}},"visualizationType":"time-combo","missingValue":"connect","exploreLink":true,"timeAxis":{"showTitle":true,"predictiveLine":{"color":"#8932ED","label":"TODAY"},"showAxis":true,"title":"Date (Year-Month)"},"title":{"fontSize":14,"subtitleFontSize":11,"label":"","align":"center","subtitleLabel":""},"trellis":{"flipLabels":false,"showGridLines":true,"size":[100,100],"enable":false,"type":"x","parameters":{},"chartsPerLine":4},"plots":{"PY Target Revenue":{"mark":"bar"},"PY Actual Revenue":{"mark":"bar"},"TY Target Revenue":{"mark":"bar"},"Projected Revenue":{"mark":"line"}},"columnMap":{"timeAxis":["Period.StartDate_Year~~~Period.StartDate_Month"],"trellis":[],"plots":["TY Target Revenue","PY Target Revenue","PY Actual Revenue","Projected Revenue"]},"showActionMenu":true,"measureAxis2":{"sqrtScale":false,"showTitle":true,"showAxis":true,"title":"","customDomain":{"showDomain":false}},"measureAxis1":{"sqrtScale":false,"showTitle":false,"showAxis":true,"title":"","customDomain":{"showDomain":false}},"valueType":"compactNumber","valueTypeOnLine":"none","theme":"wave","step":"PY_Product_targets_a_1","compactDecimalDigits":-1,"applyConditionalFormatting":true},"type":"chart"},"chart_24":{"parameters":{"autoFitMode":"none","legend":{"descOrder":false,"showHeader":true,"show":true,"customSize":"auto","position":"right-top","inside":false},"axisMode":"multi","totalSumMode":"none","tooltip":{"content":{"legend":{"showBinLabel":true,"measures":[],"showNullValues":true,"customizeLegend":false,"showPercentage":true,"showDimensions":true,"showMeasures":true,"dimensions":[]}}},"visualizationType":"stackhbar","exploreLink":true,"title":{"fontSize":14,"subtitleFontSize":11,"label":"","align":"center","subtitleLabel":""},"trellis":{"flipLabels":false,"showGridLines":true,"size":[100,100],"enable":false,"type":"x","parameters":{},"chartsPerLine":4},"columnMap":{"split":["AcctMgrTargetDstr.Product.Name"],"trellis":[],"dimensionAxis":["AssignedTo.Name"],"plots":["sum_PeriodTargetCurrencyValue"]},"showActionMenu":true,"measureAxis2":{"sqrtScale":false,"showTitle":true,"showAxis":true,"title":"","customDomain":{"showDomain":false}},"measureAxis1":{"sqrtScale":false,"showTitle":true,"showAxis":true,"title":"Target","customDomain":{"showDomain":false}},"normalize":false,"valueType":"compactNumber","theme":"light","step":"PY_Targets_by_Produc_1","compactDecimalDigits":-1,"dimensionAxis":{"showTitle":true,"customSize":"auto","showAxis":true,"title":"Team Member","icons":{"useIcons":false,"iconProps":{"fit":"cover","column":"","type":"round","parameters":{}}}},"applyConditionalFormatting":true},"type":"chart"},"chart_23":{"parameters":{"autoFitMode":"none","bins":{"breakpoints":{"high":100,"low":0},"bands":{"high":{"color":"#008000","label":""},"low":{"color":"#B22222","label":""},"medium":{"color":"#ffa500","label":""}}},"legend":{"descOrder":false,"showHeader":true,"show":true,"customSize":"auto","position":"bottom-center","inside":false},"axisMode":"multi","tooltip":{"content":{"legend":{"showBinLabel":true,"measures":[],"showNullValues":true,"customizeLegend":false,"showPercentage":true,"showDimensions":true,"showMeasures":true,"dimensions":[]}}},"visualizationType":"hbar","exploreLink":true,"title":{"fontSize":14,"subtitleFontSize":11,"label":"","align":"center","subtitleLabel":""},"binValues":false,"trellis":{"flipLabels":false,"showGridLines":true,"size":[100,100],"enable":false,"type":"x","parameters":{},"chartsPerLine":4},"columnMap":{"trellis":[],"dimensionAxis":["AcctMgrTargetDstr.Product.Name"],"plots":["TY Target Revenue","PY Target Revenue","Change from PY","PY Actual Revenue","PY Attainment"]},"showActionMenu":true,"measureAxis2":{"sqrtScale":false,"showTitle":true,"showAxis":true,"title":"","customDomain":{"showDomain":false}},"measureAxis1":{"sqrtScale":false,"showTitle":true,"showAxis":true,"title":"","customDomain":{"showDomain":false}},"valueType":"compactNumber","theme":"wave","step":"PY_Product_targets_1","compactDecimalDigits":-1,"dimensionAxis":{"showTitle":true,"customSize":"auto","showAxis":true,"title":"","icons":{"useIcons":false,"iconProps":{"fit":"cover","column":"","type":"round","parameters":{}}}},"applyConditionalFormatting":true},"type":"chart"},"chart_22":{"parameters":{"stack":false,"showPoints":true,"legend":{"descOrder":false,"showHeader":true,"show":true,"customSize":"auto","position":"right-top","inside":false},"axisMode":"sync","tooltip":{"content":{"legend":{"showBinLabel":true,"measures":[],"showNullValues":true,"customizeLegend":false,"showPercentage":true,"showDimensions":true,"showMeasures":true,"dimensions":[]}}},"visualizationType":"time-combo","missingValue":"connect","exploreLink":true,"timeAxis":{"showTitle":true,"predictiveLine":{"color":"#8932ED","label":"TODAY"},"showAxis":true,"title":"Date (Year-Month)"},"title":{"fontSize":14,"subtitleFontSize":11,"label":"","align":"center","subtitleLabel":""},"trellis":{"flipLabels":false,"showGridLines":true,"size":[100,100],"enable":false,"type":"x","parameters":{},"chartsPerLine":4},"plots":{"Actual Revenue":{"mark":"bar"},"Projected Revenue":{"mark":"line"},"Target Revenue":{"mark":"bar"}},"columnMap":{"timeAxis":["Period.StartDate_Year~~~Period.StartDate_Month"],"trellis":[],"plots":["Target Revenue","Actual Revenue","Projected Revenue"]},"showActionMenu":true,"measureAxis2":{"sqrtScale":false,"showTitle":true,"showAxis":true,"title":"","customDomain":{"showDomain":false}},"measureAxis1":{"sqrtScale":false,"showTitle":false,"showAxis":true,"title":"","customDomain":{"showDomain":false}},"valueType":"compactNumber","valueTypeOnLine":"none","theme":"wave","step":"TY_Product_Targets_V_1","compactDecimalDigits":-1,"applyConditionalFormatting":true},"type":"chart"},"chart_21":{"parameters":{"autoFitMode":"keepLabels","bins":{"breakpoints":{"high":100,"low":0},"bands":{"high":{"color":"#008000","label":""},"low":{"color":"#B22222","label":""},"medium":{"color":"#ffa500","label":""}}},"legend":{"descOrder":false,"showHeader":true,"show":true,"customSize":"auto","position":"right-top","inside":false},"highColor":"#009DDF","tooltip":{"content":{"legend":{"showBinLabel":true,"measures":[],"showNullValues":true,"customizeLegend":false,"showPercentage":true,"showDimensions":true,"showMeasures":true,"dimensions":[]}}},"lowColor":"#E2F4FC","visualizationType":"heatmap","exploreLink":true,"title":{"fontSize":14,"subtitleFontSize":11,"label":"","align":"center","subtitleLabel":""},"binValues":false,"showActionMenu":true,"x":{"showTitle":true,"showAxis":true,"title":"Products"},"y":{"showTitle":true,"showAxis":true,"title":"Team Member"},"theme":"light","step":"TY_Products_by_Reps_1","applyConditionalFormatting":true},"type":"chart"},"listselector_7":{"parameters":{"compact":false,"displayMode":"filter","exploreLink":false,"filterStyle":{"titleColor":"#54698D","valueColor":"#16325C"},"instant":false,"measureField":"none","showActionMenu":false,"step":"Account_Geo_Filter_1","title":""},"type":"listselector"},"listselector_6":{"parameters":{"compact":false,"displayMode":"filter","displayTemplate":"[AcctMgrTargetDstr.Product.Name]","exploreLink":false,"filterStyle":{"titleColor":"#54698D","valueColor":"#16325C"},"instant":false,"measureField":"none","showActionMenu":false,"step":"Product_Name_Filter_1","title":""},"type":"listselector"},"listselector_9":{"parameters":{"compact":false,"displayMode":"filter","exploreLink":false,"filterStyle":{"titleColor":"#54698D","valueColor":"#16325C"},"instant":false,"measureField":"none","showActionMenu":false,"step":"Account_Type_Filter_1","title":""},"type":"listselector"},"listselector_8":{"parameters":{"compact":false,"displayMode":"filter","exploreLink":false,"filterStyle":{"titleColor":"#54698D","valueColor":"#16325C"},"instant":false,"measureField":"none","showActionMenu":false,"step":"Account_Industry_Fil_1","title":""},"type":"listselector"},"listselector_3":{"parameters":{"compact":false,"displayMode":"filter","displayTemplate":"[AcctMgrTarget.Period.FullyQualifiedLabel]","exploreLink":false,"filterStyle":{"titleColor":"#54698D","valueColor":"#16325C"},"instant":false,"measureField":"none","showActionMenu":false,"step":"Period_Selection_1","title":"Financial Year"},"type":"listselector"},"text_29":{"parameters":{"content":{"richTextContent":[{"attributes":{"size":"16px","color":"#091A3E","align":"left"},"insert":"Account Targets vs. Actual Revenue"}]},"interactions":[],"showActionMenu":true},"type":"text"},"listselector_2":{"parameters":{"compact":false,"displayMode":"filter","exploreLink":false,"filterStyle":{"titleColor":"#54698D","valueColor":"#16325C"},"instant":false,"measureField":"none","showActionMenu":false,"step":"List_of_Main_Goals_1","title":"Targets"},"type":"listselector"},"text_28":{"parameters":{"content":{"richTextContent":[{"attributes":{"size":"16px","color":"#091A3E","align":"left"},"insert":"Team Member Performance by Account"}]},"interactions":[],"showActionMenu":true},"type":"text"},"listselector_5":{"parameters":{"compact":false,"displayMode":"filter","exploreLink":false,"filterStyle":{"titleColor":"#54698D","valueColor":"#16325C"},"instant":false,"measureField":"none","showActionMenu":false,"step":"Product_Family_Filte_1","title":""},"type":"listselector"},"listselector_4":{"parameters":{"compact":false,"displayMode":"filter","displayTemplate":"[TargetPeriodName]","exploreLink":false,"filterStyle":{"titleColor":"#54698D","valueColor":"#16325C"},"instant":false,"measureField":"none","showActionMenu":false,"step":"Target_Period_Split__1","title":"Target Period Split"},"type":"listselector"},"text_25":{"parameters":{"content":{"richTextContent":[{"attributes":{"size":"16px","color":"#091A3E","align":"left"},"insert":"Team Performance"}]},"interactions":[],"showActionMenu":true},"type":"text"},"text_24":{"parameters":{"content":{"richTextContent":[{"attributes":{"size":"16px","color":"#091A3E","align":"left"},"insert":"Team Member Performance"}]},"interactions":[],"showActionMenu":true},"type":"text"},"text_27":{"parameters":{"content":{"richTextContent":[{"attributes":{"size":"16px","color":"#091A3E","align":"left"},"insert":"Account Targets"}]},"interactions":[],"showActionMenu":true},"type":"text"},"text_26":{"parameters":{"content":{"richTextContent":[{"attributes":{"size":"16px","color":"#091A3E","align":"left"},"insert":"Team Performance"}]},"interactions":[],"showActionMenu":true},"type":"text"},"text_21":{"parameters":{"content":{"richTextContent":[{"attributes":{"size":"16px","color":"#091A3E","align":"left"},"insert":"Target vs. Actual"}]},"interactions":[],"showActionMenu":true},"type":"text"},"text_20":{"parameters":{"content":{"richTextContent":[{"attributes":{"size":"16px","color":"#091A3E","align":"left"},"insert":"Projected Attainment"}]},"interactions":[],"showActionMenu":true},"type":"text"},"text_23":{"parameters":{"content":{"richTextContent":[{"attributes":{"size":"16px","color":"#091A3E","align":"center"},"insert":"Target Attainment"}]},"interactions":[],"showActionMenu":true},"type":"text"},"text_22":{"parameters":{"content":{"richTextContent":[{"attributes":{"size":"16px","color":"#091A3E","align":"center"},"insert":"Target Attainment"}]},"interactions":[],"showActionMenu":true},"type":"text"},"listselector_1":{"parameters":{"compact":false,"displayMode":"filter","displayTemplate":"[AssignedTo.Name]","exploreLink":false,"filterStyle":{"titleColor":"#54698D","valueColor":"#16325C"},"instant":false,"measureField":"none","showActionMenu":false,"step":"Team_Members_1","title":"Team Member"},"type":"listselector"}}}